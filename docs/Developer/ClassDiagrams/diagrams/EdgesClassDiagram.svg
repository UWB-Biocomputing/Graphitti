<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3308px" preserveAspectRatio="none" style="width:1786px;height:3308px;" version="1.1" viewBox="0 0 1786 3308" width="1786px" zoomAndPan="magnify"><defs><filter height="300%" id="f5sj471lea4my" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[935a686a552498c9fe3db149d943753f]
class AllDSSynapses--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="444.9453" id="AllDSSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="848" x="6" y="2149.5"/><ellipse cx="380.25" cy="2165.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.2188,2171.1406 Q382.6406,2171.4375 382,2171.5781 Q381.3594,2171.7344 380.6563,2171.7344 Q378.1563,2171.7344 376.8281,2170.0938 Q375.5156,2168.4375 375.5156,2165.3125 Q375.5156,2162.1875 376.8281,2160.5313 Q378.1563,2158.875 380.6563,2158.875 Q381.3594,2158.875 382,2159.0313 Q382.6563,2159.1875 383.2188,2159.4844 L383.2188,2162.2031 Q382.5938,2161.625 382,2161.3594 Q381.4063,2161.0781 380.7813,2161.0781 Q379.4375,2161.0781 378.75,2162.1563 Q378.0625,2163.2188 378.0625,2165.3125 Q378.0625,2167.4063 378.75,2168.4844 Q379.4375,2169.5469 380.7813,2169.5469 Q381.4063,2169.5469 382,2169.2813 Q382.5938,2169 383.2188,2168.4219 L383.2188,2171.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="400.75" y="2169.6543">AllDSSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2181.5" y2="2181.5"/><ellipse cx="17" cy="2192.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2195.7104">D_ : BGFLOAT*</text><ellipse cx="17" cy="2205.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="2208.5151">F_ : BGFLOAT*</text><ellipse cx="17" cy="2218.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2221.3198">U_ : BGFLOAT*</text><ellipse cx="17" cy="2230.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="2234.1245">r_ : BGFLOAT*</text><ellipse cx="17" cy="2243.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="2246.9292">u_ : BGFLOAT*</text><ellipse cx="17" cy="2256.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="2259.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2266.3281" y2="2266.3281"/><ellipse cx="17" cy="2277.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="2280.5386">AllDSSynapses()</text><ellipse cx="17" cy="2290.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="26" y="2293.3433">AllDSSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="17" cy="2302.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="2306.1479">~AllDSSynapses()</text><ellipse cx="17" cy="2315.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="26" y="2318.9526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="17,2323.5469,21,2327.5469,17,2331.5469,13,2327.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="26" y="2331.7573">allocDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2341.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2344.562">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="17" cy="2354.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2357.3667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2361.9609,21,2365.9609,17,2369.9609,13,2365.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="2370.1714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="17,2374.7656,21,2378.7656,17,2382.7656,13,2378.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="26" y="2382.9761">copyDeviceToHost(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2392.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2395.7808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2405.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2408.5854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2418.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2421.3901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2425.9844,21,2429.9844,17,2433.9844,13,2429.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="822" x="26" y="2434.1948">copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2443.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="26" y="2446.9995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="17,2451.5938,21,2455.5938,17,2459.5938,13,2455.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="26" y="2459.8042">deleteDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2469.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="26" y="2472.6089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2482.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2485.4136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="17" cy="2495.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="2498.2183">printParameters() : void {query}</text><ellipse cx="17" cy="2507.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="2511.0229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="17,2515.6172,21,2519.6172,17,2523.6172,13,2519.6172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="26" y="2523.8276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="17" cy="2533.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="2536.6323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="2546.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="2549.437">setEdgeClassID() : void</text><ellipse cx="17" cy="2559.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="2562.2417">setupEdges() : void</text><polygon fill="#FFFF44" points="17,2566.8359,21,2570.8359,17,2574.8359,13,2570.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="26" y="2575.0464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="17,2579.6406,21,2583.6406,17,2587.6406,13,2583.6406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2587.8511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[09c0093d34d85daed484b6b6f446313a]
class AllDynamicSTDPSynapses--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="444.9453" id="AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="910" x="865" y="2853"/><ellipse cx="1236.75" cy="2869" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1239.7188,2874.6406 Q1239.1406,2874.9375 1238.5,2875.0781 Q1237.8594,2875.2344 1237.1563,2875.2344 Q1234.6563,2875.2344 1233.3281,2873.5938 Q1232.0156,2871.9375 1232.0156,2868.8125 Q1232.0156,2865.6875 1233.3281,2864.0313 Q1234.6563,2862.375 1237.1563,2862.375 Q1237.8594,2862.375 1238.5,2862.5313 Q1239.1563,2862.6875 1239.7188,2862.9844 L1239.7188,2865.7031 Q1239.0938,2865.125 1238.5,2864.8594 Q1237.9063,2864.5781 1237.2813,2864.5781 Q1235.9375,2864.5781 1235.25,2865.6563 Q1234.5625,2866.7188 1234.5625,2868.8125 Q1234.5625,2870.9063 1235.25,2871.9844 Q1235.9375,2873.0469 1237.2813,2873.0469 Q1237.9063,2873.0469 1238.5,2872.7813 Q1239.0938,2872.5 1239.7188,2871.9219 L1239.7188,2874.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1257.25" y="2873.1543">AllDynamicSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="2885" y2="2885"/><ellipse cx="876" cy="2896" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="2899.2104">D_ : BGFLOAT*</text><ellipse cx="876" cy="2908.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="885" y="2912.0151">F_ : BGFLOAT*</text><ellipse cx="876" cy="2921.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="2924.8198">U_ : BGFLOAT*</text><ellipse cx="876" cy="2934.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="885" y="2937.6245">r_ : BGFLOAT*</text><ellipse cx="876" cy="2947.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="885" y="2950.4292">u_ : BGFLOAT*</text><ellipse cx="876" cy="2960.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="885" y="2963.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="2969.8281" y2="2969.8281"/><ellipse cx="876" cy="2980.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="885" y="2984.0386">AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="2993.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="885" y="2996.8433">AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="876" cy="3006.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="885" y="3009.6479">~AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="3019.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="885" y="3022.4526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="876,3027.0469,880,3031.0469,876,3035.0469,872,3031.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="885" y="3035.2573">allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3044.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3048.062">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="876" cy="3057.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3060.8667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3065.4609,880,3069.4609,876,3073.4609,872,3069.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="885" y="3073.6714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="876,3078.2656,880,3082.2656,876,3086.2656,872,3082.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="885" y="3086.4761">copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3096.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3099.2808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3108.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3112.0854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3121.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3124.8901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3129.4844,880,3133.4844,876,3137.4844,872,3133.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="885" y="3137.6948">copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3147.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="885" y="3150.4995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="876,3155.0938,880,3159.0938,876,3163.0938,872,3159.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="885" y="3163.3042">deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3172.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="885" y="3176.1089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3185.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3188.9136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="876" cy="3198.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="885" y="3201.7183">printParameters() : void {query}</text><ellipse cx="876" cy="3211.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="885" y="3214.5229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="876,3219.1172,880,3223.1172,876,3227.1172,872,3223.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="885" y="3227.3276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="876" cy="3236.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="885" y="3240.1323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="876" cy="3249.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="885" y="3252.937">setEdgeClassID() : void</text><ellipse cx="876" cy="3262.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="885" y="3265.7417">setupEdges() : void</text><polygon fill="#FFFF44" points="876,3270.3359,880,3274.3359,876,3278.3359,872,3274.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="885" y="3278.5464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="876,3283.1406,880,3287.1406,876,3291.1406,872,3287.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3291.3511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[06f12ec46b87224fd0e1c514fed4a6e4]
class AllEdges--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="585.7969" id="AllEdges" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="482.5" y="244"/><ellipse cx="844.75" cy="260" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M844.8594,255.3438 L843.7031,260.4219 L846.0313,260.4219 L844.8594,255.3438 Z M843.375,253.1094 L846.3594,253.1094 L849.7188,265.5 L847.2656,265.5 L846.5,262.4375 L843.2188,262.4375 L842.4688,265.5 L840.0313,265.5 L843.375,253.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="865.25" y="264.1543">AllEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="276" y2="276"/><ellipse cx="493.5" cy="287" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="502.5" y="290.2104">W_ : BGFLOAT*</text><ellipse cx="493.5" cy="299.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="502.5" y="303.0151">summationPoint_ : BGFLOAT**</text><ellipse cx="493.5" cy="312.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="502.5" y="315.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="493.5" cy="325.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="502.5" y="328.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="493.5" cy="338.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="502.5" y="341.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="493.5" cy="351.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="502.5" y="354.2339">inUse_ : bool*</text><ellipse cx="493.5" cy="363.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="502.5" y="367.0386">type_ : edgeType*</text><ellipse cx="493.5" cy="376.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="502.5" y="379.8433">countVertices_ : int</text><ellipse cx="493.5" cy="389.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="502.5" y="392.6479">destVertexIndex_ : int*</text><ellipse cx="493.5" cy="402.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="502.5" y="405.4526">sourceVertexIndex_ : int*</text><polygon fill="none" points="493.5,410.0469,497.5,414.0469,493.5,418.0469,489.5,414.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="418.2573">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="493.5,422.8516,497.5,426.8516,493.5,430.8516,489.5,426.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="502.5" y="431.062">fileLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="437.6563" y2="437.6563"/><ellipse cx="493.5" cy="448.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="502.5" y="451.8667">AllEdges()</text><ellipse cx="493.5" cy="461.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="502.5" y="464.6714">AllEdges(const int numVertices, const int maxEdges)</text><ellipse cx="493.5" cy="474.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="502.5" y="477.4761">~AllEdges()</text><polygon fill="#FFFF44" points="493.5,482.0703,497.5,486.0703,493.5,490.0703,489.5,486.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="502.5" y="490.2808">edgeOrdinalToType(const int typeOrdinal) : edgeType</text><ellipse cx="493.5" cy="499.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="502.5" y="503.0854">addEdge(BGSIZE&amp; iEdg, edgeType type, const int srcVertex, const int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT) : void</text><ellipse cx="493.5" cy="512.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="502.5" y="515.8901">advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void</text><ellipse cx="493.5" cy="525.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="502.5" y="528.6948">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><ellipse cx="493.5" cy="538.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="502.5" y="541.4995">advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="493.5" cy="551.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="502.5" y="554.3042">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="493.5" cy="563.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="502.5" y="567.1089">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="576.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="502.5" y="579.9136">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="589.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="502.5" y="592.7183">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="602.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="605.5229">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="615.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="618.3276">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="627.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="502.5" y="631.1323">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="640.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="731" x="502.5" y="643.937">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><ellipse cx="493.5" cy="653.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="502.5" y="656.7417">createEdgeIndexMap(shared_ptr&lt;EdgeIndexMap&gt; edgeIndexMap) : void</text><ellipse cx="493.5" cy="666.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="297" x="502.5" y="669.5464">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="679.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="502.5" y="682.3511">eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="691.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="502.5" y="695.1558">load(Archive&amp; archive) : void</text><ellipse cx="493.5" cy="704.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="502.5" y="707.9604">loadParameters() : void</text><ellipse cx="493.5" cy="717.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="720.7651">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="493.5" cy="730.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="733.5698">printParameters() : void {query}</text><polygon fill="#FFFF44" points="493.5,738.1641,497.5,742.1641,493.5,746.1641,489.5,742.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="502.5" y="746.3745">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="755.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="502.5" y="759.1792">save(Archive&amp; archive) : void {query}</text><ellipse cx="493.5" cy="768.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="502.5" y="771.9839">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="493.5" cy="781.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="502.5" y="784.7886">setEdgeClassID() : void</text><ellipse cx="493.5" cy="794.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="502.5" y="797.5933">setupEdges() : void</text><polygon fill="#FFFF44" points="493.5,802.1875,497.5,806.1875,493.5,810.1875,489.5,806.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="502.5" y="810.3979">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="493.5,814.9922,497.5,818.9922,493.5,822.9922,489.5,818.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="823.2026">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[96f31d00847e9628d93d2720c47b9604]
class AllNeuroEdges--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="188.8516" id="AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="681" y="915.5"/><ellipse cx="825.25" cy="931.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M828.2188,937.1406 Q827.6406,937.4375 827,937.5781 Q826.3594,937.7344 825.6563,937.7344 Q823.1563,937.7344 821.8281,936.0938 Q820.5156,934.4375 820.5156,931.3125 Q820.5156,928.1875 821.8281,926.5313 Q823.1563,924.875 825.6563,924.875 Q826.3594,924.875 827,925.0313 Q827.6563,925.1875 828.2188,925.4844 L828.2188,928.2031 Q827.5938,927.625 827,927.3594 Q826.4063,927.0781 825.7813,927.0781 Q824.4375,927.0781 823.75,928.1563 Q823.0625,929.2188 823.0625,931.3125 Q823.0625,933.4063 823.75,934.4844 Q824.4375,935.5469 825.7813,935.5469 Q826.4063,935.5469 827,935.2813 Q827.5938,935 828.2188,934.4219 L828.2188,937.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="845.75" y="935.6543">AllNeuroEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="947.5" y2="947.5"/><ellipse cx="692" cy="958.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="701" y="961.7104">psr_ : BGFLOAT*</text><ellipse cx="692" cy="971.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="356" x="701" y="974.5151">SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="981.1094" y2="981.1094"/><ellipse cx="692" cy="992.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="701" y="995.3198">AllNeuroEdges()</text><ellipse cx="692" cy="1004.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="701" y="1008.1245">~AllNeuroEdges()</text><ellipse cx="692" cy="1017.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="701" y="1020.9292">edgSign(const edgeType type) : int</text><ellipse cx="692" cy="1030.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="701" y="1033.7339">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="692,1038.3281,696,1042.3281,692,1046.3281,688,1042.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="701" y="1046.5386">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="692" cy="1056.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="701" y="1059.3433">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="692" cy="1068.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="701" y="1072.1479">setupEdges() : void</text><polygon fill="#FFFF44" points="692,1076.7422,696,1080.7422,692,1084.7422,688,1080.7422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="701" y="1084.9526">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="692,1089.5469,696,1093.5469,692,1097.5469,688,1093.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="701" y="1097.7573">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[635988d62f36dba7a8b9baa086d12f03]
class AllSTDPSynapses--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="841.8906" id="AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="862" x="889" y="1951"/><ellipse cx="1262.75" cy="1967" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1265.7188,1972.6406 Q1265.1406,1972.9375 1264.5,1973.0781 Q1263.8594,1973.2344 1263.1563,1973.2344 Q1260.6563,1973.2344 1259.3281,1971.5938 Q1258.0156,1969.9375 1258.0156,1966.8125 Q1258.0156,1963.6875 1259.3281,1962.0313 Q1260.6563,1960.375 1263.1563,1960.375 Q1263.8594,1960.375 1264.5,1960.5313 Q1265.1563,1960.6875 1265.7188,1960.9844 L1265.7188,1963.7031 Q1265.0938,1963.125 1264.5,1962.8594 Q1263.9063,1962.5781 1263.2813,1962.5781 Q1261.9375,1962.5781 1261.25,1963.6563 Q1260.5625,1964.7188 1260.5625,1966.8125 Q1260.5625,1968.9063 1261.25,1969.9844 Q1261.9375,1971.0469 1263.2813,1971.0469 Q1263.9063,1971.0469 1264.5,1970.7813 Q1265.0938,1970.5 1265.7188,1969.9219 L1265.7188,1972.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="1283.25" y="1971.1543">AllSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="1983" y2="1983"/><ellipse cx="900" cy="1994" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="1997.2104">Aneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2006.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2010.0151">Aneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2019.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="2022.8198">Apos_E_ : BGFLOAT</text><ellipse cx="900" cy="2032.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2035.6245">Apos_I_ : BGFLOAT</text><ellipse cx="900" cy="2045.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="909" y="2048.4292">Wex_E_ : BGFLOAT</text><ellipse cx="900" cy="2058.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="909" y="2061.2339">Wex_I_ : BGFLOAT</text><ellipse cx="900" cy="2070.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="909" y="2074.0386">defaultSTDPgap_ : BGFLOAT</text><ellipse cx="900" cy="2083.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2086.8433">tauneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2096.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2099.6479">tauneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2109.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2112.4526">taupos_E_ : BGFLOAT</text><ellipse cx="900" cy="2122.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2125.2573">taupos_I_ : BGFLOAT</text><ellipse cx="900" cy="2134.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="909" y="2138.062">tauspost_E_ : BGFLOAT</text><ellipse cx="900" cy="2147.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="909" y="2150.8667">tauspost_I_ : BGFLOAT</text><ellipse cx="900" cy="2160.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2163.6714">tauspre_E_ : BGFLOAT</text><ellipse cx="900" cy="2173.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2176.4761">tauspre_I_ : BGFLOAT</text><ellipse cx="900" cy="2186.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2189.2808">Aneg_ : BGFLOAT*</text><ellipse cx="900" cy="2198.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2202.0854">Apos_ : BGFLOAT*</text><ellipse cx="900" cy="2211.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2214.8901">STDPgap_ : BGFLOAT*</text><ellipse cx="900" cy="2224.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="909" y="2227.6948">Wex_ : BGFLOAT*</text><ellipse cx="900" cy="2237.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2240.4995">muneg_ : BGFLOAT*</text><ellipse cx="900" cy="2250.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2253.3042">mupos_ : BGFLOAT*</text><ellipse cx="900" cy="2262.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2266.1089">tauneg_ : BGFLOAT*</text><ellipse cx="900" cy="2275.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2278.9136">taupos_ : BGFLOAT*</text><ellipse cx="900" cy="2288.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="909" y="2291.7183">tauspost_ : BGFLOAT*</text><ellipse cx="900" cy="2301.3125" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="909" y="2304.5229">tauspre_ : BGFLOAT*</text><ellipse cx="900" cy="2314.1172" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2317.3276">delayIndexPost_ : int*</text><ellipse cx="900" cy="2326.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2330.1323">delayQueuePostLength_ : int*</text><ellipse cx="900" cy="2339.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="909" y="2342.937">totalDelayPost_ : int*</text><ellipse cx="900" cy="2352.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="909" y="2355.7417">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="2362.3359" y2="2362.3359"/><ellipse cx="900" cy="2373.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2376.5464">AllSTDPSynapses()</text><ellipse cx="900" cy="2386.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="909" y="2389.3511">AllSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="900" cy="2398.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="909" y="2402.1558">~AllSTDPSynapses()</text><ellipse cx="900" cy="2411.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="909" y="2414.9604">Create() : AllEdges*</text><polygon fill="#FFFF44" points="900,2419.5547,904,2423.5547,900,2427.5547,896,2423.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="909" y="2427.7651">synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT</text><ellipse cx="900" cy="2437.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2440.5698">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="900,2445.1641,904,2449.1641,900,2453.1641,896,2449.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="909" y="2453.3745">isSpikeQueuePost(const BGSIZE iEdg) : bool</text><ellipse cx="900" cy="2462.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="909" y="2466.1792">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="900" cy="2475.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="909" y="2478.9839">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="900,2483.5781,904,2487.5781,900,2491.5781,896,2487.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="909" y="2491.7886">allocDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2501.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2504.5933">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="900" cy="2514.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2517.3979">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2521.9922,904,2525.9922,900,2529.9922,896,2525.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="909" y="2530.2026">copyDeviceToHost(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2539.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2543.0073">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2552.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2555.812">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2565.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2568.6167">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2573.2109,904,2577.2109,900,2581.2109,896,2577.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="836" x="909" y="2581.4214">copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2591.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="909" y="2594.2261">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="900,2598.8203,904,2602.8203,900,2606.8203,896,2602.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="909" y="2607.0308">deleteDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2616.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="909" y="2619.8354">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="900,2624.4297,904,2628.4297,900,2632.4297,896,2628.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="909" y="2632.6401">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2642.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="909" y="2645.4448">loadParameters() : void</text><ellipse cx="900" cy="2655.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="909" y="2658.2495">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2667.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="2671.0542">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="900" cy="2680.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="909" y="2683.8589">printParameters() : void {query}</text><ellipse cx="900" cy="2693.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="909" y="2696.6636">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="900,2701.2578,904,2705.2578,900,2709.2578,896,2705.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="909" y="2709.4683">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2719.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="909" y="2722.2729">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="900" cy="2731.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="909" y="2735.0776">setEdgeClassID() : void</text><ellipse cx="900" cy="2744.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="909" y="2747.8823">setupEdges() : void</text><polygon fill="#FFFF44" points="900,2752.4766,904,2756.4766,900,2760.4766,896,2756.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="909" y="2760.687">setupEdges(const int numVertices, const int maxEdges) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897" y="2767.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="909" y="2773.4917">stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void</text><polygon fill="#FFFF44" points="900,2778.0859,904,2782.0859,900,2786.0859,896,2782.0859" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="2786.2964">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[cfe37ad1a50a7dcaaf80645f5fb9fa69]
class AllSpikingSynapses--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="701.0391" id="AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="873" x="438.5" y="1190"/><ellipse cx="811.25" cy="1206" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,1211.6406 Q813.6406,1211.9375 813,1212.0781 Q812.3594,1212.2344 811.6563,1212.2344 Q809.1563,1212.2344 807.8281,1210.5938 Q806.5156,1208.9375 806.5156,1205.8125 Q806.5156,1202.6875 807.8281,1201.0313 Q809.1563,1199.375 811.6563,1199.375 Q812.3594,1199.375 813,1199.5313 Q813.6563,1199.6875 814.2188,1199.9844 L814.2188,1202.7031 Q813.5938,1202.125 813,1201.8594 Q812.4063,1201.5781 811.7813,1201.5781 Q810.4375,1201.5781 809.75,1202.6563 Q809.0625,1203.7188 809.0625,1205.8125 Q809.0625,1207.9063 809.75,1208.9844 Q810.4375,1210.0469 811.7813,1210.0469 Q812.4063,1210.0469 813,1209.7813 Q813.5938,1209.5 814.2188,1208.9219 L814.2188,1211.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="831.75" y="1210.1543">AllSpikingSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1222" y2="1222"/><ellipse cx="449.5" cy="1233" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="458.5" y="1236.2104">delay_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1245.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1249.0151">delay_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1258.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1261.8198">delay_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1271.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="458.5" y="1274.6245">delay_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1284.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="458.5" y="1287.4292">tau_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1297.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1300.2339">tau_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1309.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1313.0386">tau_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1322.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="458.5" y="1325.8433">tau_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1335.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="458.5" y="1338.6479">decay_ : BGFLOAT*</text><ellipse cx="449.5" cy="1348.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1351.4526">tau_ : BGFLOAT*</text><ellipse cx="449.5" cy="1361.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="458.5" y="1364.2573">delayIndex_ : int*</text><ellipse cx="449.5" cy="1373.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="458.5" y="1377.062">delayQueueLength_ : int*</text><ellipse cx="449.5" cy="1386.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1389.8667">totalDelay_ : int*</text><ellipse cx="449.5" cy="1399.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="458.5" y="1402.6714">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1409.2656" y2="1409.2656"/><ellipse cx="449.5" cy="1420.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="458.5" y="1423.4761">AllSpikingSynapses()</text><ellipse cx="449.5" cy="1433.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="1436.2808">AllSpikingSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="449.5" cy="1445.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="458.5" y="1449.0854">~AllSpikingSynapses()</text><ellipse cx="449.5" cy="1458.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="458.5" y="1461.8901">Create() : AllEdges*</text><ellipse cx="449.5" cy="1471.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="458.5" y="1474.6948">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="449.5,1479.2891,453.5,1483.2891,449.5,1487.2891,445.5,1483.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="458.5" y="1487.4995">isSpikeQueue(const BGSIZE iEdg) : bool</text><polygon fill="#FFFF44" points="449.5,1492.0938,453.5,1496.0938,449.5,1500.0938,445.5,1496.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="458.5" y="1500.3042">updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool</text><ellipse cx="449.5" cy="1509.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="458.5" y="1513.1089">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="449.5" cy="1522.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="458.5" y="1525.9136">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="449.5,1530.5078,453.5,1534.5078,449.5,1538.5078,445.5,1534.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="458.5" y="1538.7183">allocDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1548.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1551.5229">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="449.5" cy="1561.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1564.3276">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1568.9219,453.5,1572.9219,449.5,1576.9219,445.5,1572.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="458.5" y="1577.1323">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="1586.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="458.5" y="1589.937">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1599.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="458.5" y="1602.7417">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1607.3359,453.5,1611.3359,449.5,1615.3359,445.5,1611.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="458.5" y="1615.5464">copyDeviceToHost(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1625.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1628.3511">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1637.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1641.1558">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1650.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1653.9604">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1658.5547,453.5,1662.5547,449.5,1666.5547,445.5,1662.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="458.5" y="1666.7651">copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1676.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="458.5" y="1679.5698">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="449.5,1684.1641,453.5,1688.1641,449.5,1692.1641,445.5,1688.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="458.5" y="1692.3745">deleteDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1701.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="458.5" y="1705.1792">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1709.7734,453.5,1713.7734,449.5,1717.7734,445.5,1713.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="458.5" y="1717.9839">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1727.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="458.5" y="1730.7886">loadParameters() : void</text><ellipse cx="449.5" cy="1740.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="458.5" y="1743.5933">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1753.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="458.5" y="1756.3979">preSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1765.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="1769.2026">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="449.5" cy="1778.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="458.5" y="1782.0073">printParameters() : void {query}</text><ellipse cx="449.5" cy="1791.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="458.5" y="1794.812">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="449.5,1799.4063,453.5,1803.4063,449.5,1807.4063,445.5,1803.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="458.5" y="1807.6167">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1817.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="458.5" y="1820.4214">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="1830.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="458.5" y="1833.2261">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="449.5" cy="1842.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="458.5" y="1846.0308">setEdgeClassID() : void</text><ellipse cx="449.5" cy="1855.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="458.5" y="1858.8354">setupEdges() : void</text><polygon fill="#FFFF44" points="449.5,1863.4297,453.5,1867.4297,449.5,1871.4297,445.5,1867.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="458.5" y="1871.6401">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="449.5,1876.2344,453.5,1880.2344,449.5,1884.2344,445.5,1880.2344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="1884.4448">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[2137c854024e09e8076c84fb007b1c3c]
class EdgesFactory--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="150.4375" id="EdgesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="658.5" y="21"/><ellipse cx="828.25" cy="37" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M831.2188,42.6406 Q830.6406,42.9375 830,43.0781 Q829.3594,43.2344 828.6563,43.2344 Q826.1563,43.2344 824.8281,41.5938 Q823.5156,39.9375 823.5156,36.8125 Q823.5156,33.6875 824.8281,32.0313 Q826.1563,30.375 828.6563,30.375 Q829.3594,30.375 830,30.5313 Q830.6563,30.6875 831.2188,30.9844 L831.2188,33.7031 Q830.5938,33.125 830,32.8594 Q829.4063,32.5781 828.7813,32.5781 Q827.4375,32.5781 826.75,33.6563 Q826.0625,34.7188 826.0625,36.8125 Q826.0625,38.9063 826.75,39.9844 Q827.4375,41.0469 828.7813,41.0469 Q829.4063,41.0469 830,40.7813 Q830.5938,40.5 831.2188,39.9219 L831.2188,42.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="848.75" y="41.1543">EdgesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="53" y2="53"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="61"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="678.5" y="67.2104">createFunctions : EdgesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="73.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="678.5" y="80.0151">edgesInstance_ : shared_ptr&lt;AllEdges&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="86.6094" y2="86.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="94.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="678.5" y="100.8198">EdgesFactory()</text><ellipse cx="669.5" cy="110.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="678.5" y="113.6245">~EdgesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="120.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="678.5" y="126.4292">invokeCreateFunction(const string&amp; className) : AllEdges*</text><ellipse cx="669.5" cy="136.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="678.5" y="139.2339">getInstance() : EdgesFactory*</text><ellipse cx="669.5" cy="148.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="678.5" y="152.0386">createEdges(const string&amp; className) : shared_ptr&lt;AllEdges&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="158.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="678.5" y="164.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[2c8a843ca32eecec980159abf8666d97]
class enumClassSynapses--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="112.0234" id="enumClassSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="1147.5" y="40"/><ellipse cx="1175.55" cy="56" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1179.6594,62 L1171.9406,62 L1171.9406,49.6094 L1179.6594,49.6094 L1179.6594,51.7656 L1174.3938,51.7656 L1174.3938,54.4375 L1179.1594,54.4375 L1179.1594,56.5938 L1174.3938,56.5938 L1174.3938,59.8438 L1179.6594,59.8438 L1179.6594,62 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="1192.45" y="60.1543">enumClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1148.5" x2="1335.5" y1="72" y2="72"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1153.5" y="86.2104">classAllDSSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="1153.5" y="99.0151">classAllDynamicSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1153.5" y="111.8198">classAllSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1153.5" y="124.6245">classAllSpikingSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1153.5" y="137.4292">undefClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1148.5" x2="1335.5" y1="144.0234" y2="144.0234"/><!--MD5=[12eed8bfdcfc08849f14b9c8d25e6e94]
class AllDSSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="124.8281" id="AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="1238.5" y="947.5"/><ellipse cx="1253.5" cy="963.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1256.4688,969.1406 Q1255.8906,969.4375 1255.25,969.5781 Q1254.6094,969.7344 1253.9063,969.7344 Q1251.4063,969.7344 1250.0781,968.0938 Q1248.7656,966.4375 1248.7656,963.3125 Q1248.7656,960.1875 1250.0781,958.5313 Q1251.4063,956.875 1253.9063,956.875 Q1254.6094,956.875 1255.25,957.0313 Q1255.9063,957.1875 1256.4688,957.4844 L1256.4688,960.2031 Q1255.8438,959.625 1255.25,959.3594 Q1254.6563,959.0781 1254.0313,959.0781 Q1252.6875,959.0781 1252,960.1563 Q1251.3125,961.2188 1251.3125,963.3125 Q1251.3125,965.4063 1252,966.4844 Q1252.6875,967.5469 1254.0313,967.5469 Q1254.6563,967.5469 1255.25,967.2813 Q1255.8438,967 1256.4688,966.4219 L1256.4688,969.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="1267.5" y="967.6543">AllDSSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1239.5" x2="1466.5" y1="979.5" y2="979.5"/><ellipse cx="1249.5" cy="990.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1258.5" y="993.7104">D_ : BGFLOAT*</text><ellipse cx="1249.5" cy="1003.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1258.5" y="1006.5151">F_ : BGFLOAT*</text><ellipse cx="1249.5" cy="1016.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1258.5" y="1019.3198">U_ : BGFLOAT*</text><ellipse cx="1249.5" cy="1028.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1258.5" y="1032.1245">r_ : BGFLOAT*</text><ellipse cx="1249.5" cy="1041.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1258.5" y="1044.9292">u_ : BGFLOAT*</text><ellipse cx="1249.5" cy="1054.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1258.5" y="1057.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1239.5" x2="1466.5" y1="1064.3281" y2="1064.3281"/><!--MD5=[4b1be41c79a1ff75e3d6100484a928eb]
class AllDynamicSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="124.8281" id="AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="1477" y="1478"/><ellipse cx="1492" cy="1494" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1494.9688,1499.6406 Q1494.3906,1499.9375 1493.75,1500.0781 Q1493.1094,1500.2344 1492.4063,1500.2344 Q1489.9063,1500.2344 1488.5781,1498.5938 Q1487.2656,1496.9375 1487.2656,1493.8125 Q1487.2656,1490.6875 1488.5781,1489.0313 Q1489.9063,1487.375 1492.4063,1487.375 Q1493.1094,1487.375 1493.75,1487.5313 Q1494.4063,1487.6875 1494.9688,1487.9844 L1494.9688,1490.7031 Q1494.3438,1490.125 1493.75,1489.8594 Q1493.1563,1489.5781 1492.5313,1489.5781 Q1491.1875,1489.5781 1490.5,1490.6563 Q1489.8125,1491.7188 1489.8125,1493.8125 Q1489.8125,1495.9063 1490.5,1496.9844 Q1491.1875,1498.0469 1492.5313,1498.0469 Q1493.1563,1498.0469 1493.75,1497.7813 Q1494.3438,1497.5 1494.9688,1496.9219 L1494.9688,1499.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="264" x="1506" y="1498.1543">AllDynamicSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1478" x2="1772" y1="1510" y2="1510"/><ellipse cx="1488" cy="1521" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1497" y="1524.2104">D_ : BGFLOAT*</text><ellipse cx="1488" cy="1533.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1497" y="1537.0151">F_ : BGFLOAT*</text><ellipse cx="1488" cy="1546.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1497" y="1549.8198">U_ : BGFLOAT*</text><ellipse cx="1488" cy="1559.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1497" y="1562.6245">r_ : BGFLOAT*</text><ellipse cx="1488" cy="1572.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1497" y="1575.4292">u_ : BGFLOAT*</text><ellipse cx="1488" cy="1585.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1497" y="1588.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1478" x2="1772" y1="1594.8281" y2="1594.8281"/><!--MD5=[017d3a10fe7408131050c5acc75b1a9b]
class AllEdgesDeviceProperties--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="176.0469" id="AllEdgesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="1383" y="8"/><ellipse cx="1402.95" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1405.9188,29.6406 Q1405.3406,29.9375 1404.7,30.0781 Q1404.0594,30.2344 1403.3563,30.2344 Q1400.8563,30.2344 1399.5281,28.5938 Q1398.2156,26.9375 1398.2156,23.8125 Q1398.2156,20.6875 1399.5281,19.0313 Q1400.8563,17.375 1403.3563,17.375 Q1404.0594,17.375 1404.7,17.5313 Q1405.3563,17.6875 1405.9188,17.9844 L1405.9188,20.7031 Q1405.2938,20.125 1404.7,19.8594 Q1404.1063,19.5781 1403.4813,19.5781 Q1402.1375,19.5781 1401.45,20.6563 Q1400.7625,21.7188 1400.7625,23.8125 Q1400.7625,25.9063 1401.45,26.9844 Q1402.1375,28.0469 1403.4813,28.0469 Q1404.1063,28.0469 1404.7,27.7813 Q1405.2938,27.5 1405.9188,26.9219 L1405.9188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="1418.05" y="28.1543">AllEdgesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1384" x2="1584" y1="40" y2="40"/><ellipse cx="1394" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1403" y="54.2104">W_ : BGFLOAT*</text><ellipse cx="1394" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1403" y="67.0151">psr_ : BGFLOAT*</text><ellipse cx="1394" cy="76.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1403" y="79.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="1394" cy="89.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1403" y="92.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="1394" cy="102.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1403" y="105.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="1394" cy="115.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1403" y="118.2339">inUse_ : bool*</text><ellipse cx="1394" cy="127.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1403" y="131.0386">type_ : edgeType*</text><ellipse cx="1394" cy="140.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1403" y="143.8433">countVertices_ : int</text><ellipse cx="1394" cy="153.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1403" y="156.6479">destVertexIndex_ : int*</text><ellipse cx="1394" cy="166.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1403" y="169.4526">sourceVertexIndex_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1384" x2="1584" y1="176.0469" y2="176.0469"/><!--MD5=[a7843438017f4a8113b6a979c3ec4039]
class AllSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="240.0703" id="AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="1503" y="890"/><ellipse cx="1518" cy="906" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1520.9688,911.6406 Q1520.3906,911.9375 1519.75,912.0781 Q1519.1094,912.2344 1518.4063,912.2344 Q1515.9063,912.2344 1514.5781,910.5938 Q1513.2656,908.9375 1513.2656,905.8125 Q1513.2656,902.6875 1514.5781,901.0313 Q1515.9063,899.375 1518.4063,899.375 Q1519.1094,899.375 1519.75,899.5313 Q1520.4063,899.6875 1520.9688,899.9844 L1520.9688,902.7031 Q1520.3438,902.125 1519.75,901.8594 Q1519.1563,901.5781 1518.5313,901.5781 Q1517.1875,901.5781 1516.5,902.6563 Q1515.8125,903.7188 1515.8125,905.8125 Q1515.8125,907.9063 1516.5,908.9844 Q1517.1875,910.0469 1518.5313,910.0469 Q1519.1563,910.0469 1519.75,909.7813 Q1520.3438,909.5 1520.9688,908.9219 L1520.9688,911.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="212" x="1532" y="910.1543">AllSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1504" x2="1746" y1="922" y2="922"/><ellipse cx="1514" cy="933" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1523" y="936.2104">Aneg_ : BGFLOAT*</text><ellipse cx="1514" cy="945.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1523" y="949.0151">Apos_ : BGFLOAT*</text><ellipse cx="1514" cy="958.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1523" y="961.8198">STDPgap_ : BGFLOAT*</text><ellipse cx="1514" cy="971.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1523" y="974.6245">Wex_ : BGFLOAT*</text><ellipse cx="1514" cy="984.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1523" y="987.4292">muneg_ : BGFLOAT*</text><ellipse cx="1514" cy="997.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1523" y="1000.2339">mupos_ : BGFLOAT*</text><ellipse cx="1514" cy="1009.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1523" y="1013.0386">tauneg_ : BGFLOAT*</text><ellipse cx="1514" cy="1022.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1523" y="1025.8433">taupos_ : BGFLOAT*</text><ellipse cx="1514" cy="1035.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1523" y="1038.6479">tauspost_ : BGFLOAT*</text><ellipse cx="1514" cy="1048.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1523" y="1051.4526">tauspre_ : BGFLOAT*</text><ellipse cx="1514" cy="1061.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1523" y="1064.2573">useFroemkeDanSTDP_ : bool*</text><ellipse cx="1514" cy="1073.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1523" y="1077.062">delayIndexPost_ : int*</text><ellipse cx="1514" cy="1086.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1523" y="1089.8667">delayQueuePostLength_ : int*</text><ellipse cx="1514" cy="1099.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1523" y="1102.6714">totalDelayPost_ : int*</text><ellipse cx="1514" cy="1112.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1523" y="1115.4761">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1504" x2="1746" y1="1122.0703" y2="1122.0703"/><!--MD5=[9207c363d1f0343d1c8507e42ff7f935]
class AllSpikingSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f5sj471lea4my)" height="124.8281" id="AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="1355.5" y="474.5"/><ellipse cx="1370.5" cy="490.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1373.4688,496.1406 Q1372.8906,496.4375 1372.25,496.5781 Q1371.6094,496.7344 1370.9063,496.7344 Q1368.4063,496.7344 1367.0781,495.0938 Q1365.7656,493.4375 1365.7656,490.3125 Q1365.7656,487.1875 1367.0781,485.5313 Q1368.4063,483.875 1370.9063,483.875 Q1371.6094,483.875 1372.25,484.0313 Q1372.9063,484.1875 1373.4688,484.4844 L1373.4688,487.2031 Q1372.8438,486.625 1372.25,486.3594 Q1371.6563,486.0781 1371.0313,486.0781 Q1369.6875,486.0781 1369,487.1563 Q1368.3125,488.2188 1368.3125,490.3125 Q1368.3125,492.4063 1369,493.4844 Q1369.6875,494.5469 1371.0313,494.5469 Q1371.6563,494.5469 1372.25,494.2813 Q1372.8438,494 1373.4688,493.4219 L1373.4688,496.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="1384.5" y="494.6543">AllSpikingSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1356.5" x2="1611.5" y1="506.5" y2="506.5"/><ellipse cx="1366.5" cy="517.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1375.5" y="520.7104">decay_ : BGFLOAT*</text><ellipse cx="1366.5" cy="530.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1375.5" y="533.5151">tau_ : BGFLOAT*</text><ellipse cx="1366.5" cy="543.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1375.5" y="546.3198">delayIndex_ : int*</text><ellipse cx="1366.5" cy="555.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1375.5" y="559.1245">delayQueueLength_ : int*</text><ellipse cx="1366.5" cy="568.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1375.5" y="571.9292">totalDelay_ : int*</text><ellipse cx="1366.5" cy="581.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1375.5" y="584.7339">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1356.5" x2="1611.5" y1="591.3281" y2="591.3281"/><!--MD5=[36cebae4583ca589f8881f15eca879f1]
reverse link AllEdges to AllNeuroEdges--><path d="M875,850.34 C875,873.42 875,895.4 875,915.23 " fill="none" id="AllEdges&lt;-AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,850.26,875,830.26,882,850.26,868,850.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d895029eba7154c6905399e7eb5aaaea]
reverse link AllEdgesDeviceProperties to AllSpikingSynapsesDeviceProperties--><path d="M1484,204.29 C1484,289.08 1484,404.42 1484,474.36 " fill="none" id="AllEdgesDeviceProperties&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1477,204.26,1484,184.26,1491,204.26,1477,204.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d383143b8365dcb1c00482aec0d8f87]
reverse link AllNeuroEdges to AllSpikingSynapses--><path d="M875,1124.62 C875,1144.89 875,1166.93 875,1189.95 " fill="none" id="AllNeuroEdges&lt;-AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,1124.57,875,1104.57,882,1124.57,868,1124.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5445f169f2d896f0fc54fbb0dd17c8d5]
reverse link AllSTDPSynapses to AllDynamicSTDPSynapses--><path d="M1320,2813.53 C1320,2826.84 1320,2839.95 1320,2852.8 " fill="none" id="AllSTDPSynapses&lt;-AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1313,2813.22,1320,2793.22,1327,2813.22,1313,2813.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[539a086fdc8dbc8028ce1b9c0d3cb21a]
reverse link AllSTDPSynapsesDeviceProperties to AllDynamicSTDPSynapsesDeviceProperties--><path d="M1625,1150.36 C1625,1256.66 1625,1397.99 1625,1477.79 " fill="none" id="AllSTDPSynapsesDeviceProperties&lt;-AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1618,1150.26,1625,1130.26,1632,1150.26,1618,1150.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f221506eaa2e129ebcab2e085332c1be]
reverse link AllSpikingSynapses to AllDSSynapses--><path d="M677.9,1908.9 C633.94,1990.85 588.63,2075.31 548.97,2149.24 " fill="none" id="AllSpikingSynapses&lt;-AllDSSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="671.79,1905.49,687.41,1891.18,684.12,1912.11,671.79,1905.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[587b9d07fbc4fdda6579551662042140]
reverse link AllSpikingSynapses to AllSTDPSynapses--><path d="M1072.28,1909.23 C1079.66,1923 1087.09,1936.84 1094.52,1950.69 " fill="none" id="AllSpikingSynapses&lt;-AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1065.88,1912.11,1062.59,1891.18,1078.21,1905.49,1065.88,1912.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23aac5e482fb680cc0cec1f0f0dd59a6]
reverse link AllSpikingSynapsesDeviceProperties to AllDSSynapsesDeviceProperties--><path d="M1461.44,619.12 C1435.51,712.35 1393.52,863.31 1370.13,947.41 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1454.77,616.97,1466.87,599.58,1468.26,620.72,1454.77,616.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9a3e383543838c874b32001a8709207]
reverse link AllSpikingSynapsesDeviceProperties to AllSTDPSynapsesDeviceProperties--><path d="M1508.28,619.11 C1530.61,693.68 1563.99,805.19 1589.34,889.88 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1501.46,620.74,1502.43,599.58,1514.88,616.73,1501.46,620.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[324f5d3a776c0915160172bb3bb1f68c]
reverse link EdgesFactory to AllEdges--><path d="M875,184.65 C875,202.79 875,222.85 875,243.91 " fill="none" id="EdgesFactory&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="875,171.47,871,177.47,875,183.47,879,177.47,875,171.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[359e9d5629ef3cb61aba89d921878918]
@startuml EdgesClassDiagram






class AllDSSynapses {
	+AllDSSynapses()
	+AllDSSynapses(const int numVertices, const int maxEdges)
	+~AllDSSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDSSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllDynamicSTDPSynapses {
	+AllDynamicSTDPSynapses()
	+AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllDynamicSTDPSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllEdges {
	+AllEdges()
	+AllEdges(const int numVertices, const int maxEdges)
	+~AllEdges()
	+W_ : BGFLOAT*
	+summationPoint_ : BGFLOAT**
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	#edgeOrdinalToType(const int typeOrdinal) : edgeType
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	+addEdge(BGSIZE& iEdg, edgeType type, const int srcVertex, const int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT) : void
	+{abstract} advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	+advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+{abstract} copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	+createEdgeIndexMap(shared_ptr<EdgeIndexMap> edgeIndexMap) : void
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void
	+load(Archive& archive) : void
	+loadParameters() : void
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+save(Archive& archive) : void {query}
	+{abstract} setAdvanceEdgesDeviceParams() : void
	+{abstract} setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllNeuroEdges {
	+AllNeuroEdges()
	+~AllNeuroEdges()
	+psr_ : BGFLOAT*
	+edgSign(const edgeType type) : int
	+{static} SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSTDPSynapses {
	+AllSTDPSynapses()
	+AllSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllSTDPSynapses()
	+{static} Create() : AllEdges*
	+Aneg_E_ : BGFLOAT
	+Aneg_I_ : BGFLOAT
	+Apos_E_ : BGFLOAT
	+Apos_I_ : BGFLOAT
	+Wex_E_ : BGFLOAT
	+Wex_I_ : BGFLOAT
	+defaultSTDPgap_ : BGFLOAT
	#synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT
	+tauneg_E_ : BGFLOAT
	+tauneg_I_ : BGFLOAT
	+taupos_E_ : BGFLOAT
	+taupos_I_ : BGFLOAT
	+tauspost_E_ : BGFLOAT
	+tauspost_I_ : BGFLOAT
	+tauspre_E_ : BGFLOAT
	+tauspre_I_ : BGFLOAT
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueuePost(const BGSIZE iEdg) : bool
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	-stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSpikingSynapses {
	+AllSpikingSynapses()
	+AllSpikingSynapses(const int numVertices, const int maxEdges)
	+~AllSpikingSynapses()
	+{static} Create() : AllEdges*
	+delay_EE_ : BGFLOAT
	+delay_EI_ : BGFLOAT
	+delay_IE_ : BGFLOAT
	+delay_II_ : BGFLOAT
	+tau_EE_ : BGFLOAT
	+tau_EI_ : BGFLOAT
	+tau_IE_ : BGFLOAT
	+tau_II_ : BGFLOAT
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueue(const BGSIZE iEdg) : bool
	#updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	#copyDeviceToHost(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+preSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setAdvanceEdgesDeviceParams() : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class EdgesFactory {
	-EdgesFactory()
	+~EdgesFactory()
	-invokeCreateFunction(const string& className) : AllEdges*
	+{static} getInstance() : EdgesFactory*
	-createFunctions : EdgesFunctionMap
	+createEdges(const string& className) : shared_ptr<AllEdges>
	-edgesInstance_ : shared_ptr<AllEdges>
	-registerClass(const string& className, CreateFunction function) : void
}


enum enumClassSynapses {
	classAllDSSynapses
	classAllDynamicSTDPSynapses
	classAllSTDPSynapses
	classAllSpikingSynapses
	undefClassSynapses
}


class AllDSSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllDynamicSTDPSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllEdgesDeviceProperties {
	+W_ : BGFLOAT*
	+psr_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
}


class AllSTDPSynapsesDeviceProperties {
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+useFroemkeDanSTDP_ : bool*
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
}


class AllSpikingSynapsesDeviceProperties {
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
}






.AllEdges <|- - .AllNeuroEdges


.AllEdgesDeviceProperties <|- - .AllSpikingSynapsesDeviceProperties


.AllNeuroEdges <|- - .AllSpikingSynapses


.AllSTDPSynapses <|- - .AllDynamicSTDPSynapses


.AllSTDPSynapsesDeviceProperties <|- - .AllDynamicSTDPSynapsesDeviceProperties


.AllSpikingSynapses <|- - .AllDSSynapses


.AllSpikingSynapses <|- - .AllSTDPSynapses


.AllSpikingSynapsesDeviceProperties <|- - .AllDSSynapsesDeviceProperties


.AllSpikingSynapsesDeviceProperties <|- - .AllSTDPSynapsesDeviceProperties






.EdgesFactory *- - .AllEdges









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>