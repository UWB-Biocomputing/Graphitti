<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1198px" preserveAspectRatio="none" style="width:1208px;height:1198px;" version="1.1" viewBox="0 0 1208 1198" width="1208px" zoomAndPan="magnify"><defs><filter height="300%" id="f2b71srq8e9f6" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[af68557a962a5f1f7548a7e590f8fd62]
class Hdf5GrowthRecorder--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="240.0703" id="Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="94.5" y="947"/><ellipse cx="167.25" cy="963" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M170.2188,968.6406 Q169.6406,968.9375 169,969.0781 Q168.3594,969.2344 167.6563,969.2344 Q165.1563,969.2344 163.8281,967.5938 Q162.5156,965.9375 162.5156,962.8125 Q162.5156,959.6875 163.8281,958.0313 Q165.1563,956.375 167.6563,956.375 Q168.3594,956.375 169,956.5313 Q169.6563,956.6875 170.2188,956.9844 L170.2188,959.7031 Q169.5938,959.125 169,958.8594 Q168.4063,958.5781 167.7813,958.5781 Q166.4375,958.5781 165.75,959.6563 Q165.0625,960.7188 165.0625,962.8125 Q165.0625,964.9063 165.75,965.9844 Q166.4375,967.0469 167.7813,967.0469 Q168.4063,967.0469 169,966.7813 Q169.5938,966.5 170.2188,965.9219 L170.2188,968.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="187.75" y="967.1543">Hdf5GrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="377.5" y1="979" y2="979"/><polygon fill="none" points="105.5,985,109.5,989,105.5,993,101.5,989" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="114.5" y="993.2104">radiiHistory_ : BGFLOAT*</text><polygon fill="none" points="105.5,997.8047,109.5,1001.8047,105.5,1005.8047,101.5,1001.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="114.5" y="1006.0151">ratesHistory_ : BGFLOAT*</text><polygon fill="none" points="105.5,1010.6094,109.5,1014.6094,105.5,1018.6094,101.5,1014.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="114.5" y="1018.8198">dataSetRadiiHist_ : DataSet</text><polygon fill="none" points="105.5,1023.4141,109.5,1027.4141,105.5,1031.4141,101.5,1027.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="114.5" y="1031.6245">dataSetRatesHist_ : DataSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="377.5" y1="1038.2188" y2="1038.2188"/><ellipse cx="105.5" cy="1049.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="114.5" y="1052.4292">Hdf5GrowthRecorder()</text><ellipse cx="105.5" cy="1062.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="114.5" y="1065.2339">~Hdf5GrowthRecorder()</text><ellipse cx="105.5" cy="1074.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="114.5" y="1078.0386">Create() : Recorder*</text><ellipse cx="105.5" cy="1087.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="114.5" y="1090.8433">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="105.5" cy="1100.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="114.5" y="1103.6479">getValues() : void</text><polygon fill="#FFFF44" points="105.5,1108.2422,109.5,1112.2422,105.5,1116.2422,101.5,1112.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="114.5" y="1116.4526">initDataSet() : void</text><ellipse cx="105.5" cy="1126.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="114.5" y="1129.2573">initDefaultValues() : void</text><ellipse cx="105.5" cy="1138.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="114.5" y="1142.062">initValues() : void</text><ellipse cx="105.5" cy="1151.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="114.5" y="1154.8667">printParameters() : void</text><ellipse cx="105.5" cy="1164.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="114.5" y="1167.6714">term() : void</text><polygon fill="#FFFF44" points="105.5,1172.2656,109.5,1176.2656,105.5,1180.2656,101.5,1176.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="114.5" y="1180.4761">writeRadiiRates() : void</text><!--MD5=[2f81b0e77ba864956fe3cef8330f890e]
class Hdf5Recorder--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="380.9219" id="Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="6" y="506"/><ellipse cx="189.25" cy="522" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M192.2188,527.6406 Q191.6406,527.9375 191,528.0781 Q190.3594,528.2344 189.6563,528.2344 Q187.1563,528.2344 185.8281,526.5938 Q184.5156,524.9375 184.5156,521.8125 Q184.5156,518.6875 185.8281,517.0313 Q187.1563,515.375 189.6563,515.375 Q190.3594,515.375 191,515.5313 Q191.6563,515.6875 192.2188,515.9844 L192.2188,518.7031 Q191.5938,518.125 191,517.8594 Q190.4063,517.5781 189.7813,517.5781 Q188.4375,517.5781 187.75,518.6563 Q187.0625,519.7188 187.0625,521.8125 Q187.0625,523.9063 187.75,524.9844 Q188.4375,526.0469 189.7813,526.0469 Q190.4063,526.0469 191,525.7813 Q191.5938,525.5 192.2188,524.9219 L192.2188,527.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="209.75" y="526.1543">Hdf5Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="466" y1="538" y2="538"/><polygon fill="none" points="17,544,21,548,17,552,13,548" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="26" y="552.2104">dataSetNeuronThresh_ : DataSet</text><polygon fill="none" points="17,556.8047,21,560.8047,17,564.8047,13,560.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="26" y="565.0151">dataSetNeuronTypes_ : DataSet</text><polygon fill="none" points="17,569.6094,21,573.6094,17,577.6094,13,573.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="26" y="577.8198">dataSetProbedNeurons_ : DataSet</text><polygon fill="none" points="17,582.4141,21,586.4141,17,590.4141,13,586.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="26" y="590.6245">dataSetSimulationEndTime_ : DataSet</text><polygon fill="none" points="17,595.2188,21,599.2188,17,603.2188,13,599.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="26" y="603.4292">dataSetSpikesHist_ : DataSet</text><polygon fill="none" points="17,608.0234,21,612.0234,17,616.0234,13,612.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="26" y="616.2339">dataSetSpikesProbedNeurons_ : DataSet</text><polygon fill="none" points="17,620.8281,21,624.8281,17,628.8281,13,624.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="26" y="629.0386">dataSetStarterNeurons_ : DataSet</text><polygon fill="none" points="17,633.6328,21,637.6328,17,641.6328,13,637.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="26" y="641.8433">dataSetTsim_ : DataSet</text><polygon fill="none" points="17,646.4375,21,650.4375,17,654.4375,13,650.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="654.6479">dataSetXloc_ : DataSet</text><polygon fill="none" points="17,659.2422,21,663.2422,17,667.2422,13,663.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="667.4526">dataSetYloc_ : DataSet</text><polygon fill="none" points="17,672.0469,21,676.0469,17,680.0469,13,676.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="680.2573">resultOut_ : H5File</text><polygon fill="none" points="17,684.8516,21,688.8516,17,692.8516,13,688.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="26" y="693.062">offsetSpikesProbedNeurons_ : hsize_t*</text><polygon fill="none" points="17,697.6563,21,701.6563,17,705.6563,13,701.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="705.8667">spikesHistory_ : int*</text><polygon fill="none" points="17,710.4609,21,714.4609,17,718.4609,13,714.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="26" y="718.6714">spikesProbedNeurons_ : vector&lt;uint64_t&gt;*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="466" y1="725.2656" y2="725.2656"/><ellipse cx="17" cy="736.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="739.4761">Hdf5Recorder()</text><ellipse cx="17" cy="749.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="26" y="752.2808">Create() : Recorder*</text><ellipse cx="17" cy="761.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="26" y="765.0854">compileHistories(AllVertices&amp; neurons) : void</text><polygon fill="#FFFF44" points="17,769.6797,21,773.6797,17,777.6797,13,773.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="26" y="777.8901">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="17" cy="787.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="790.6948">getValues() : void</text><ellipse cx="17" cy="800.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="26" y="803.4995">init() : void</text><polygon fill="#FFFF44" points="17,808.0938,21,812.0938,17,816.0938,13,812.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="816.3042">initDataSet() : void</text><ellipse cx="17" cy="825.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="829.1089">initDefaultValues() : void</text><ellipse cx="17" cy="838.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="841.9136">initValues() : void</text><ellipse cx="17" cy="851.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="854.7183">printParameters() : void</text><ellipse cx="17" cy="864.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="26" y="867.5229">saveSimData(const AllVertices&amp; neurons) : void</text><ellipse cx="17" cy="877.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="26" y="880.3276">term() : void</text><!--MD5=[da7fc25461f009319ada69721cf8c2d1]
class Recorder--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="201.6563" id="Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="462" x="253.5" y="244"/><ellipse cx="451.75" cy="260" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M451.8594,255.3438 L450.7031,260.4219 L453.0313,260.4219 L451.8594,255.3438 Z M450.375,253.1094 L453.3594,253.1094 L456.7188,265.5 L454.2656,265.5 L453.5,262.4375 L450.2188,262.4375 L449.4688,265.5 L447.0313,265.5 L450.375,253.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="472.25" y="264.1543">Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="714.5" y1="276" y2="276"/><polygon fill="none" points="264.5,282,268.5,286,264.5,290,260.5,286" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="273.5" y="290.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="264.5,294.8047,268.5,298.8047,264.5,302.8047,260.5,298.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="273.5" y="303.0151">resultFileName_ : string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="714.5" y1="309.6094" y2="309.6094"/><ellipse cx="264.5" cy="320.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="273.5" y="323.8198">~Recorder()</text><ellipse cx="264.5" cy="333.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="273.5" y="336.6245">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="264.5,341.2188,268.5,345.2188,264.5,349.2188,260.5,345.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="273.5" y="349.4292">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="264.5" cy="359.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="273.5" y="362.2339">getValues() : void</text><ellipse cx="264.5" cy="371.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="273.5" y="375.0386">init() : void</text><ellipse cx="264.5" cy="384.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="273.5" y="387.8433">initDefaultValues() : void</text><ellipse cx="264.5" cy="397.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="273.5" y="400.6479">initValues() : void</text><ellipse cx="264.5" cy="410.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="273.5" y="413.4526">printParameters() : void</text><ellipse cx="264.5" cy="423.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="270" x="273.5" y="426.2573">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="264.5" cy="435.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="273.5" y="439.062">term() : void</text><!--MD5=[2d167d26ebdee84d71997832bfe86c3e]
class RecorderFactory--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="150.4375" id="RecorderFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="268" y="21"/><ellipse cx="428.75" cy="37" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M431.7188,42.6406 Q431.1406,42.9375 430.5,43.0781 Q429.8594,43.2344 429.1563,43.2344 Q426.6563,43.2344 425.3281,41.5938 Q424.0156,39.9375 424.0156,36.8125 Q424.0156,33.6875 425.3281,32.0313 Q426.6563,30.375 429.1563,30.375 Q429.8594,30.375 430.5,30.5313 Q431.1563,30.6875 431.7188,30.9844 L431.7188,33.7031 Q431.0938,33.125 430.5,32.8594 Q429.9063,32.5781 429.2813,32.5781 Q427.9375,32.5781 427.25,33.6563 Q426.5625,34.7188 426.5625,36.8125 Q426.5625,38.9063 427.25,39.9844 Q427.9375,41.0469 429.2813,41.0469 Q429.9063,41.0469 430.5,40.7813 Q431.0938,40.5 431.7188,39.9219 L431.7188,42.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="449.25" y="41.1543">RecorderFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269" x2="700" y1="53" y2="53"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="61"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="288" y="67.2104">createFunctions : RecorderFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="73.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="288" y="80.0151">recorderInstance : shared_ptr&lt;Recorder&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269" x2="700" y1="86.6094" y2="86.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="94.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="288" y="100.8198">RecorderFactory()</text><ellipse cx="279" cy="110.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="288" y="113.6245">~RecorderFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="120.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="288" y="126.4292">invokeCreateFunction(const string&amp; className) : Recorder*</text><ellipse cx="279" cy="136.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="288" y="139.2339">getInstance() : RecorderFactory*</text><ellipse cx="279" cy="148.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="288" y="152.0386">createRecorder(const string&amp; className) : shared_ptr&lt;Recorder&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="158.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="288" y="164.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[70954963b39295522525212df8952a0c]
class XmlGrowthRecorder--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="176.0469" id="XmlGrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="736" y="8"/><ellipse cx="901.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M904.2188,29.6406 Q903.6406,29.9375 903,30.0781 Q902.3594,30.2344 901.6563,30.2344 Q899.1563,30.2344 897.8281,28.5938 Q896.5156,26.9375 896.5156,23.8125 Q896.5156,20.6875 897.8281,19.0313 Q899.1563,17.375 901.6563,17.375 Q902.3594,17.375 903,17.5313 Q903.6563,17.6875 904.2188,17.9844 L904.2188,20.7031 Q903.5938,20.125 903,19.8594 Q902.4063,19.5781 901.7813,19.5781 Q900.4375,19.5781 899.75,20.6563 Q899.0625,21.7188 899.0625,23.8125 Q899.0625,25.9063 899.75,26.9844 Q900.4375,28.0469 901.7813,28.0469 Q902.4063,28.0469 903,27.7813 Q903.5938,27.5 904.2188,26.9219 L904.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="921.75" y="28.1543">XmlGrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="737" x2="1196" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="744" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="756" y="54.2104">radiiHistory_ : CompleteMatrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="744" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="756" y="67.0151">ratesHistory_ : CompleteMatrix</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="737" x2="1196" y1="73.6094" y2="73.6094"/><ellipse cx="747" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="756" y="87.8198">Create() : Recorder*</text><ellipse cx="747" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="756" y="100.6245">compileHistories(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="744" y="107.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="756" y="113.4292">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="747" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="756" y="126.2339">getValues() : void</text><ellipse cx="747" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="756" y="139.0386">initDefaultValues() : void</text><ellipse cx="747" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="756" y="151.8433">initValues() : void</text><ellipse cx="747" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="756" y="164.6479">printParameters() : void</text><ellipse cx="747" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="756" y="177.4526">saveSimData(const AllVertices&amp; neurons) : void</text><!--MD5=[e2fde7c48d35c1cbf959be266268237c]
class XmlRecorder--><rect fill="#FEFECE" filter="url(#f2b71srq8e9f6)" height="214.4609" id="XmlRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="502" y="589.5"/><ellipse cx="689.25" cy="605.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M692.2188,611.1406 Q691.6406,611.4375 691,611.5781 Q690.3594,611.7344 689.6563,611.7344 Q687.1563,611.7344 685.8281,610.0938 Q684.5156,608.4375 684.5156,605.3125 Q684.5156,602.1875 685.8281,600.5313 Q687.1563,598.875 689.6563,598.875 Q690.3594,598.875 691,599.0313 Q691.6563,599.1875 692.2188,599.4844 L692.2188,602.2031 Q691.5938,601.625 691,601.3594 Q690.4063,601.0781 689.7813,601.0781 Q688.4375,601.0781 687.75,602.1563 Q687.0625,603.2188 687.0625,605.3125 Q687.0625,607.4063 687.75,608.4844 Q688.4375,609.5469 689.7813,609.5469 Q690.4063,609.5469 691,609.2813 Q691.5938,609 692.2188,608.4219 L692.2188,611.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="709.75" y="609.6543">XmlRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="503" x2="962" y1="621.5" y2="621.5"/><polygon fill="none" points="513,627.5,517,631.5,513,635.5,509,631.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="522" y="635.7104">spikesHistory_ : VectorMatrix</text><polygon fill="none" points="513,640.3047,517,644.3047,513,648.3047,509,644.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="522" y="648.5151">resultOut_ : ofstream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="503" x2="962" y1="655.1094" y2="655.1094"/><ellipse cx="513" cy="666.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="522" y="669.3198">XmlRecorder()</text><ellipse cx="513" cy="678.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="522" y="682.1245">Create() : Recorder*</text><ellipse cx="513" cy="691.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="522" y="694.9292">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="513,699.5234,517,703.5234,513,707.5234,509,703.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="522" y="707.7339">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="513" cy="717.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="522" y="720.5386">getValues() : void</text><ellipse cx="513" cy="730.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="522" y="733.3433">init() : void</text><ellipse cx="513" cy="742.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="522" y="746.1479">initDefaultValues() : void</text><ellipse cx="513" cy="755.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="522" y="758.9526">initValues() : void</text><ellipse cx="513" cy="768.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="522" y="771.7573">printParameters() : void</text><ellipse cx="513" cy="781.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="522" y="784.562">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="513" cy="794.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="522" y="797.3667">term() : void</text><!--MD5=[19d836ace92e712b0d8c405f49d503c3]
reverse link Hdf5Recorder to Hdf5GrowthRecorder--><path d="M236.5,907.52 C236.5,920.87 236.5,934.04 236.5,946.74 " fill="none" id="Hdf5Recorder&lt;-Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="229.5,907.15,236.5,887.15,243.5,907.15,229.5,907.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[845bd816721334aa86e34ab601eef40f]
reverse link Recorder to Hdf5Recorder--><path d="M401.59,462.84 C391.71,476.76 381.44,491.24 371.06,505.86 " fill="none" id="Recorder&lt;-Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="396.15,458.41,413.43,446.15,407.57,466.51,396.15,458.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c205a24cdc96e40cc67ede097f563f5]
reverse link Recorder to XmlRecorder--><path d="M567.15,462.47 C596.2,503.42 628.67,549.18 657.09,589.23 " fill="none" id="Recorder&lt;-XmlRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="561.43,466.51,555.57,446.15,572.85,458.41,561.43,466.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[81602e3d9bed7867a676258a1e30c7a1]
reverse link RecorderFactory to Recorder--><path d="M484.5,184.24 C484.5,203.54 484.5,224.13 484.5,243.9 " fill="none" id="RecorderFactory&lt;-Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="484.5,171.11,480.5,177.11,484.5,183.11,488.5,177.11,484.5,171.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c1997ca5efc21e4dbf4a3a37fbcb69fb]
@startuml RecorderClassDiagram






class Hdf5GrowthRecorder {
	+Hdf5GrowthRecorder()
	+~Hdf5GrowthRecorder()
	#radiiHistory_ : BGFLOAT*
	#ratesHistory_ : BGFLOAT*
	#dataSetRadiiHist_ : DataSet
	#dataSetRatesHist_ : DataSet
	+{static} Create() : Recorder*
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+term() : void
	#writeRadiiRates() : void
}


class Hdf5Recorder {
	+Hdf5Recorder()
	#dataSetNeuronThresh_ : DataSet
	#dataSetNeuronTypes_ : DataSet
	#dataSetProbedNeurons_ : DataSet
	#dataSetSimulationEndTime_ : DataSet
	#dataSetSpikesHist_ : DataSet
	#dataSetSpikesProbedNeurons_ : DataSet
	#dataSetStarterNeurons_ : DataSet
	#dataSetTsim_ : DataSet
	#dataSetXloc_ : DataSet
	#dataSetYloc_ : DataSet
	#resultOut_ : H5File
	+{static} Create() : Recorder*
	#offsetSpikesProbedNeurons_ : hsize_t*
	#spikesHistory_ : int*
	#spikesProbedNeurons_ : vector<uint64_t>*
	+compileHistories(AllVertices& neurons) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
	+term() : void
}


abstract class Recorder {
	+~Recorder()
	#fileLogger_ : log4cplus::Logger
	#resultFileName_ : string
	+{abstract} compileHistories(AllVertices& vertices) : void
	#{abstract} getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+{abstract} getValues() : void
	+{abstract} init() : void
	+{abstract} initDefaultValues() : void
	+{abstract} initValues() : void
	+{abstract} printParameters() : void
	+{abstract} saveSimData(const AllVertices& vertices) : void
	+{abstract} term() : void
}


class RecorderFactory {
	-RecorderFactory()
	+~RecorderFactory()
	-invokeCreateFunction(const string& className) : Recorder*
	+{static} getInstance() : RecorderFactory*
	-createFunctions : RecorderFunctionMap
	+createRecorder(const string& className) : shared_ptr<Recorder>
	-recorderInstance : shared_ptr<Recorder>
	-registerClass(const string& className, CreateFunction function) : void
}


class XmlGrowthRecorder {
	-radiiHistory_ : CompleteMatrix
	-ratesHistory_ : CompleteMatrix
	+{static} Create() : Recorder*
	+compileHistories(AllVertices& neurons) : void
	-getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
}


class XmlRecorder {
	+XmlRecorder()
	+{static} Create() : Recorder*
	#spikesHistory_ : VectorMatrix
	#resultOut_ : ofstream
	+compileHistories(AllVertices& vertices) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& vertices) : void
	+term() : void
}




.Hdf5Recorder <|- - .Hdf5GrowthRecorder


.Recorder <|- - .Hdf5Recorder


.Recorder <|- - .XmlRecorder



.RecorderFactory *- - .Recorder









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>