<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1198px" preserveAspectRatio="none" style="width:1442px;height:1198px;" version="1.1" viewBox="0 0 1442 1198" width="1442px" zoomAndPan="magnify"><defs><filter height="300%" id="f1whugm4j0l00w" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[af68557a962a5f1f7548a7e590f8fd62]
class Hdf5GrowthRecorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="240.0703" id="Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="94.5" y="947"/><ellipse cx="167.25" cy="963" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M170.2188,968.6406 Q169.6406,968.9375 169,969.0781 Q168.3594,969.2344 167.6563,969.2344 Q165.1563,969.2344 163.8281,967.5938 Q162.5156,965.9375 162.5156,962.8125 Q162.5156,959.6875 163.8281,958.0313 Q165.1563,956.375 167.6563,956.375 Q168.3594,956.375 169,956.5313 Q169.6563,956.6875 170.2188,956.9844 L170.2188,959.7031 Q169.5938,959.125 169,958.8594 Q168.4063,958.5781 167.7813,958.5781 Q166.4375,958.5781 165.75,959.6563 Q165.0625,960.7188 165.0625,962.8125 Q165.0625,964.9063 165.75,965.9844 Q166.4375,967.0469 167.7813,967.0469 Q168.4063,967.0469 169,966.7813 Q169.5938,966.5 170.2188,965.9219 L170.2188,968.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="187.75" y="967.1543">Hdf5GrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="377.5" y1="979" y2="979"/><polygon fill="none" points="105.5,985,109.5,989,105.5,993,101.5,989" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="114.5" y="993.2104">radiiHistory_ : BGFLOAT*</text><polygon fill="none" points="105.5,997.8047,109.5,1001.8047,105.5,1005.8047,101.5,1001.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="114.5" y="1006.0151">ratesHistory_ : BGFLOAT*</text><polygon fill="none" points="105.5,1010.6094,109.5,1014.6094,105.5,1018.6094,101.5,1014.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="114.5" y="1018.8198">dataSetRadiiHist_ : DataSet*</text><polygon fill="none" points="105.5,1023.4141,109.5,1027.4141,105.5,1031.4141,101.5,1027.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="114.5" y="1031.6245">dataSetRatesHist_ : DataSet*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="95.5" x2="377.5" y1="1038.2188" y2="1038.2188"/><ellipse cx="105.5" cy="1049.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="114.5" y="1052.4292">Hdf5GrowthRecorder()</text><ellipse cx="105.5" cy="1062.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="114.5" y="1065.2339">~Hdf5GrowthRecorder()</text><ellipse cx="105.5" cy="1074.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="114.5" y="1078.0386">Create() : IRecorder*</text><ellipse cx="105.5" cy="1087.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="114.5" y="1090.8433">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="105.5" cy="1100.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="114.5" y="1103.6479">getValues() : void</text><polygon fill="#FFFF44" points="105.5,1108.2422,109.5,1112.2422,105.5,1116.2422,101.5,1112.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="114.5" y="1116.4526">initDataSet() : void</text><ellipse cx="105.5" cy="1126.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="114.5" y="1129.2573">initDefaultValues() : void</text><ellipse cx="105.5" cy="1138.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="114.5" y="1142.062">initValues() : void</text><ellipse cx="105.5" cy="1151.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="114.5" y="1154.8667">printParameters() : void</text><ellipse cx="105.5" cy="1164.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="114.5" y="1167.6714">term() : void</text><polygon fill="#FFFF44" points="105.5,1172.2656,109.5,1176.2656,105.5,1180.2656,101.5,1176.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="114.5" y="1180.4761">writeRadiiRates() : void</text><!--MD5=[2f81b0e77ba864956fe3cef8330f890e]
class Hdf5Recorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="406.5313" id="Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="6" y="480"/><ellipse cx="189.25" cy="496" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M192.2188,501.6406 Q191.6406,501.9375 191,502.0781 Q190.3594,502.2344 189.6563,502.2344 Q187.1563,502.2344 185.8281,500.5938 Q184.5156,498.9375 184.5156,495.8125 Q184.5156,492.6875 185.8281,491.0313 Q187.1563,489.375 189.6563,489.375 Q190.3594,489.375 191,489.5313 Q191.6563,489.6875 192.2188,489.9844 L192.2188,492.7031 Q191.5938,492.125 191,491.8594 Q190.4063,491.5781 189.7813,491.5781 Q188.4375,491.5781 187.75,492.6563 Q187.0625,493.7188 187.0625,495.8125 Q187.0625,497.9063 187.75,498.9844 Q188.4375,500.0469 189.7813,500.0469 Q190.4063,500.0469 191,499.7813 Q191.5938,499.5 192.2188,498.9219 L192.2188,501.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="209.75" y="500.1543">Hdf5Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="466" y1="512" y2="512"/><polygon fill="none" points="17,518,21,522,17,526,13,522" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="526.2104">dataSetBurstHist_ : DataSet*</text><polygon fill="none" points="17,530.8047,21,534.8047,17,538.8047,13,534.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="539.0151">dataSetNeuronThresh_ : DataSet*</text><polygon fill="none" points="17,543.6094,21,547.6094,17,551.6094,13,547.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="26" y="551.8198">dataSetNeuronTypes_ : DataSet*</text><polygon fill="none" points="17,556.4141,21,560.4141,17,564.4141,13,560.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="564.6245">dataSetProbedNeurons_ : DataSet*</text><polygon fill="none" points="17,569.2188,21,573.2188,17,577.2188,13,573.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="26" y="577.4292">dataSetSimulationEndTime_ : DataSet*</text><polygon fill="none" points="17,582.0234,21,586.0234,17,590.0234,13,586.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="590.2339">dataSetSpikesHist_ : DataSet*</text><polygon fill="none" points="17,594.8281,21,598.8281,17,602.8281,13,598.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="603.0386">dataSetSpikesProbedNeurons_ : DataSet*</text><polygon fill="none" points="17,607.6328,21,611.6328,17,615.6328,13,611.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="615.8433">dataSetStarterNeurons_ : DataSet*</text><polygon fill="none" points="17,620.4375,21,624.4375,17,628.4375,13,624.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="628.6479">dataSetTsim_ : DataSet*</text><polygon fill="none" points="17,633.2422,21,637.2422,17,641.2422,13,637.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="641.4526">dataSetXloc_ : DataSet*</text><polygon fill="none" points="17,646.0469,21,650.0469,17,654.0469,13,650.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="654.2573">dataSetYloc_ : DataSet*</text><polygon fill="none" points="17,658.8516,21,662.8516,17,666.8516,13,662.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="26" y="667.062">resultOut_ : H5File*</text><polygon fill="none" points="17,671.6563,21,675.6563,17,679.6563,13,675.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="26" y="679.8667">offsetSpikesProbedNeurons_ : hsize_t*</text><polygon fill="none" points="17,684.4609,21,688.4609,17,692.4609,13,688.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="692.6714">burstinessHist_ : int*</text><polygon fill="none" points="17,697.2656,21,701.2656,17,705.2656,13,701.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="705.4761">spikesHistory_ : int*</text><polygon fill="none" points="17,710.0703,21,714.0703,17,718.0703,13,714.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="26" y="718.2808">spikesProbedNeurons_ : vector&lt;uint64_t&gt;*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="466" y1="724.875" y2="724.875"/><ellipse cx="17" cy="735.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="739.0854">Hdf5Recorder()</text><ellipse cx="17" cy="748.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="26" y="751.8901">Create() : IRecorder*</text><ellipse cx="17" cy="761.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="26" y="764.6948">compileHistories(AllVertices&amp; neurons) : void</text><polygon fill="#FFFF44" points="17,769.2891,21,773.2891,17,777.2891,13,773.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="26" y="777.4995">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="17" cy="787.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="790.3042">getValues() : void</text><ellipse cx="17" cy="799.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="26" y="803.1089">init() : void</text><polygon fill="#FFFF44" points="17,807.7031,21,811.7031,17,815.7031,13,811.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="815.9136">initDataSet() : void</text><ellipse cx="17" cy="825.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="828.7183">initDefaultValues() : void</text><ellipse cx="17" cy="838.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="841.5229">initValues() : void</text><ellipse cx="17" cy="851.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="854.3276">printParameters() : void</text><ellipse cx="17" cy="863.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="26" y="867.1323">saveSimData(const AllVertices&amp; neurons) : void</text><ellipse cx="17" cy="876.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="26" y="879.937">term() : void</text><!--MD5=[a2efe13f97b9395dfb70e2255bd52698]
class IRecorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="201.6563" id="IRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="462" x="253.5" y="218"/><ellipse cx="449.75" cy="234" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M449.8594,229.3438 L448.7031,234.4219 L451.0313,234.4219 L449.8594,229.3438 Z M448.375,227.1094 L451.3594,227.1094 L454.7188,239.5 L452.2656,239.5 L451.5,236.4375 L448.2188,236.4375 L447.4688,239.5 L445.0313,239.5 L448.375,227.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="470.25" y="238.1543">IRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="714.5" y1="250" y2="250"/><polygon fill="none" points="264.5,256,268.5,260,264.5,264,260.5,260" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="273.5" y="264.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="264.5,268.8047,268.5,272.8047,264.5,276.8047,260.5,272.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="273.5" y="277.0151">resultFileName_ : string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="714.5" y1="283.6094" y2="283.6094"/><ellipse cx="264.5" cy="294.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="273.5" y="297.8198">~IRecorder()</text><ellipse cx="264.5" cy="307.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="273.5" y="310.6245">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="264.5,315.2188,268.5,319.2188,264.5,323.2188,260.5,319.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="273.5" y="323.4292">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="264.5" cy="333.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="273.5" y="336.2339">getValues() : void</text><ellipse cx="264.5" cy="345.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="273.5" y="349.0386">init() : void</text><ellipse cx="264.5" cy="358.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="273.5" y="361.8433">initDefaultValues() : void</text><ellipse cx="264.5" cy="371.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="273.5" y="374.6479">initValues() : void</text><ellipse cx="264.5" cy="384.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="273.5" y="387.4526">printParameters() : void</text><ellipse cx="264.5" cy="397.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="270" x="273.5" y="400.2573">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="264.5" cy="409.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="273.5" y="413.062">term() : void</text><!--MD5=[2d167d26ebdee84d71997832bfe86c3e]
class RecorderFactory--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="150.4375" id="RecorderFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="268" y="8"/><ellipse cx="428.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M431.7188,29.6406 Q431.1406,29.9375 430.5,30.0781 Q429.8594,30.2344 429.1563,30.2344 Q426.6563,30.2344 425.3281,28.5938 Q424.0156,26.9375 424.0156,23.8125 Q424.0156,20.6875 425.3281,19.0313 Q426.6563,17.375 429.1563,17.375 Q429.8594,17.375 430.5,17.5313 Q431.1563,17.6875 431.7188,17.9844 L431.7188,20.7031 Q431.0938,20.125 430.5,19.8594 Q429.9063,19.5781 429.2813,19.5781 Q427.9375,19.5781 427.25,20.6563 Q426.5625,21.7188 426.5625,23.8125 Q426.5625,25.9063 427.25,26.9844 Q427.9375,28.0469 429.2813,28.0469 Q429.9063,28.0469 430.5,27.7813 Q431.0938,27.5 431.7188,26.9219 L431.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="449.25" y="28.1543">RecorderFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269" x2="700" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="288" y="54.2104">createFunctions : RecorderFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="288" y="67.0151">recorderInstance : shared_ptr&lt;IRecorder&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269" x2="700" y1="73.6094" y2="73.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="81.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="288" y="87.8198">RecorderFactory()</text><ellipse cx="279" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="288" y="100.6245">~RecorderFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="107.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="288" y="113.4292">invokeCreateFunction(const string&amp; className) : IRecorder*</text><ellipse cx="279" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="288" y="126.2339">getInstance() : RecorderFactory*</text><ellipse cx="279" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="288" y="139.0386">createRecorder(const string&amp; className) : shared_ptr&lt;IRecorder&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="276" y="145.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="288" y="151.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[70954963b39295522525212df8952a0c]
class XmlGrowthRecorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="201.6563" id="XmlGrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="458" y="966"/><ellipse cx="623.25" cy="982" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M626.2188,987.6406 Q625.6406,987.9375 625,988.0781 Q624.3594,988.2344 623.6563,988.2344 Q621.1563,988.2344 619.8281,986.5938 Q618.5156,984.9375 618.5156,981.8125 Q618.5156,978.6875 619.8281,977.0313 Q621.1563,975.375 623.6563,975.375 Q624.3594,975.375 625,975.5313 Q625.6563,975.6875 626.2188,975.9844 L626.2188,978.7031 Q625.5938,978.125 625,977.8594 Q624.4063,977.5781 623.7813,977.5781 Q622.4375,977.5781 621.75,978.6563 Q621.0625,979.7188 621.0625,981.8125 Q621.0625,983.9063 621.75,984.9844 Q622.4375,986.0469 623.7813,986.0469 Q624.4063,986.0469 625,985.7813 Q625.5938,985.5 626.2188,984.9219 L626.2188,987.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="643.75" y="986.1543">XmlGrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="918" y1="998" y2="998"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="466" y="1006"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="478" y="1012.2104">radiiHistory_ : CompleteMatrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="466" y="1018.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="478" y="1025.0151">ratesHistory_ : CompleteMatrix</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="918" y1="1031.6094" y2="1031.6094"/><ellipse cx="469" cy="1042.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="478" y="1045.8198">XmlGrowthRecorder()</text><ellipse cx="469" cy="1055.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="478" y="1058.6245">~XmlGrowthRecorder()</text><ellipse cx="469" cy="1068.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="478" y="1071.4292">Create() : IRecorder*</text><ellipse cx="469" cy="1081.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="478" y="1084.2339">compileHistories(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="466" y="1090.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="478" y="1097.0386">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="469" cy="1106.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="478" y="1109.8433">getValues() : void</text><ellipse cx="469" cy="1119.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="478" y="1122.6479">initDefaultValues() : void</text><ellipse cx="469" cy="1132.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="478" y="1135.4526">initValues() : void</text><ellipse cx="469" cy="1145.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="478" y="1148.2573">printParameters() : void</text><ellipse cx="469" cy="1157.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="478" y="1161.062">saveSimData(const AllVertices&amp; neurons) : void</text><!--MD5=[e2fde7c48d35c1cbf959be266268237c]
class XmlRecorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="227.2656" id="XmlRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="502" y="570"/><ellipse cx="689.25" cy="586" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M692.2188,591.6406 Q691.6406,591.9375 691,592.0781 Q690.3594,592.2344 689.6563,592.2344 Q687.1563,592.2344 685.8281,590.5938 Q684.5156,588.9375 684.5156,585.8125 Q684.5156,582.6875 685.8281,581.0313 Q687.1563,579.375 689.6563,579.375 Q690.3594,579.375 691,579.5313 Q691.6563,579.6875 692.2188,579.9844 L692.2188,582.7031 Q691.5938,582.125 691,581.8594 Q690.4063,581.5781 689.7813,581.5781 Q688.4375,581.5781 687.75,582.6563 Q687.0625,583.7188 687.0625,585.8125 Q687.0625,587.9063 687.75,588.9844 Q688.4375,590.0469 689.7813,590.0469 Q690.4063,590.0469 691,589.7813 Q691.5938,589.5 692.2188,588.9219 L692.2188,591.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="709.75" y="590.1543">XmlRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="503" x2="962" y1="602" y2="602"/><polygon fill="none" points="513,608,517,612,513,616,509,612" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="522" y="616.2104">burstinessHist_ : VectorMatrix</text><polygon fill="none" points="513,620.8047,517,624.8047,513,628.8047,509,624.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="522" y="629.0151">spikesHistory_ : VectorMatrix</text><polygon fill="none" points="513,633.6094,517,637.6094,513,641.6094,509,637.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="522" y="641.8198">resultOut_ : ofstream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="503" x2="962" y1="648.4141" y2="648.4141"/><ellipse cx="513" cy="659.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="522" y="662.6245">XmlRecorder()</text><ellipse cx="513" cy="672.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="522" y="675.4292">Create() : IRecorder*</text><ellipse cx="513" cy="685.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="522" y="688.2339">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="513,692.8281,517,696.8281,513,700.8281,509,696.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="522" y="701.0386">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="513" cy="710.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="522" y="713.8433">getValues() : void</text><ellipse cx="513" cy="723.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="522" y="726.6479">init() : void</text><ellipse cx="513" cy="736.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="522" y="739.4526">initDefaultValues() : void</text><ellipse cx="513" cy="749.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="522" y="752.2573">initValues() : void</text><ellipse cx="513" cy="761.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="522" y="765.062">printParameters() : void</text><ellipse cx="513" cy="774.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="522" y="777.8667">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="513" cy="787.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="522" y="790.6714">term() : void</text><!--MD5=[e01fc12d2ca5b032aa39c4fc4bc72679]
class XmlSTDPRecorder--><rect fill="#FEFECE" filter="url(#f1whugm4j0l00w)" height="227.2656" id="XmlSTDPRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="477" x="954" y="953.5"/><ellipse cx="1133.25" cy="969.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1136.2188,975.1406 Q1135.6406,975.4375 1135,975.5781 Q1134.3594,975.7344 1133.6563,975.7344 Q1131.1563,975.7344 1129.8281,974.0938 Q1128.5156,972.4375 1128.5156,969.3125 Q1128.5156,966.1875 1129.8281,964.5313 Q1131.1563,962.875 1133.6563,962.875 Q1134.3594,962.875 1135,963.0313 Q1135.6563,963.1875 1136.2188,963.4844 L1136.2188,966.2031 Q1135.5938,965.625 1135,965.3594 Q1134.4063,965.0781 1133.7813,965.0781 Q1132.4375,965.0781 1131.75,966.1563 Q1131.0625,967.2188 1131.0625,969.3125 Q1131.0625,971.4063 1131.75,972.4844 Q1132.4375,973.5469 1133.7813,973.5469 Q1134.4063,973.5469 1135,973.2813 Q1135.5938,973 1136.2188,972.4219 L1136.2188,975.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="1153.75" y="973.6543">XmlSTDPRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="955" x2="1430" y1="985.5" y2="985.5"/><polygon fill="none" points="965,991.5,969,995.5,965,999.5,961,995.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="974" y="999.7104">weightsHistory_ : vector&lt;vector&lt;BGFLOAT&gt;&gt;</text><polygon fill="none" points="965,1004.3047,969,1008.3047,965,1012.3047,961,1008.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="974" y="1012.5151">destNeuronIndexHistory_ : vector&lt;vector&lt;int&gt;&gt;</text><polygon fill="none" points="965,1017.1094,969,1021.1094,965,1025.1094,961,1021.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="974" y="1025.3198">sourceNeuronIndexHistory_ : vector&lt;vector&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="955" x2="1430" y1="1031.9141" y2="1031.9141"/><ellipse cx="965" cy="1042.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="974" y="1046.1245">XmlSTDPRecorder()</text><ellipse cx="965" cy="1055.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="974" y="1058.9292">~XmlSTDPRecorder()</text><ellipse cx="965" cy="1068.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="974" y="1071.7339">Create() : IRecorder*</text><ellipse cx="965" cy="1081.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="974" y="1084.5386">toXML(string name, vector&lt;vector&lt;BGFLOAT&gt;&gt; MatrixToWrite) : string {query}</text><ellipse cx="965" cy="1094.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="974" y="1097.3433">toXML(string name, vector&lt;vector&lt;int&gt;&gt; MatrixToWrite) : string {query}</text><ellipse cx="965" cy="1106.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="974" y="1110.1479">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="965" cy="1119.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="974" y="1122.9526">getValues() : void</text><ellipse cx="965" cy="1132.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="974" y="1135.7573">initDefaultValues() : void</text><ellipse cx="965" cy="1145.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="974" y="1148.562">initValues() : void</text><ellipse cx="965" cy="1158.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="974" y="1161.3667">printParameters() : void</text><ellipse cx="965" cy="1170.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="974" y="1174.1714">saveSimData(const AllVertices&amp; neurons) : void</text><!--MD5=[19d836ace92e712b0d8c405f49d503c3]
reverse link Hdf5Recorder to Hdf5GrowthRecorder--><path d="M236.5,907.72 C236.5,921.11 236.5,934.28 236.5,946.96 " fill="none" id="Hdf5Recorder&lt;-Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="229.5,907.26,236.5,887.26,243.5,907.26,229.5,907.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9f6fa59aebac9bc7112aaf284395847c]
reverse link IRecorder to Hdf5Recorder--><path d="M404.65,436.71 C395.11,450.67 385.16,465.2 375.08,479.93 " fill="none" id="IRecorder&lt;-Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="399.01,432.57,416.08,420.01,410.56,440.47,399.01,432.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7186e99c451d736dd7b9f0c726ab5277]
reverse link IRecorder to XmlRecorder--><path d="M564.32,436.68 C593.49,479.31 626.41,527.43 655.34,569.72 " fill="none" id="IRecorder&lt;-XmlRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="558.44,440.47,552.92,420.01,569.99,432.57,558.44,440.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8e79f27ee7b582c0f30a64eceb9600c6]
reverse link XmlRecorder to XmlGrowthRecorder--><path d="M717.18,817.32 C711.56,866.1 705.29,920.46 700.05,965.89 " fill="none" id="XmlRecorder&lt;-XmlGrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="710.26,816.22,719.51,797.16,724.17,817.83,710.26,816.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7b176ba4d3de823aebcc641ddd35342b]
reverse link XmlRecorder to XmlSTDPRecorder--><path d="M883.85,810.02 C939.56,856.22 1002.26,908.22 1056.53,953.23 " fill="none" id="XmlRecorder&lt;-XmlSTDPRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="879.26,815.31,868.34,797.16,888.2,804.54,879.26,815.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79989c5c612cd705f8c6af7a6267fbc0]
reverse link RecorderFactory to IRecorder--><path d="M484.5,171.2 C484.5,186.43 484.5,202.38 484.5,217.91 " fill="none" id="RecorderFactory&lt;-IRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="484.5,158.04,480.5,164.04,484.5,170.04,488.5,164.04,484.5,158.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b77f015d98a6c3f3d7dc93f4222f9b84]
@startuml RecorderClassDiagram






class Hdf5GrowthRecorder {
	+Hdf5GrowthRecorder()
	+~Hdf5GrowthRecorder()
	#radiiHistory_ : BGFLOAT*
	#ratesHistory_ : BGFLOAT*
	#dataSetRadiiHist_ : DataSet*
	#dataSetRatesHist_ : DataSet*
	+{static} Create() : IRecorder*
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+term() : void
	#writeRadiiRates() : void
}


class Hdf5Recorder {
	+Hdf5Recorder()
	#dataSetBurstHist_ : DataSet*
	#dataSetNeuronThresh_ : DataSet*
	#dataSetNeuronTypes_ : DataSet*
	#dataSetProbedNeurons_ : DataSet*
	#dataSetSimulationEndTime_ : DataSet*
	#dataSetSpikesHist_ : DataSet*
	#dataSetSpikesProbedNeurons_ : DataSet*
	#dataSetStarterNeurons_ : DataSet*
	#dataSetTsim_ : DataSet*
	#dataSetXloc_ : DataSet*
	#dataSetYloc_ : DataSet*
	#resultOut_ : H5File*
	+{static} Create() : IRecorder*
	#offsetSpikesProbedNeurons_ : hsize_t*
	#burstinessHist_ : int*
	#spikesHistory_ : int*
	#spikesProbedNeurons_ : vector<uint64_t>*
	+compileHistories(AllVertices& neurons) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
	+term() : void
}


abstract class IRecorder {
	+~IRecorder()
	#fileLogger_ : log4cplus::Logger
	#resultFileName_ : string
	+{abstract} compileHistories(AllVertices& vertices) : void
	#{abstract} getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+{abstract} getValues() : void
	+{abstract} init() : void
	+{abstract} initDefaultValues() : void
	+{abstract} initValues() : void
	+{abstract} printParameters() : void
	+{abstract} saveSimData(const AllVertices& vertices) : void
	+{abstract} term() : void
}


class RecorderFactory {
	-RecorderFactory()
	+~RecorderFactory()
	-invokeCreateFunction(const string& className) : IRecorder*
	+{static} getInstance() : RecorderFactory*
	-createFunctions : RecorderFunctionMap
	+createRecorder(const string& className) : shared_ptr<IRecorder>
	-recorderInstance : shared_ptr<IRecorder>
	-registerClass(const string& className, CreateFunction function) : void
}


class XmlGrowthRecorder {
	+XmlGrowthRecorder()
	+~XmlGrowthRecorder()
	-radiiHistory_ : CompleteMatrix
	-ratesHistory_ : CompleteMatrix
	+{static} Create() : IRecorder*
	+compileHistories(AllVertices& neurons) : void
	-getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
}


class XmlRecorder {
	+XmlRecorder()
	+{static} Create() : IRecorder*
	#burstinessHist_ : VectorMatrix
	#spikesHistory_ : VectorMatrix
	#resultOut_ : ofstream
	+compileHistories(AllVertices& vertices) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& vertices) : void
	+term() : void
}


class XmlSTDPRecorder {
	+XmlSTDPRecorder()
	+~XmlSTDPRecorder()
	+{static} Create() : IRecorder*
	+toXML(string name, vector<vector<BGFLOAT>> MatrixToWrite) : string {query}
	+toXML(string name, vector<vector<int>> MatrixToWrite) : string {query}
	#weightsHistory_ : vector<vector<BGFLOAT>>
	#destNeuronIndexHistory_ : vector<vector<int>>
	#sourceNeuronIndexHistory_ : vector<vector<int>>
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
}






.Hdf5Recorder <|- - .Hdf5GrowthRecorder


.IRecorder <|- - .Hdf5Recorder


.IRecorder <|- - .XmlRecorder


.XmlRecorder <|- - .XmlGrowthRecorder


.XmlRecorder <|- - .XmlSTDPRecorder






.RecorderFactory *- - .IRecorder









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>