<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3570px" preserveAspectRatio="none" style="width:3688px;height:3570px;" version="1.1" viewBox="0 0 3688 3570" width="3688px" zoomAndPan="magnify"><defs><filter height="300%" id="fl7fgykkhb41f" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[935a686a552498c9fe3db149d943753f]
<<<<<<< HEAD
class AllDSSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="444.9453" id="AllDSSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="848" x="6" y="2411.5"/><ellipse cx="380.25" cy="2427.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.2188,2433.1406 Q382.6406,2433.4375 382,2433.5781 Q381.3594,2433.7344 380.6563,2433.7344 Q378.1563,2433.7344 376.8281,2432.0938 Q375.5156,2430.4375 375.5156,2427.3125 Q375.5156,2424.1875 376.8281,2422.5313 Q378.1563,2420.875 380.6563,2420.875 Q381.3594,2420.875 382,2421.0313 Q382.6563,2421.1875 383.2188,2421.4844 L383.2188,2424.2031 Q382.5938,2423.625 382,2423.3594 Q381.4063,2423.0781 380.7813,2423.0781 Q379.4375,2423.0781 378.75,2424.1563 Q378.0625,2425.2188 378.0625,2427.3125 Q378.0625,2429.4063 378.75,2430.4844 Q379.4375,2431.5469 380.7813,2431.5469 Q381.4063,2431.5469 382,2431.2813 Q382.5938,2431 383.2188,2430.4219 L383.2188,2433.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="400.75" y="2431.6543">AllDSSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2443.5" y2="2443.5"/><ellipse cx="17" cy="2454.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2457.7104">D_ : BGFLOAT*</text><ellipse cx="17" cy="2467.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="2470.5151">F_ : BGFLOAT*</text><ellipse cx="17" cy="2480.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2483.3198">U_ : BGFLOAT*</text><ellipse cx="17" cy="2492.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="2496.1245">r_ : BGFLOAT*</text><ellipse cx="17" cy="2505.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="2508.9292">u_ : BGFLOAT*</text><ellipse cx="17" cy="2518.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="2521.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2528.3281" y2="2528.3281"/><ellipse cx="17" cy="2539.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="2542.5386">AllDSSynapses()</text><ellipse cx="17" cy="2552.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="26" y="2555.3433">AllDSSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="17" cy="2564.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="2568.1479">~AllDSSynapses()</text><ellipse cx="17" cy="2577.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="26" y="2580.9526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="17,2585.5469,21,2589.5469,17,2593.5469,13,2589.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="26" y="2593.7573">allocDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2603.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2606.562">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="17" cy="2616.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2619.3667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2623.9609,21,2627.9609,17,2631.9609,13,2627.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="2632.1714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="17,2636.7656,21,2640.7656,17,2644.7656,13,2640.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="26" y="2644.9761">copyDeviceToHost(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2654.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2657.7808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2667.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2670.5854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2680.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2683.3901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2687.9844,21,2691.9844,17,2695.9844,13,2691.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="822" x="26" y="2696.1948">copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2705.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="26" y="2708.9995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="17,2713.5938,21,2717.5938,17,2721.5938,13,2717.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="26" y="2721.8042">deleteDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2731.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="26" y="2734.6089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2744.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2747.4136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="17" cy="2757.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="2760.2183">printParameters() : void {query}</text><ellipse cx="17" cy="2769.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="2773.0229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="17,2777.6172,21,2781.6172,17,2785.6172,13,2781.6172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="26" y="2785.8276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="17" cy="2795.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="2798.6323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="2808.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="2811.437">setEdgeClassID() : void</text><ellipse cx="17" cy="2821.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="2824.2417">setupEdges() : void</text><polygon fill="#FFFF44" points="17,2828.8359,21,2832.8359,17,2836.8359,13,2832.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="26" y="2837.0464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="17,2841.6406,21,2845.6406,17,2849.6406,13,2845.6406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2849.8511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[09c0093d34d85daed484b6b6f446313a]
class AllDynamicSTDPSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="444.9453" id="AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="910" x="865" y="3115"/><ellipse cx="1236.75" cy="3131" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1239.7188,3136.6406 Q1239.1406,3136.9375 1238.5,3137.0781 Q1237.8594,3137.2344 1237.1563,3137.2344 Q1234.6563,3137.2344 1233.3281,3135.5938 Q1232.0156,3133.9375 1232.0156,3130.8125 Q1232.0156,3127.6875 1233.3281,3126.0313 Q1234.6563,3124.375 1237.1563,3124.375 Q1237.8594,3124.375 1238.5,3124.5313 Q1239.1563,3124.6875 1239.7188,3124.9844 L1239.7188,3127.7031 Q1239.0938,3127.125 1238.5,3126.8594 Q1237.9063,3126.5781 1237.2813,3126.5781 Q1235.9375,3126.5781 1235.25,3127.6563 Q1234.5625,3128.7188 1234.5625,3130.8125 Q1234.5625,3132.9063 1235.25,3133.9844 Q1235.9375,3135.0469 1237.2813,3135.0469 Q1237.9063,3135.0469 1238.5,3134.7813 Q1239.0938,3134.5 1239.7188,3133.9219 L1239.7188,3136.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1257.25" y="3135.1543">AllDynamicSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="3147" y2="3147"/><ellipse cx="876" cy="3158" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="3161.2104">D_ : BGFLOAT*</text><ellipse cx="876" cy="3170.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="885" y="3174.0151">F_ : BGFLOAT*</text><ellipse cx="876" cy="3183.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="3186.8198">U_ : BGFLOAT*</text><ellipse cx="876" cy="3196.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="885" y="3199.6245">r_ : BGFLOAT*</text><ellipse cx="876" cy="3209.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="885" y="3212.4292">u_ : BGFLOAT*</text><ellipse cx="876" cy="3222.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="885" y="3225.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="3231.8281" y2="3231.8281"/><ellipse cx="876" cy="3242.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="885" y="3246.0386">AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="3255.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="885" y="3258.8433">AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="876" cy="3268.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="885" y="3271.6479">~AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="3281.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="885" y="3284.4526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="876,3289.0469,880,3293.0469,876,3297.0469,872,3293.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="885" y="3297.2573">allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3306.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3310.062">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="876" cy="3319.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3322.8667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3327.4609,880,3331.4609,876,3335.4609,872,3331.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="885" y="3335.6714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="876,3340.2656,880,3344.2656,876,3348.2656,872,3344.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="885" y="3348.4761">copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3358.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3361.2808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3370.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3374.0854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3383.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3386.8901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3391.4844,880,3395.4844,876,3399.4844,872,3395.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="885" y="3399.6948">copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3409.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="885" y="3412.4995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="876,3417.0938,880,3421.0938,876,3425.0938,872,3421.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="885" y="3425.3042">deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3434.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="885" y="3438.1089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3447.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3450.9136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="876" cy="3460.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="885" y="3463.7183">printParameters() : void {query}</text><ellipse cx="876" cy="3473.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="885" y="3476.5229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="876,3481.1172,880,3485.1172,876,3489.1172,872,3485.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="885" y="3489.3276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="876" cy="3498.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="885" y="3502.1323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="876" cy="3511.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="885" y="3514.937">setEdgeClassID() : void</text><ellipse cx="876" cy="3524.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="885" y="3527.7417">setupEdges() : void</text><polygon fill="#FFFF44" points="876,3532.3359,880,3536.3359,876,3540.3359,872,3536.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="885" y="3540.5464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="876,3545.1406,880,3549.1406,876,3553.1406,872,3549.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3553.3511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[06f12ec46b87224fd0e1c514fed4a6e4]
class AllEdges--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="585.7969" id="AllEdges" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="482.5" y="557"/><ellipse cx="844.75" cy="573" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M844.8594,568.3438 L843.7031,573.4219 L846.0313,573.4219 L844.8594,568.3438 Z M843.375,566.1094 L846.3594,566.1094 L849.7188,578.5 L847.2656,578.5 L846.5,575.4375 L843.2188,575.4375 L842.4688,578.5 L840.0313,578.5 L843.375,566.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="865.25" y="577.1543">AllEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="589" y2="589"/><ellipse cx="493.5" cy="600" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="502.5" y="603.2104">W_ : BGFLOAT*</text><ellipse cx="493.5" cy="612.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="502.5" y="616.0151">summationPoint_ : BGFLOAT**</text><ellipse cx="493.5" cy="625.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="502.5" y="628.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="493.5" cy="638.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="502.5" y="641.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="493.5" cy="651.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="502.5" y="654.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="493.5" cy="664.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="502.5" y="667.2339">inUse_ : bool*</text><ellipse cx="493.5" cy="676.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="502.5" y="680.0386">type_ : edgeType*</text><ellipse cx="493.5" cy="689.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="502.5" y="692.8433">countVertices_ : int</text><ellipse cx="493.5" cy="702.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="502.5" y="705.6479">destVertexIndex_ : int*</text><ellipse cx="493.5" cy="715.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="502.5" y="718.4526">sourceVertexIndex_ : int*</text><polygon fill="none" points="493.5,723.0469,497.5,727.0469,493.5,731.0469,489.5,727.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="731.2573">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="493.5,735.8516,497.5,739.8516,493.5,743.8516,489.5,739.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="502.5" y="744.062">fileLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="750.6563" y2="750.6563"/><ellipse cx="493.5" cy="761.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="502.5" y="764.8667">AllEdges()</text><ellipse cx="493.5" cy="774.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="502.5" y="777.6714">AllEdges(const int numVertices, const int maxEdges)</text><ellipse cx="493.5" cy="787.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="502.5" y="790.4761">~AllEdges()</text><polygon fill="#FFFF44" points="493.5,795.0703,497.5,799.0703,493.5,803.0703,489.5,799.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="502.5" y="803.2808">edgeOrdinalToType(const int typeOrdinal) : edgeType</text><ellipse cx="493.5" cy="812.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="502.5" y="816.0854">addEdge(BGSIZE&amp; iEdg, edgeType type, const int srcVertex, const int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT) : void</text><ellipse cx="493.5" cy="825.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="502.5" y="828.8901">advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void</text><ellipse cx="493.5" cy="838.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="502.5" y="841.6948">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><ellipse cx="493.5" cy="851.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="502.5" y="854.4995">advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="493.5" cy="864.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="502.5" y="867.3042">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="493.5" cy="876.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="502.5" y="880.1089">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="889.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="502.5" y="892.9136">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="902.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="502.5" y="905.7183">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="915.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="918.5229">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="928.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="931.3276">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="940.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="502.5" y="944.1323">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="953.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="731" x="502.5" y="956.937">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><ellipse cx="493.5" cy="966.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="502.5" y="969.7417">createEdgeIndexMap(shared_ptr&lt;EdgeIndexMap&gt; edgeIndexMap) : void</text><ellipse cx="493.5" cy="979.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="297" x="502.5" y="982.5464">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="992.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="502.5" y="995.3511">eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="1004.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="502.5" y="1008.1558">load(Archive&amp; archive) : void</text><ellipse cx="493.5" cy="1017.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="502.5" y="1020.9604">loadParameters() : void</text><ellipse cx="493.5" cy="1030.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="1033.7651">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="493.5" cy="1043.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="1046.5698">printParameters() : void {query}</text><polygon fill="#FFFF44" points="493.5,1051.1641,497.5,1055.1641,493.5,1059.1641,489.5,1055.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="502.5" y="1059.3745">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="1068.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="502.5" y="1072.1792">save(Archive&amp; archive) : void {query}</text><ellipse cx="493.5" cy="1081.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="502.5" y="1084.9839">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="493.5" cy="1094.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="502.5" y="1097.7886">setEdgeClassID() : void</text><ellipse cx="493.5" cy="1107.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="502.5" y="1110.5933">setupEdges() : void</text><polygon fill="#FFFF44" points="493.5,1115.1875,497.5,1119.1875,493.5,1123.1875,489.5,1119.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="502.5" y="1123.3979">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="493.5,1127.9922,497.5,1131.9922,493.5,1135.9922,489.5,1131.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="1136.2026">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[96f31d00847e9628d93d2720c47b9604]
class AllNeuroEdges--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="188.8516" id="AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="681" y="1203"/><ellipse cx="825.25" cy="1219" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M828.2188,1224.6406 Q827.6406,1224.9375 827,1225.0781 Q826.3594,1225.2344 825.6563,1225.2344 Q823.1563,1225.2344 821.8281,1223.5938 Q820.5156,1221.9375 820.5156,1218.8125 Q820.5156,1215.6875 821.8281,1214.0313 Q823.1563,1212.375 825.6563,1212.375 Q826.3594,1212.375 827,1212.5313 Q827.6563,1212.6875 828.2188,1212.9844 L828.2188,1215.7031 Q827.5938,1215.125 827,1214.8594 Q826.4063,1214.5781 825.7813,1214.5781 Q824.4375,1214.5781 823.75,1215.6563 Q823.0625,1216.7188 823.0625,1218.8125 Q823.0625,1220.9063 823.75,1221.9844 Q824.4375,1223.0469 825.7813,1223.0469 Q826.4063,1223.0469 827,1222.7813 Q827.5938,1222.5 828.2188,1221.9219 L828.2188,1224.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="845.75" y="1223.1543">AllNeuroEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="1235" y2="1235"/><ellipse cx="692" cy="1246" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="701" y="1249.2104">psr_ : BGFLOAT*</text><ellipse cx="692" cy="1258.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="356" x="701" y="1262.0151">SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="1268.6094" y2="1268.6094"/><ellipse cx="692" cy="1279.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="701" y="1282.8198">AllNeuroEdges()</text><ellipse cx="692" cy="1292.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="701" y="1295.6245">~AllNeuroEdges()</text><ellipse cx="692" cy="1305.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="701" y="1308.4292">edgSign(const edgeType type) : int</text><ellipse cx="692" cy="1318.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="701" y="1321.2339">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="692,1325.8281,696,1329.8281,692,1333.8281,688,1329.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="701" y="1334.0386">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="692" cy="1343.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="701" y="1346.8433">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="692" cy="1356.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="701" y="1359.6479">setupEdges() : void</text><polygon fill="#FFFF44" points="692,1364.2422,696,1368.2422,692,1372.2422,688,1368.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="701" y="1372.4526">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="692,1377.0469,696,1381.0469,692,1385.0469,688,1381.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="701" y="1385.2573">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[635988d62f36dba7a8b9baa086d12f03]
class AllSTDPSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="841.8906" id="AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="862" x="889" y="2213"/><ellipse cx="1262.75" cy="2229" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1265.7188,2234.6406 Q1265.1406,2234.9375 1264.5,2235.0781 Q1263.8594,2235.2344 1263.1563,2235.2344 Q1260.6563,2235.2344 1259.3281,2233.5938 Q1258.0156,2231.9375 1258.0156,2228.8125 Q1258.0156,2225.6875 1259.3281,2224.0313 Q1260.6563,2222.375 1263.1563,2222.375 Q1263.8594,2222.375 1264.5,2222.5313 Q1265.1563,2222.6875 1265.7188,2222.9844 L1265.7188,2225.7031 Q1265.0938,2225.125 1264.5,2224.8594 Q1263.9063,2224.5781 1263.2813,2224.5781 Q1261.9375,2224.5781 1261.25,2225.6563 Q1260.5625,2226.7188 1260.5625,2228.8125 Q1260.5625,2230.9063 1261.25,2231.9844 Q1261.9375,2233.0469 1263.2813,2233.0469 Q1263.9063,2233.0469 1264.5,2232.7813 Q1265.0938,2232.5 1265.7188,2231.9219 L1265.7188,2234.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="1283.25" y="2233.1543">AllSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="2245" y2="2245"/><ellipse cx="900" cy="2256" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="2259.2104">Aneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2268.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2272.0151">Aneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2281.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="2284.8198">Apos_E_ : BGFLOAT</text><ellipse cx="900" cy="2294.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2297.6245">Apos_I_ : BGFLOAT</text><ellipse cx="900" cy="2307.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="909" y="2310.4292">Wex_E_ : BGFLOAT</text><ellipse cx="900" cy="2320.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="909" y="2323.2339">Wex_I_ : BGFLOAT</text><ellipse cx="900" cy="2332.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="909" y="2336.0386">defaultSTDPgap_ : BGFLOAT</text><ellipse cx="900" cy="2345.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2348.8433">tauneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2358.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2361.6479">tauneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2371.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2374.4526">taupos_E_ : BGFLOAT</text><ellipse cx="900" cy="2384.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2387.2573">taupos_I_ : BGFLOAT</text><ellipse cx="900" cy="2396.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="909" y="2400.062">tauspost_E_ : BGFLOAT</text><ellipse cx="900" cy="2409.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="909" y="2412.8667">tauspost_I_ : BGFLOAT</text><ellipse cx="900" cy="2422.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2425.6714">tauspre_E_ : BGFLOAT</text><ellipse cx="900" cy="2435.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2438.4761">tauspre_I_ : BGFLOAT</text><ellipse cx="900" cy="2448.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2451.2808">Aneg_ : BGFLOAT*</text><ellipse cx="900" cy="2460.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2464.0854">Apos_ : BGFLOAT*</text><ellipse cx="900" cy="2473.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2476.8901">STDPgap_ : BGFLOAT*</text><ellipse cx="900" cy="2486.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="909" y="2489.6948">Wex_ : BGFLOAT*</text><ellipse cx="900" cy="2499.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2502.4995">muneg_ : BGFLOAT*</text><ellipse cx="900" cy="2512.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2515.3042">mupos_ : BGFLOAT*</text><ellipse cx="900" cy="2524.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2528.1089">tauneg_ : BGFLOAT*</text><ellipse cx="900" cy="2537.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2540.9136">taupos_ : BGFLOAT*</text><ellipse cx="900" cy="2550.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="909" y="2553.7183">tauspost_ : BGFLOAT*</text><ellipse cx="900" cy="2563.3125" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="909" y="2566.5229">tauspre_ : BGFLOAT*</text><ellipse cx="900" cy="2576.1172" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2579.3276">delayIndexPost_ : int*</text><ellipse cx="900" cy="2588.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2592.1323">delayQueuePostLength_ : int*</text><ellipse cx="900" cy="2601.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="909" y="2604.937">totalDelayPost_ : int*</text><ellipse cx="900" cy="2614.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="909" y="2617.7417">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="2624.3359" y2="2624.3359"/><ellipse cx="900" cy="2635.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2638.5464">AllSTDPSynapses()</text><ellipse cx="900" cy="2648.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="909" y="2651.3511">AllSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="900" cy="2660.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="909" y="2664.1558">~AllSTDPSynapses()</text><ellipse cx="900" cy="2673.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="909" y="2676.9604">Create() : AllEdges*</text><polygon fill="#FFFF44" points="900,2681.5547,904,2685.5547,900,2689.5547,896,2685.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="909" y="2689.7651">synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT</text><ellipse cx="900" cy="2699.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2702.5698">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="900,2707.1641,904,2711.1641,900,2715.1641,896,2711.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="909" y="2715.3745">isSpikeQueuePost(const BGSIZE iEdg) : bool</text><ellipse cx="900" cy="2724.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="909" y="2728.1792">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="900" cy="2737.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="909" y="2740.9839">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="900,2745.5781,904,2749.5781,900,2753.5781,896,2749.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="909" y="2753.7886">allocDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2763.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2766.5933">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="900" cy="2776.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2779.3979">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2783.9922,904,2787.9922,900,2791.9922,896,2787.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="909" y="2792.2026">copyDeviceToHost(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2801.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2805.0073">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2814.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2817.812">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2827.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2830.6167">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2835.2109,904,2839.2109,900,2843.2109,896,2839.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="836" x="909" y="2843.4214">copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2853.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="909" y="2856.2261">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="900,2860.8203,904,2864.8203,900,2868.8203,896,2864.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="909" y="2869.0308">deleteDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2878.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="909" y="2881.8354">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="900,2886.4297,904,2890.4297,900,2894.4297,896,2890.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="909" y="2894.6401">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2904.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="909" y="2907.4448">loadParameters() : void</text><ellipse cx="900" cy="2917.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="909" y="2920.2495">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2929.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="2933.0542">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="900" cy="2942.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="909" y="2945.8589">printParameters() : void {query}</text><ellipse cx="900" cy="2955.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="909" y="2958.6636">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="900,2963.2578,904,2967.2578,900,2971.2578,896,2967.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="909" y="2971.4683">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2981.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="909" y="2984.2729">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="900" cy="2993.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="909" y="2997.0776">setEdgeClassID() : void</text><ellipse cx="900" cy="3006.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="909" y="3009.8823">setupEdges() : void</text><polygon fill="#FFFF44" points="900,3014.4766,904,3018.4766,900,3022.4766,896,3018.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="909" y="3022.687">setupEdges(const int numVertices, const int maxEdges) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897" y="3029.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="909" y="3035.4917">stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void</text><polygon fill="#FFFF44" points="900,3040.0859,904,3044.0859,900,3048.0859,896,3044.0859" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="3048.2964">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[cfe37ad1a50a7dcaaf80645f5fb9fa69]
class AllSpikingSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="701.0391" id="AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="873" x="438.5" y="1452"/><ellipse cx="811.25" cy="1468" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,1473.6406 Q813.6406,1473.9375 813,1474.0781 Q812.3594,1474.2344 811.6563,1474.2344 Q809.1563,1474.2344 807.8281,1472.5938 Q806.5156,1470.9375 806.5156,1467.8125 Q806.5156,1464.6875 807.8281,1463.0313 Q809.1563,1461.375 811.6563,1461.375 Q812.3594,1461.375 813,1461.5313 Q813.6563,1461.6875 814.2188,1461.9844 L814.2188,1464.7031 Q813.5938,1464.125 813,1463.8594 Q812.4063,1463.5781 811.7813,1463.5781 Q810.4375,1463.5781 809.75,1464.6563 Q809.0625,1465.7188 809.0625,1467.8125 Q809.0625,1469.9063 809.75,1470.9844 Q810.4375,1472.0469 811.7813,1472.0469 Q812.4063,1472.0469 813,1471.7813 Q813.5938,1471.5 814.2188,1470.9219 L814.2188,1473.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="831.75" y="1472.1543">AllSpikingSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1484" y2="1484"/><ellipse cx="449.5" cy="1495" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="458.5" y="1498.2104">delay_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1507.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1511.0151">delay_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1520.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1523.8198">delay_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1533.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="458.5" y="1536.6245">delay_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1546.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="458.5" y="1549.4292">tau_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1559.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1562.2339">tau_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1571.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1575.0386">tau_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1584.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="458.5" y="1587.8433">tau_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1597.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="458.5" y="1600.6479">decay_ : BGFLOAT*</text><ellipse cx="449.5" cy="1610.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1613.4526">tau_ : BGFLOAT*</text><ellipse cx="449.5" cy="1623.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="458.5" y="1626.2573">delayIndex_ : int*</text><ellipse cx="449.5" cy="1635.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="458.5" y="1639.062">delayQueueLength_ : int*</text><ellipse cx="449.5" cy="1648.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1651.8667">totalDelay_ : int*</text><ellipse cx="449.5" cy="1661.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="458.5" y="1664.6714">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1671.2656" y2="1671.2656"/><ellipse cx="449.5" cy="1682.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="458.5" y="1685.4761">AllSpikingSynapses()</text><ellipse cx="449.5" cy="1695.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="1698.2808">AllSpikingSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="449.5" cy="1707.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="458.5" y="1711.0854">~AllSpikingSynapses()</text><ellipse cx="449.5" cy="1720.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="458.5" y="1723.8901">Create() : AllEdges*</text><ellipse cx="449.5" cy="1733.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="458.5" y="1736.6948">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="449.5,1741.2891,453.5,1745.2891,449.5,1749.2891,445.5,1745.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="458.5" y="1749.4995">isSpikeQueue(const BGSIZE iEdg) : bool</text><polygon fill="#FFFF44" points="449.5,1754.0938,453.5,1758.0938,449.5,1762.0938,445.5,1758.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="458.5" y="1762.3042">updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool</text><ellipse cx="449.5" cy="1771.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="458.5" y="1775.1089">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="449.5" cy="1784.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="458.5" y="1787.9136">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="449.5,1792.5078,453.5,1796.5078,449.5,1800.5078,445.5,1796.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="458.5" y="1800.7183">allocDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1810.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1813.5229">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="449.5" cy="1823.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1826.3276">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1830.9219,453.5,1834.9219,449.5,1838.9219,445.5,1834.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="458.5" y="1839.1323">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="1848.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="458.5" y="1851.937">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1861.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="458.5" y="1864.7417">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1869.3359,453.5,1873.3359,449.5,1877.3359,445.5,1873.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="458.5" y="1877.5464">copyDeviceToHost(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1887.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1890.3511">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1899.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1903.1558">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1912.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1915.9604">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1920.5547,453.5,1924.5547,449.5,1928.5547,445.5,1924.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="458.5" y="1928.7651">copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1938.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="458.5" y="1941.5698">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="449.5,1946.1641,453.5,1950.1641,449.5,1954.1641,445.5,1950.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="458.5" y="1954.3745">deleteDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1963.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="458.5" y="1967.1792">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1971.7734,453.5,1975.7734,449.5,1979.7734,445.5,1975.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="458.5" y="1979.9839">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1989.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="458.5" y="1992.7886">loadParameters() : void</text><ellipse cx="449.5" cy="2002.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="458.5" y="2005.5933">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2015.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="458.5" y="2018.3979">preSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2027.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="2031.2026">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="449.5" cy="2040.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="458.5" y="2044.0073">printParameters() : void {query}</text><ellipse cx="449.5" cy="2053.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="458.5" y="2056.812">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="449.5,2061.4063,453.5,2065.4063,449.5,2069.4063,445.5,2065.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="458.5" y="2069.6167">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2079.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="458.5" y="2082.4214">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="2092.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="458.5" y="2095.2261">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="449.5" cy="2104.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="458.5" y="2108.0308">setEdgeClassID() : void</text><ellipse cx="449.5" cy="2117.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="458.5" y="2120.8354">setupEdges() : void</text><polygon fill="#FFFF44" points="449.5,2125.4297,453.5,2129.4297,449.5,2133.4297,445.5,2129.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="458.5" y="2133.6401">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="449.5,2138.2344,453.5,2142.2344,449.5,2146.2344,445.5,2142.2344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="2146.4448">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[540eab1ed52846d003b47757435df453]
=======
class AllDSSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="444.9453" id="AllDSSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="848" x="6" y="2411.5"/><ellipse cx="380.25" cy="2427.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.2188,2433.1406 Q382.6406,2433.4375 382,2433.5781 Q381.3594,2433.7344 380.6563,2433.7344 Q378.1563,2433.7344 376.8281,2432.0938 Q375.5156,2430.4375 375.5156,2427.3125 Q375.5156,2424.1875 376.8281,2422.5313 Q378.1563,2420.875 380.6563,2420.875 Q381.3594,2420.875 382,2421.0313 Q382.6563,2421.1875 383.2188,2421.4844 L383.2188,2424.2031 Q382.5938,2423.625 382,2423.3594 Q381.4063,2423.0781 380.7813,2423.0781 Q379.4375,2423.0781 378.75,2424.1563 Q378.0625,2425.2188 378.0625,2427.3125 Q378.0625,2429.4063 378.75,2430.4844 Q379.4375,2431.5469 380.7813,2431.5469 Q381.4063,2431.5469 382,2431.2813 Q382.5938,2431 383.2188,2430.4219 L383.2188,2433.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="400.75" y="2431.6543">AllDSSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2443.5" y2="2443.5"/><ellipse cx="17" cy="2454.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2457.7104">D_ : BGFLOAT*</text><ellipse cx="17" cy="2467.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="2470.5151">F_ : BGFLOAT*</text><ellipse cx="17" cy="2480.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="2483.3198">U_ : BGFLOAT*</text><ellipse cx="17" cy="2492.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="2496.1245">r_ : BGFLOAT*</text><ellipse cx="17" cy="2505.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="2508.9292">u_ : BGFLOAT*</text><ellipse cx="17" cy="2518.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="2521.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="2528.3281" y2="2528.3281"/><ellipse cx="17" cy="2539.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="2542.5386">AllDSSynapses()</text><ellipse cx="17" cy="2552.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="26" y="2555.3433">AllDSSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="17" cy="2564.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="2568.1479">~AllDSSynapses()</text><ellipse cx="17" cy="2577.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="26" y="2580.9526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="17,2585.5469,21,2589.5469,17,2593.5469,13,2589.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="26" y="2593.7573">allocDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2603.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2606.562">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="17" cy="2616.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2619.3667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2623.9609,21,2627.9609,17,2631.9609,13,2627.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="2632.1714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="17,2636.7656,21,2640.7656,17,2644.7656,13,2640.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="26" y="2644.9761">copyDeviceToHost(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2654.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2657.7808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2667.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="2670.5854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2680.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="2683.3901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,2687.9844,21,2691.9844,17,2695.9844,13,2691.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="822" x="26" y="2696.1948">copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="2705.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="26" y="2708.9995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="17,2713.5938,21,2717.5938,17,2721.5938,13,2717.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="26" y="2721.8042">deleteDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="2731.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="26" y="2734.6089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="17" cy="2744.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2747.4136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="17" cy="2757.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="2760.2183">printParameters() : void {query}</text><ellipse cx="17" cy="2769.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="2773.0229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="17,2777.6172,21,2781.6172,17,2785.6172,13,2781.6172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="26" y="2785.8276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="17" cy="2795.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="2798.6323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="2808.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="2811.437">setEdgeClassID() : void</text><ellipse cx="17" cy="2821.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="2824.2417">setupEdges() : void</text><polygon fill="#FFFF44" points="17,2828.8359,21,2832.8359,17,2836.8359,13,2832.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="26" y="2837.0464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="17,2841.6406,21,2845.6406,17,2849.6406,13,2845.6406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="2849.8511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[09c0093d34d85daed484b6b6f446313a]
class AllDynamicSTDPSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="444.9453" id="AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="910" x="865" y="3115"/><ellipse cx="1236.75" cy="3131" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1239.7188,3136.6406 Q1239.1406,3136.9375 1238.5,3137.0781 Q1237.8594,3137.2344 1237.1563,3137.2344 Q1234.6563,3137.2344 1233.3281,3135.5938 Q1232.0156,3133.9375 1232.0156,3130.8125 Q1232.0156,3127.6875 1233.3281,3126.0313 Q1234.6563,3124.375 1237.1563,3124.375 Q1237.8594,3124.375 1238.5,3124.5313 Q1239.1563,3124.6875 1239.7188,3124.9844 L1239.7188,3127.7031 Q1239.0938,3127.125 1238.5,3126.8594 Q1237.9063,3126.5781 1237.2813,3126.5781 Q1235.9375,3126.5781 1235.25,3127.6563 Q1234.5625,3128.7188 1234.5625,3130.8125 Q1234.5625,3132.9063 1235.25,3133.9844 Q1235.9375,3135.0469 1237.2813,3135.0469 Q1237.9063,3135.0469 1238.5,3134.7813 Q1239.0938,3134.5 1239.7188,3133.9219 L1239.7188,3136.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1257.25" y="3135.1543">AllDynamicSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="3147" y2="3147"/><ellipse cx="876" cy="3158" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="3161.2104">D_ : BGFLOAT*</text><ellipse cx="876" cy="3170.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="885" y="3174.0151">F_ : BGFLOAT*</text><ellipse cx="876" cy="3183.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="3186.8198">U_ : BGFLOAT*</text><ellipse cx="876" cy="3196.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="885" y="3199.6245">r_ : BGFLOAT*</text><ellipse cx="876" cy="3209.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="885" y="3212.4292">u_ : BGFLOAT*</text><ellipse cx="876" cy="3222.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="885" y="3225.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="3231.8281" y2="3231.8281"/><ellipse cx="876" cy="3242.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="885" y="3246.0386">AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="3255.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="885" y="3258.8433">AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="876" cy="3268.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="885" y="3271.6479">~AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="3281.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="885" y="3284.4526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="876,3289.0469,880,3293.0469,876,3297.0469,872,3293.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="885" y="3297.2573">allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3306.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3310.062">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="876" cy="3319.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3322.8667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3327.4609,880,3331.4609,876,3335.4609,872,3331.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="885" y="3335.6714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="876,3340.2656,880,3344.2656,876,3348.2656,872,3344.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="885" y="3348.4761">copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3358.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3361.2808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3370.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="3374.0854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3383.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="3386.8901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,3391.4844,880,3395.4844,876,3399.4844,872,3395.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="885" y="3399.6948">copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="3409.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="885" y="3412.4995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="876,3417.0938,880,3421.0938,876,3425.0938,872,3421.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="885" y="3425.3042">deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="3434.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="885" y="3438.1089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="876" cy="3447.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3450.9136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="876" cy="3460.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="885" y="3463.7183">printParameters() : void {query}</text><ellipse cx="876" cy="3473.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="885" y="3476.5229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="876,3481.1172,880,3485.1172,876,3489.1172,872,3485.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="885" y="3489.3276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="876" cy="3498.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="885" y="3502.1323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="876" cy="3511.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="885" y="3514.937">setEdgeClassID() : void</text><ellipse cx="876" cy="3524.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="885" y="3527.7417">setupEdges() : void</text><polygon fill="#FFFF44" points="876,3532.3359,880,3536.3359,876,3540.3359,872,3536.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="885" y="3540.5464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="876,3545.1406,880,3549.1406,876,3553.1406,872,3549.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="3553.3511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[06f12ec46b87224fd0e1c514fed4a6e4]
class AllEdges--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="585.7969" id="AllEdges" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="482.5" y="557"/><ellipse cx="844.75" cy="573" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M844.8594,568.3438 L843.7031,573.4219 L846.0313,573.4219 L844.8594,568.3438 Z M843.375,566.1094 L846.3594,566.1094 L849.7188,578.5 L847.2656,578.5 L846.5,575.4375 L843.2188,575.4375 L842.4688,578.5 L840.0313,578.5 L843.375,566.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="865.25" y="577.1543">AllEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="589" y2="589"/><ellipse cx="493.5" cy="600" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="502.5" y="603.2104">W_ : BGFLOAT*</text><ellipse cx="493.5" cy="612.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="502.5" y="616.0151">summationPoint_ : BGFLOAT**</text><ellipse cx="493.5" cy="625.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="502.5" y="628.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="493.5" cy="638.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="502.5" y="641.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="493.5" cy="651.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="502.5" y="654.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="493.5" cy="664.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="502.5" y="667.2339">inUse_ : bool*</text><ellipse cx="493.5" cy="676.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="502.5" y="680.0386">type_ : edgeType*</text><ellipse cx="493.5" cy="689.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="502.5" y="692.8433">countVertices_ : int</text><ellipse cx="493.5" cy="702.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="502.5" y="705.6479">destVertexIndex_ : int*</text><ellipse cx="493.5" cy="715.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="502.5" y="718.4526">sourceVertexIndex_ : int*</text><polygon fill="none" points="493.5,723.0469,497.5,727.0469,493.5,731.0469,489.5,727.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="731.2573">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="493.5,735.8516,497.5,739.8516,493.5,743.8516,489.5,739.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="502.5" y="744.062">fileLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="750.6563" y2="750.6563"/><ellipse cx="493.5" cy="761.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="502.5" y="764.8667">AllEdges()</text><ellipse cx="493.5" cy="774.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="502.5" y="777.6714">AllEdges(const int numVertices, const int maxEdges)</text><ellipse cx="493.5" cy="787.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="502.5" y="790.4761">~AllEdges()</text><polygon fill="#FFFF44" points="493.5,795.0703,497.5,799.0703,493.5,803.0703,489.5,799.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="502.5" y="803.2808">edgeOrdinalToType(const int typeOrdinal) : edgeType</text><ellipse cx="493.5" cy="812.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="502.5" y="816.0854">addEdge(BGSIZE&amp; iEdg, edgeType type, const int srcVertex, const int destVertex, const BGFLOAT deltaT) : void</text><ellipse cx="493.5" cy="825.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="502.5" y="828.8901">advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void</text><ellipse cx="493.5" cy="838.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="502.5" y="841.6948">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><ellipse cx="493.5" cy="851.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="502.5" y="854.4995">advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="493.5" cy="864.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="502.5" y="867.3042">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="493.5" cy="876.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="502.5" y="880.1089">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="889.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="502.5" y="892.9136">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="902.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="502.5" y="905.7183">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="915.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="918.5229">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="928.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="931.3276">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="940.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="502.5" y="944.1323">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="953.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="731" x="502.5" y="956.937">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><ellipse cx="493.5" cy="966.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="502.5" y="969.7417">createEdgeIndexMap(shared_ptr&lt;EdgeIndexMap&gt; edgeIndexMap) : void</text><ellipse cx="493.5" cy="979.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="297" x="502.5" y="982.5464">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="992.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="502.5" y="995.3511">eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="1004.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="502.5" y="1008.1558">load(Archive&amp; archive) : void</text><ellipse cx="493.5" cy="1017.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="502.5" y="1020.9604">loadParameters() : void</text><ellipse cx="493.5" cy="1030.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="1033.7651">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="493.5" cy="1043.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="1046.5698">printParameters() : void {query}</text><polygon fill="#FFFF44" points="493.5,1051.1641,497.5,1055.1641,493.5,1059.1641,489.5,1055.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="502.5" y="1059.3745">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="1068.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="502.5" y="1072.1792">save(Archive&amp; archive) : void {query}</text><ellipse cx="493.5" cy="1081.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="502.5" y="1084.9839">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="493.5" cy="1094.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="502.5" y="1097.7886">setEdgeClassID() : void</text><ellipse cx="493.5" cy="1107.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="502.5" y="1110.5933">setupEdges() : void</text><polygon fill="#FFFF44" points="493.5,1115.1875,497.5,1119.1875,493.5,1123.1875,489.5,1119.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="502.5" y="1123.3979">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="493.5,1127.9922,497.5,1131.9922,493.5,1135.9922,489.5,1131.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="1136.2026">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[96f31d00847e9628d93d2720c47b9604]
class AllNeuroEdges--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="188.8516" id="AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="681" y="1203"/><ellipse cx="825.25" cy="1219" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M828.2188,1224.6406 Q827.6406,1224.9375 827,1225.0781 Q826.3594,1225.2344 825.6563,1225.2344 Q823.1563,1225.2344 821.8281,1223.5938 Q820.5156,1221.9375 820.5156,1218.8125 Q820.5156,1215.6875 821.8281,1214.0313 Q823.1563,1212.375 825.6563,1212.375 Q826.3594,1212.375 827,1212.5313 Q827.6563,1212.6875 828.2188,1212.9844 L828.2188,1215.7031 Q827.5938,1215.125 827,1214.8594 Q826.4063,1214.5781 825.7813,1214.5781 Q824.4375,1214.5781 823.75,1215.6563 Q823.0625,1216.7188 823.0625,1218.8125 Q823.0625,1220.9063 823.75,1221.9844 Q824.4375,1223.0469 825.7813,1223.0469 Q826.4063,1223.0469 827,1222.7813 Q827.5938,1222.5 828.2188,1221.9219 L828.2188,1224.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="845.75" y="1223.1543">AllNeuroEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="1235" y2="1235"/><ellipse cx="692" cy="1246" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="701" y="1249.2104">psr_ : BGFLOAT*</text><ellipse cx="692" cy="1258.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="356" x="701" y="1262.0151">SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="1268.6094" y2="1268.6094"/><ellipse cx="692" cy="1279.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="701" y="1282.8198">AllNeuroEdges()</text><ellipse cx="692" cy="1292.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="701" y="1295.6245">~AllNeuroEdges()</text><ellipse cx="692" cy="1305.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="701" y="1308.4292">edgSign(const edgeType type) : int</text><ellipse cx="692" cy="1318.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="701" y="1321.2339">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="692,1325.8281,696,1329.8281,692,1333.8281,688,1329.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="701" y="1334.0386">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="692" cy="1343.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="701" y="1346.8433">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="692" cy="1356.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="701" y="1359.6479">setupEdges() : void</text><polygon fill="#FFFF44" points="692,1364.2422,696,1368.2422,692,1372.2422,688,1368.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="701" y="1372.4526">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="692,1377.0469,696,1381.0469,692,1385.0469,688,1381.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="701" y="1385.2573">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[635988d62f36dba7a8b9baa086d12f03]
class AllSTDPSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="841.8906" id="AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="862" x="889" y="2213"/><ellipse cx="1262.75" cy="2229" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1265.7188,2234.6406 Q1265.1406,2234.9375 1264.5,2235.0781 Q1263.8594,2235.2344 1263.1563,2235.2344 Q1260.6563,2235.2344 1259.3281,2233.5938 Q1258.0156,2231.9375 1258.0156,2228.8125 Q1258.0156,2225.6875 1259.3281,2224.0313 Q1260.6563,2222.375 1263.1563,2222.375 Q1263.8594,2222.375 1264.5,2222.5313 Q1265.1563,2222.6875 1265.7188,2222.9844 L1265.7188,2225.7031 Q1265.0938,2225.125 1264.5,2224.8594 Q1263.9063,2224.5781 1263.2813,2224.5781 Q1261.9375,2224.5781 1261.25,2225.6563 Q1260.5625,2226.7188 1260.5625,2228.8125 Q1260.5625,2230.9063 1261.25,2231.9844 Q1261.9375,2233.0469 1263.2813,2233.0469 Q1263.9063,2233.0469 1264.5,2232.7813 Q1265.0938,2232.5 1265.7188,2231.9219 L1265.7188,2234.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="1283.25" y="2233.1543">AllSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="2245" y2="2245"/><ellipse cx="900" cy="2256" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="2259.2104">Aneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2268.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2272.0151">Aneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2281.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="2284.8198">Apos_E_ : BGFLOAT</text><ellipse cx="900" cy="2294.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2297.6245">Apos_I_ : BGFLOAT</text><ellipse cx="900" cy="2307.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="909" y="2310.4292">Wex_E_ : BGFLOAT</text><ellipse cx="900" cy="2320.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="909" y="2323.2339">Wex_I_ : BGFLOAT</text><ellipse cx="900" cy="2332.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="909" y="2336.0386">defaultSTDPgap_ : BGFLOAT</text><ellipse cx="900" cy="2345.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2348.8433">tauneg_E_ : BGFLOAT</text><ellipse cx="900" cy="2358.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2361.6479">tauneg_I_ : BGFLOAT</text><ellipse cx="900" cy="2371.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="2374.4526">taupos_E_ : BGFLOAT</text><ellipse cx="900" cy="2384.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="2387.2573">taupos_I_ : BGFLOAT</text><ellipse cx="900" cy="2396.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="909" y="2400.062">tauspost_E_ : BGFLOAT</text><ellipse cx="900" cy="2409.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="909" y="2412.8667">tauspost_I_ : BGFLOAT</text><ellipse cx="900" cy="2422.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2425.6714">tauspre_E_ : BGFLOAT</text><ellipse cx="900" cy="2435.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2438.4761">tauspre_I_ : BGFLOAT</text><ellipse cx="900" cy="2448.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2451.2808">Aneg_ : BGFLOAT*</text><ellipse cx="900" cy="2460.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="2464.0854">Apos_ : BGFLOAT*</text><ellipse cx="900" cy="2473.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="2476.8901">STDPgap_ : BGFLOAT*</text><ellipse cx="900" cy="2486.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="909" y="2489.6948">Wex_ : BGFLOAT*</text><ellipse cx="900" cy="2499.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2502.4995">muneg_ : BGFLOAT*</text><ellipse cx="900" cy="2512.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2515.3042">mupos_ : BGFLOAT*</text><ellipse cx="900" cy="2524.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2528.1089">tauneg_ : BGFLOAT*</text><ellipse cx="900" cy="2537.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="2540.9136">taupos_ : BGFLOAT*</text><ellipse cx="900" cy="2550.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="909" y="2553.7183">tauspost_ : BGFLOAT*</text><ellipse cx="900" cy="2563.3125" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="909" y="2566.5229">tauspre_ : BGFLOAT*</text><ellipse cx="900" cy="2576.1172" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="2579.3276">delayIndexPost_ : int*</text><ellipse cx="900" cy="2588.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2592.1323">delayQueuePostLength_ : int*</text><ellipse cx="900" cy="2601.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="909" y="2604.937">totalDelayPost_ : int*</text><ellipse cx="900" cy="2614.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="909" y="2617.7417">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="2624.3359" y2="2624.3359"/><ellipse cx="900" cy="2635.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="2638.5464">AllSTDPSynapses()</text><ellipse cx="900" cy="2648.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="909" y="2651.3511">AllSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="900" cy="2660.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="909" y="2664.1558">~AllSTDPSynapses()</text><ellipse cx="900" cy="2673.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="909" y="2676.9604">Create() : AllEdges*</text><polygon fill="#FFFF44" points="900,2681.5547,904,2685.5547,900,2689.5547,896,2685.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="909" y="2689.7651">synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT</text><ellipse cx="900" cy="2699.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="2702.5698">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="900,2707.1641,904,2711.1641,900,2715.1641,896,2711.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="909" y="2715.3745">isSpikeQueuePost(const BGSIZE iEdg) : bool</text><ellipse cx="900" cy="2724.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="909" y="2728.1792">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="900" cy="2737.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="909" y="2740.9839">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="900,2745.5781,904,2749.5781,900,2753.5781,896,2749.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="909" y="2753.7886">allocDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2763.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2766.5933">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="900" cy="2776.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2779.3979">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2783.9922,904,2787.9922,900,2791.9922,896,2787.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="909" y="2792.2026">copyDeviceToHost(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2801.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2805.0073">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2814.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="2817.812">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="900" cy="2827.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="2830.6167">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,2835.2109,904,2839.2109,900,2843.2109,896,2839.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="836" x="909" y="2843.4214">copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="2853.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="909" y="2856.2261">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="900,2860.8203,904,2864.8203,900,2868.8203,896,2864.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="909" y="2869.0308">deleteDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="2878.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="909" y="2881.8354">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="900,2886.4297,904,2890.4297,900,2894.4297,896,2890.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="909" y="2894.6401">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2904.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="909" y="2907.4448">loadParameters() : void</text><ellipse cx="900" cy="2917.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="909" y="2920.2495">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2929.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="2933.0542">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="900" cy="2942.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="909" y="2945.8589">printParameters() : void {query}</text><ellipse cx="900" cy="2955.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="909" y="2958.6636">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="900,2963.2578,904,2967.2578,900,2971.2578,896,2967.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="909" y="2971.4683">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="900" cy="2981.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="909" y="2984.2729">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="900" cy="2993.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="909" y="2997.0776">setEdgeClassID() : void</text><ellipse cx="900" cy="3006.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="909" y="3009.8823">setupEdges() : void</text><polygon fill="#FFFF44" points="900,3014.4766,904,3018.4766,900,3022.4766,896,3018.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="909" y="3022.687">setupEdges(const int numVertices, const int maxEdges) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897" y="3029.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="909" y="3035.4917">stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void</text><polygon fill="#FFFF44" points="900,3040.0859,904,3044.0859,900,3048.0859,896,3044.0859" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="3048.2964">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[cfe37ad1a50a7dcaaf80645f5fb9fa69]
class AllSpikingSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="701.0391" id="AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="873" x="438.5" y="1452"/><ellipse cx="811.25" cy="1468" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,1473.6406 Q813.6406,1473.9375 813,1474.0781 Q812.3594,1474.2344 811.6563,1474.2344 Q809.1563,1474.2344 807.8281,1472.5938 Q806.5156,1470.9375 806.5156,1467.8125 Q806.5156,1464.6875 807.8281,1463.0313 Q809.1563,1461.375 811.6563,1461.375 Q812.3594,1461.375 813,1461.5313 Q813.6563,1461.6875 814.2188,1461.9844 L814.2188,1464.7031 Q813.5938,1464.125 813,1463.8594 Q812.4063,1463.5781 811.7813,1463.5781 Q810.4375,1463.5781 809.75,1464.6563 Q809.0625,1465.7188 809.0625,1467.8125 Q809.0625,1469.9063 809.75,1470.9844 Q810.4375,1472.0469 811.7813,1472.0469 Q812.4063,1472.0469 813,1471.7813 Q813.5938,1471.5 814.2188,1470.9219 L814.2188,1473.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="831.75" y="1472.1543">AllSpikingSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1484" y2="1484"/><ellipse cx="449.5" cy="1495" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="458.5" y="1498.2104">delay_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1507.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1511.0151">delay_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1520.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="1523.8198">delay_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1533.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="458.5" y="1536.6245">delay_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1546.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="458.5" y="1549.4292">tau_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="1559.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1562.2339">tau_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="1571.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="1575.0386">tau_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="1584.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="458.5" y="1587.8433">tau_II_ : BGFLOAT</text><ellipse cx="449.5" cy="1597.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="458.5" y="1600.6479">decay_ : BGFLOAT*</text><ellipse cx="449.5" cy="1610.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1613.4526">tau_ : BGFLOAT*</text><ellipse cx="449.5" cy="1623.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="458.5" y="1626.2573">delayIndex_ : int*</text><ellipse cx="449.5" cy="1635.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="458.5" y="1639.062">delayQueueLength_ : int*</text><ellipse cx="449.5" cy="1648.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="1651.8667">totalDelay_ : int*</text><ellipse cx="449.5" cy="1661.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="458.5" y="1664.6714">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="1671.2656" y2="1671.2656"/><ellipse cx="449.5" cy="1682.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="458.5" y="1685.4761">AllSpikingSynapses()</text><ellipse cx="449.5" cy="1695.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="1698.2808">AllSpikingSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="449.5" cy="1707.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="458.5" y="1711.0854">~AllSpikingSynapses()</text><ellipse cx="449.5" cy="1720.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="458.5" y="1723.8901">Create() : AllEdges*</text><ellipse cx="449.5" cy="1733.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="458.5" y="1736.6948">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="449.5,1741.2891,453.5,1745.2891,449.5,1749.2891,445.5,1745.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="458.5" y="1749.4995">isSpikeQueue(const BGSIZE iEdg) : bool</text><polygon fill="#FFFF44" points="449.5,1754.0938,453.5,1758.0938,449.5,1762.0938,445.5,1758.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="458.5" y="1762.3042">updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool</text><ellipse cx="449.5" cy="1771.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="458.5" y="1775.1089">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="449.5" cy="1784.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="458.5" y="1787.9136">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="449.5,1792.5078,453.5,1796.5078,449.5,1800.5078,445.5,1796.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="458.5" y="1800.7183">allocDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1810.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1813.5229">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="449.5" cy="1823.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1826.3276">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1830.9219,453.5,1834.9219,449.5,1838.9219,445.5,1834.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="458.5" y="1839.1323">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="1848.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="458.5" y="1851.937">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1861.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="458.5" y="1864.7417">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1869.3359,453.5,1873.3359,449.5,1877.3359,445.5,1873.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="458.5" y="1877.5464">copyDeviceToHost(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1887.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1890.3511">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1899.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="1903.1558">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="1912.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="1915.9604">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,1920.5547,453.5,1924.5547,449.5,1928.5547,445.5,1924.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="458.5" y="1928.7651">copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="1938.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="458.5" y="1941.5698">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="449.5,1946.1641,453.5,1950.1641,449.5,1954.1641,445.5,1950.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="458.5" y="1954.3745">deleteDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="1963.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="458.5" y="1967.1792">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,1971.7734,453.5,1975.7734,449.5,1979.7734,445.5,1975.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="458.5" y="1979.9839">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="1989.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="458.5" y="1992.7886">loadParameters() : void</text><ellipse cx="449.5" cy="2002.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="458.5" y="2005.5933">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2015.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="458.5" y="2018.3979">preSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2027.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="2031.2026">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="449.5" cy="2040.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="458.5" y="2044.0073">printParameters() : void {query}</text><ellipse cx="449.5" cy="2053.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="458.5" y="2056.812">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="449.5,2061.4063,453.5,2065.4063,449.5,2069.4063,445.5,2065.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="458.5" y="2069.6167">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="2079.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="458.5" y="2082.4214">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="2092.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="458.5" y="2095.2261">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="449.5" cy="2104.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="458.5" y="2108.0308">setEdgeClassID() : void</text><ellipse cx="449.5" cy="2117.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="458.5" y="2120.8354">setupEdges() : void</text><polygon fill="#FFFF44" points="449.5,2125.4297,453.5,2129.4297,449.5,2133.4297,445.5,2129.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="458.5" y="2133.6401">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="449.5,2138.2344,453.5,2142.2344,449.5,2146.2344,445.5,2142.2344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="2146.4448">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[540eab1ed52846d003b47757435df453]
>>>>>>> 2fa779919ad5cfda56103fc1780809633aea55b4
class ConnGrowth--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="368.1172" id="ConnGrowth" style="stroke: #A80036; stroke-width: 1.5;" width="1295" x="1302.5" y="666"/><ellipse cx="1907.75" cy="682" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1910.7188,687.6406 Q1910.1406,687.9375 1909.5,688.0781 Q1908.8594,688.2344 1908.1563,688.2344 Q1905.6563,688.2344 1904.3281,686.5938 Q1903.0156,684.9375 1903.0156,681.8125 Q1903.0156,678.6875 1904.3281,677.0313 Q1905.6563,675.375 1908.1563,675.375 Q1908.8594,675.375 1909.5,675.5313 Q1910.1563,675.6875 1910.7188,675.9844 L1910.7188,678.7031 Q1910.0938,678.125 1909.5,677.8594 Q1908.9063,677.5781 1908.2813,677.5781 Q1906.9375,677.5781 1906.25,678.6563 Q1905.5625,679.7188 1905.5625,681.8125 Q1905.5625,683.9063 1906.25,684.9844 Q1906.9375,686.0469 1908.2813,686.0469 Q1908.9063,686.0469 1909.5,685.7813 Q1910.0938,685.5 1910.7188,684.9219 L1910.7188,687.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="1928.25" y="686.1543">ConnGrowth</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="2596.5" y1="698" y2="698"/><ellipse cx="1313.5" cy="709" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1322.5" y="712.2104">W_ : CompleteMatrix*</text><ellipse cx="1313.5" cy="721.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1322.5" y="725.0151">area_ : CompleteMatrix*</text><ellipse cx="1313.5" cy="734.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1322.5" y="737.8198">delta_ : CompleteMatrix*</text><ellipse cx="1313.5" cy="747.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1322.5" y="750.6245">growthParams_ : GrowthParams</text><ellipse cx="1313.5" cy="760.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1322.5" y="763.4292">deltaR_ : VectorMatrix*</text><ellipse cx="1313.5" cy="773.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1322.5" y="776.2339">outgrowth_ : VectorMatrix*</text><ellipse cx="1313.5" cy="785.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1322.5" y="789.0386">radii_ : VectorMatrix*</text><ellipse cx="1313.5" cy="798.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1322.5" y="801.8433">rates_ : VectorMatrix*</text><ellipse cx="1313.5" cy="811.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1322.5" y="814.6479">radiiSize_ : int</text><ellipse cx="1313.5" cy="824.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1322.5" y="827.4526">spikeCounts_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="2596.5" y1="834.0469" y2="834.0469"/><ellipse cx="1313.5" cy="845.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1322.5" y="848.2573">ConnGrowth()</text><ellipse cx="1313.5" cy="857.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1322.5" y="861.062">~ConnGrowth()</text><ellipse cx="1313.5" cy="870.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1322.5" y="873.8667">Create() : Connections*</text><ellipse cx="1313.5" cy="883.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1322.5" y="886.6714">updateConnections(AllVertices&amp; neurons, Layout* layout) : bool</text><ellipse cx="1313.5" cy="896.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1322.5" y="899.4761">load(Archive&amp; archive) : void</text><ellipse cx="1313.5" cy="909.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1322.5" y="912.2808">loadParameters() : void</text><ellipse cx="1313.5" cy="921.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1322.5" y="925.0854">printParameters() : void {query}</text><ellipse cx="1313.5" cy="934.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1322.5" y="937.8901">printRadii() : void {query}</text><ellipse cx="1313.5" cy="947.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1322.5" y="950.6948">save(Archive&amp; archive) : void {query}</text><ellipse cx="1313.5" cy="960.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="1322.5" y="963.4995">setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="970.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1322.5" y="976.3042">updateConns(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="982.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="1322.5" y="989.1089">updateFrontiers(const int numVertices, Layout* layout) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="995.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1322.5" y="1001.9136">updateOverlap(BGFLOAT numVertices, Layout* layout) : void</text><ellipse cx="1313.5" cy="1011.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1269" x="1322.5" y="1014.7183">updateSynapsesWeights(const int numVertices, AllVertices&amp; neurons, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1313.5" cy="1024.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1322.5" y="1027.5229">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[b671e9144a70d5380b4364952f259167]
class ConnStatic--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="316.8984" id="ConnStatic" style="stroke: #A80036; stroke-width: 1.5;" width="475" x="2632.5" y="691.5"/><ellipse cx="2831.75" cy="707.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2834.7188,713.1406 Q2834.1406,713.4375 2833.5,713.5781 Q2832.8594,713.7344 2832.1563,713.7344 Q2829.6563,713.7344 2828.3281,712.0938 Q2827.0156,710.4375 2827.0156,707.3125 Q2827.0156,704.1875 2828.3281,702.5313 Q2829.6563,700.875 2832.1563,700.875 Q2832.8594,700.875 2833.5,701.0313 Q2834.1563,701.1875 2834.7188,701.4844 L2834.7188,704.2031 Q2834.0938,703.625 2833.5,703.3594 Q2832.9063,703.0781 2832.2813,703.0781 Q2830.9375,703.0781 2830.25,704.1563 Q2829.5625,705.2188 2829.5625,707.3125 Q2829.5625,709.4063 2830.25,710.4844 Q2830.9375,711.5469 2832.2813,711.5469 Q2832.9063,711.5469 2833.5,711.2813 Q2834.0938,711 2834.7188,710.4219 L2834.7188,713.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="2852.25" y="711.6543">ConnStatic</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2633.5" x2="3106.5" y1="723.5" y2="723.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="731.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2652.5" y="737.7104">excWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="744.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="2652.5" y="750.5151">inhWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="757.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2652.5" y="763.3198">rewiringProbability_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="769.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2652.5" y="776.1245">threshConnsRadius_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="782.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2652.5" y="788.9292">WCurrentEpoch_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="795.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2652.5" y="801.7339">connsPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="808.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="2652.5" y="814.5386">radiiSize_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="821.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2652.5" y="827.3433">destVertexIndexCurrentEpoch_ : int*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2640.5" y="833.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2652.5" y="840.1479">sourceVertexIndexCurrentEpoch_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2633.5" x2="3106.5" y1="846.7422" y2="846.7422"/><ellipse cx="2643.5" cy="857.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2652.5" y="860.9526">ConnStatic()</text><ellipse cx="2643.5" cy="870.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2652.5" y="873.7573">~ConnStatic()</text><ellipse cx="2643.5" cy="883.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2652.5" y="886.562">getConnsRadiusThresh() : BGFLOAT {query}</text><ellipse cx="2643.5" cy="896.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2652.5" y="899.3667">getWCurrentEpoch() : BGFLOAT* {query}</text><ellipse cx="2643.5" cy="908.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="2652.5" y="912.1714">Create() : Connections*</text><ellipse cx="2643.5" cy="921.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="2652.5" y="924.9761">getDestVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="2643.5" cy="934.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="2652.5" y="937.7808">getSourceVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="2643.5" cy="947.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2652.5" y="950.5854">load(Archive&amp; archive) : void</text><ellipse cx="2643.5" cy="960.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2652.5" y="963.3901">loadParameters() : void</text><ellipse cx="2643.5" cy="972.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2652.5" y="976.1948">printParameters() : void {query}</text><ellipse cx="2643.5" cy="985.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2652.5" y="988.9995">save(Archive&amp; archive) : void {query}</text><ellipse cx="2643.5" cy="998.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="2652.5" y="1001.8042">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void</text><!--MD5=[24bb951fb6b9ac52df1580923e830244]
class Connections--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="252.875" id="Connections" style="stroke: #A80036; stroke-width: 1.5;" width="1293" x="1303.5" y="244"/><ellipse cx="1907.25" cy="260" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1907.3594,255.3438 L1906.2031,260.4219 L1908.5313,260.4219 L1907.3594,255.3438 Z M1905.875,253.1094 L1908.8594,253.1094 L1912.2188,265.5 L1909.7656,265.5 L1909,262.4375 L1905.7188,262.4375 L1904.9688,265.5 L1902.5313,265.5 L1905.875,253.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="1927.75" y="264.1543">Connections</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1304.5" x2="2595.5" y1="276" y2="276"/><polygon fill="none" points="1314.5,282,1318.5,286,1314.5,290,1310.5,286" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1323.5" y="290.2104">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="1314.5,294.8047,1318.5,298.8047,1314.5,302.8047,1310.5,298.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1323.5" y="303.0151">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="1314.5,307.6094,1318.5,311.6094,1314.5,315.6094,1310.5,311.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1323.5" y="315.8198">edges_ : shared_ptr&lt;AllEdges&gt;</text><polygon fill="none" points="1314.5,320.4141,1318.5,324.4141,1314.5,328.4141,1310.5,324.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1323.5" y="328.6245">synapseIndexMap_ : shared_ptr&lt;EdgeIndexMap&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1304.5" x2="2595.5" y1="335.2188" y2="335.2188"/><ellipse cx="1314.5" cy="346.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1323.5" y="349.4292">Connections()</text><ellipse cx="1314.5" cy="359.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1323.5" y="362.2339">~Connections()</text><ellipse cx="1314.5" cy="371.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1323.5" y="375.0386">updateConnections(AllVertices&amp; vertices, Layout* layout) : bool</text><ellipse cx="1314.5" cy="384.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1323.5" y="387.8433">getEdges() : shared_ptr&lt;AllEdges&gt; {query}</text><ellipse cx="1314.5" cy="397.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="1323.5" y="400.6479">getEdgeIndexMap() : shared_ptr&lt;EdgeIndexMap&gt; {query}</text><ellipse cx="1314.5" cy="410.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1323.5" y="413.4526">createEdgeIndexMap() : void</text><ellipse cx="1314.5" cy="423.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="672" x="1323.5" y="426.2573">createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices&amp; vertices, AllEdges&amp; synapses) : void</text><ellipse cx="1314.5" cy="435.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="1323.5" y="439.062">loadParameters() : void</text><ellipse cx="1314.5" cy="448.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="187" x="1323.5" y="451.8667">printParameters() : void {query}</text><ellipse cx="1314.5" cy="461.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="469" x="1323.5" y="464.6714">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void</text><ellipse cx="1314.5" cy="474.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1267" x="1323.5" y="477.4761">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1314.5" cy="487.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1323.5" y="490.2808">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[07560c205a8067cf69726ad645fec973]
class ConnectionsFactory--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="150.4375" id="ConnectionsFactory" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="1726.5" y="21"/><ellipse cx="1883.75" cy="37" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1886.7188,42.6406 Q1886.1406,42.9375 1885.5,43.0781 Q1884.8594,43.2344 1884.1563,43.2344 Q1881.6563,43.2344 1880.3281,41.5938 Q1879.0156,39.9375 1879.0156,36.8125 Q1879.0156,33.6875 1880.3281,32.0313 Q1881.6563,30.375 1884.1563,30.375 Q1884.8594,30.375 1885.5,30.5313 Q1886.1563,30.6875 1886.7188,30.9844 L1886.7188,33.7031 Q1886.0938,33.125 1885.5,32.8594 Q1884.9063,32.5781 1884.2813,32.5781 Q1882.9375,32.5781 1882.25,33.6563 Q1881.5625,34.7188 1881.5625,36.8125 Q1881.5625,38.9063 1882.25,39.9844 Q1882.9375,41.0469 1884.2813,41.0469 Q1884.9063,41.0469 1885.5,40.7813 Q1886.0938,40.5 1886.7188,39.9219 L1886.7188,42.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="1904.25" y="41.1543">ConnectionsFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1727.5" x2="2172.5" y1="53" y2="53"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1734.5" y="61"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1746.5" y="67.2104">createFunctions : ConnectionsFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1734.5" y="73.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1746.5" y="80.0151">connectionsInstance : shared_ptr&lt;Connections&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1727.5" x2="2172.5" y1="86.6094" y2="86.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1734.5" y="94.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1746.5" y="100.8198">ConnectionsFactory()</text><ellipse cx="1737.5" cy="110.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1746.5" y="113.6245">~ConnectionsFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1734.5" y="120.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1746.5" y="126.4292">invokeCreateFunction(const string&amp; className) : Connections*</text><ellipse cx="1737.5" cy="136.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="203" x="1746.5" y="139.2339">getInstance() : ConnectionsFactory*</text><ellipse cx="1737.5" cy="148.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="1746.5" y="152.0386">createConnections(const string&amp; className) : shared_ptr&lt;Connections&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1734.5" y="158.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="1746.5" y="164.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[2137c854024e09e8076c84fb007b1c3c]
class EdgesFactory--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="150.4375" id="EdgesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="658.5" y="295.5"/><ellipse cx="828.25" cy="311.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M831.2188,317.1406 Q830.6406,317.4375 830,317.5781 Q829.3594,317.7344 828.6563,317.7344 Q826.1563,317.7344 824.8281,316.0938 Q823.5156,314.4375 823.5156,311.3125 Q823.5156,308.1875 824.8281,306.5313 Q826.1563,304.875 828.6563,304.875 Q829.3594,304.875 830,305.0313 Q830.6563,305.1875 831.2188,305.4844 L831.2188,308.2031 Q830.5938,307.625 830,307.3594 Q829.4063,307.0781 828.7813,307.0781 Q827.4375,307.0781 826.75,308.1563 Q826.0625,309.2188 826.0625,311.3125 Q826.0625,313.4063 826.75,314.4844 Q827.4375,315.5469 828.7813,315.5469 Q829.4063,315.5469 830,315.2813 Q830.5938,315 831.2188,314.4219 L831.2188,317.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="848.75" y="315.6543">EdgesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="327.5" y2="327.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="335.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="678.5" y="341.7104">createFunctions : EdgesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="348.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="678.5" y="354.5151">edgesInstance_ : shared_ptr&lt;AllEdges&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="361.1094" y2="361.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="369.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="678.5" y="375.3198">EdgesFactory()</text><ellipse cx="669.5" cy="384.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="678.5" y="388.1245">~EdgesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="394.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="678.5" y="400.9292">invokeCreateFunction(const string&amp; className) : AllEdges*</text><ellipse cx="669.5" cy="410.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="678.5" y="413.7339">getInstance() : EdgesFactory*</text><ellipse cx="669.5" cy="423.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="678.5" y="426.5386">createEdges(const string&amp; className) : shared_ptr&lt;AllEdges&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="433.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="678.5" y="439.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[2c8a843ca32eecec980159abf8666d97]
class enumClassSynapses--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="112.0234" id="enumClassSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="2706.5" y="40"/><ellipse cx="2734.55" cy="56" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2738.6594,62 L2730.9406,62 L2730.9406,49.6094 L2738.6594,49.6094 L2738.6594,51.7656 L2733.3938,51.7656 L2733.3938,54.4375 L2738.1594,54.4375 L2738.1594,56.5938 L2733.3938,56.5938 L2733.3938,59.8438 L2738.6594,59.8438 L2738.6594,62 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="2751.45" y="60.1543">enumClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2707.5" x2="2894.5" y1="72" y2="72"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2712.5" y="86.2104">classAllDSSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2712.5" y="99.0151">classAllDynamicSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2712.5" y="111.8198">classAllSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2712.5" y="124.6245">classAllSpikingSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2712.5" y="137.4292">undefClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2707.5" x2="2894.5" y1="144.0234" y2="144.0234"/><!--MD5=[12eed8bfdcfc08849f14b9c8d25e6e94]
class AllDSSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="124.8281" id="AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="3142.5" y="787.5"/><ellipse cx="3157.5" cy="803.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3160.4688,809.1406 Q3159.8906,809.4375 3159.25,809.5781 Q3158.6094,809.7344 3157.9063,809.7344 Q3155.4063,809.7344 3154.0781,808.0938 Q3152.7656,806.4375 3152.7656,803.3125 Q3152.7656,800.1875 3154.0781,798.5313 Q3155.4063,796.875 3157.9063,796.875 Q3158.6094,796.875 3159.25,797.0313 Q3159.9063,797.1875 3160.4688,797.4844 L3160.4688,800.2031 Q3159.8438,799.625 3159.25,799.3594 Q3158.6563,799.0781 3158.0313,799.0781 Q3156.6875,799.0781 3156,800.1563 Q3155.3125,801.2188 3155.3125,803.3125 Q3155.3125,805.4063 3156,806.4844 Q3156.6875,807.5469 3158.0313,807.5469 Q3158.6563,807.5469 3159.25,807.2813 Q3159.8438,807 3160.4688,806.4219 L3160.4688,809.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="3171.5" y="807.6543">AllDSSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3143.5" x2="3370.5" y1="819.5" y2="819.5"/><ellipse cx="3153.5" cy="830.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3162.5" y="833.7104">D_ : BGFLOAT*</text><ellipse cx="3153.5" cy="843.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3162.5" y="846.5151">F_ : BGFLOAT*</text><ellipse cx="3153.5" cy="856.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3162.5" y="859.3198">U_ : BGFLOAT*</text><ellipse cx="3153.5" cy="868.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3162.5" y="872.1245">r_ : BGFLOAT*</text><ellipse cx="3153.5" cy="881.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3162.5" y="884.9292">u_ : BGFLOAT*</text><ellipse cx="3153.5" cy="894.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3162.5" y="897.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3143.5" x2="3370.5" y1="904.3281" y2="904.3281"/><!--MD5=[4b1be41c79a1ff75e3d6100484a928eb]
class AllDynamicSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="124.8281" id="AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="3381" y="1235"/><ellipse cx="3396" cy="1251" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3398.9688,1256.6406 Q3398.3906,1256.9375 3397.75,1257.0781 Q3397.1094,1257.2344 3396.4063,1257.2344 Q3393.9063,1257.2344 3392.5781,1255.5938 Q3391.2656,1253.9375 3391.2656,1250.8125 Q3391.2656,1247.6875 3392.5781,1246.0313 Q3393.9063,1244.375 3396.4063,1244.375 Q3397.1094,1244.375 3397.75,1244.5313 Q3398.4063,1244.6875 3398.9688,1244.9844 L3398.9688,1247.7031 Q3398.3438,1247.125 3397.75,1246.8594 Q3397.1563,1246.5781 3396.5313,1246.5781 Q3395.1875,1246.5781 3394.5,1247.6563 Q3393.8125,1248.7188 3393.8125,1250.8125 Q3393.8125,1252.9063 3394.5,1253.9844 Q3395.1875,1255.0469 3396.5313,1255.0469 Q3397.1563,1255.0469 3397.75,1254.7813 Q3398.3438,1254.5 3398.9688,1253.9219 L3398.9688,1256.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="264" x="3410" y="1255.1543">AllDynamicSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3382" x2="3676" y1="1267" y2="1267"/><ellipse cx="3392" cy="1278" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3401" y="1281.2104">D_ : BGFLOAT*</text><ellipse cx="3392" cy="1290.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3401" y="1294.0151">F_ : BGFLOAT*</text><ellipse cx="3392" cy="1303.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3401" y="1306.8198">U_ : BGFLOAT*</text><ellipse cx="3392" cy="1316.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3401" y="1319.6245">r_ : BGFLOAT*</text><ellipse cx="3392" cy="1329.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3401" y="1332.4292">u_ : BGFLOAT*</text><ellipse cx="3392" cy="1342.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3401" y="1345.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3382" x2="3676" y1="1351.8281" y2="1351.8281"/><!--MD5=[017d3a10fe7408131050c5acc75b1a9b]
class AllEdgesDeviceProperties--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="176.0469" id="AllEdgesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="3292" y="8"/><ellipse cx="3311.95" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3314.9188,29.6406 Q3314.3406,29.9375 3313.7,30.0781 Q3313.0594,30.2344 3312.3563,30.2344 Q3309.8563,30.2344 3308.5281,28.5938 Q3307.2156,26.9375 3307.2156,23.8125 Q3307.2156,20.6875 3308.5281,19.0313 Q3309.8563,17.375 3312.3563,17.375 Q3313.0594,17.375 3313.7,17.5313 Q3314.3563,17.6875 3314.9188,17.9844 L3314.9188,20.7031 Q3314.2938,20.125 3313.7,19.8594 Q3313.1063,19.5781 3312.4813,19.5781 Q3311.1375,19.5781 3310.45,20.6563 Q3309.7625,21.7188 3309.7625,23.8125 Q3309.7625,25.9063 3310.45,26.9844 Q3311.1375,28.0469 3312.4813,28.0469 Q3313.1063,28.0469 3313.7,27.7813 Q3314.2938,27.5 3314.9188,26.9219 L3314.9188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="3327.05" y="28.1543">AllEdgesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3293" x2="3493" y1="40" y2="40"/><ellipse cx="3303" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3312" y="54.2104">W_ : BGFLOAT*</text><ellipse cx="3303" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3312" y="67.0151">psr_ : BGFLOAT*</text><ellipse cx="3303" cy="76.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="3312" y="79.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="3303" cy="89.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3312" y="92.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="3303" cy="102.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3312" y="105.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="3303" cy="115.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="3312" y="118.2339">inUse_ : bool*</text><ellipse cx="3303" cy="127.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3312" y="131.0386">type_ : edgeType*</text><ellipse cx="3303" cy="140.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3312" y="143.8433">countVertices_ : int</text><ellipse cx="3303" cy="153.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3312" y="156.6479">destVertexIndex_ : int*</text><ellipse cx="3303" cy="166.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3312" y="169.4526">sourceVertexIndex_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3293" x2="3493" y1="176.0469" y2="176.0469"/><!--MD5=[a7843438017f4a8113b6a979c3ec4039]
class AllSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="240.0703" id="AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="3407" y="730"/><ellipse cx="3422" cy="746" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3424.9688,751.6406 Q3424.3906,751.9375 3423.75,752.0781 Q3423.1094,752.2344 3422.4063,752.2344 Q3419.9063,752.2344 3418.5781,750.5938 Q3417.2656,748.9375 3417.2656,745.8125 Q3417.2656,742.6875 3418.5781,741.0313 Q3419.9063,739.375 3422.4063,739.375 Q3423.1094,739.375 3423.75,739.5313 Q3424.4063,739.6875 3424.9688,739.9844 L3424.9688,742.7031 Q3424.3438,742.125 3423.75,741.8594 Q3423.1563,741.5781 3422.5313,741.5781 Q3421.1875,741.5781 3420.5,742.6563 Q3419.8125,743.7188 3419.8125,745.8125 Q3419.8125,747.9063 3420.5,748.9844 Q3421.1875,750.0469 3422.5313,750.0469 Q3423.1563,750.0469 3423.75,749.7813 Q3424.3438,749.5 3424.9688,748.9219 L3424.9688,751.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="212" x="3436" y="750.1543">AllSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3408" x2="3650" y1="762" y2="762"/><ellipse cx="3418" cy="773" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3427" y="776.2104">Aneg_ : BGFLOAT*</text><ellipse cx="3418" cy="785.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3427" y="789.0151">Apos_ : BGFLOAT*</text><ellipse cx="3418" cy="798.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3427" y="801.8198">STDPgap_ : BGFLOAT*</text><ellipse cx="3418" cy="811.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3427" y="814.6245">Wex_ : BGFLOAT*</text><ellipse cx="3418" cy="824.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3427" y="827.4292">muneg_ : BGFLOAT*</text><ellipse cx="3418" cy="837.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3427" y="840.2339">mupos_ : BGFLOAT*</text><ellipse cx="3418" cy="849.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3427" y="853.0386">tauneg_ : BGFLOAT*</text><ellipse cx="3418" cy="862.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3427" y="865.8433">taupos_ : BGFLOAT*</text><ellipse cx="3418" cy="875.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3427" y="878.6479">tauspost_ : BGFLOAT*</text><ellipse cx="3418" cy="888.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3427" y="891.4526">tauspre_ : BGFLOAT*</text><ellipse cx="3418" cy="901.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3427" y="904.2573">useFroemkeDanSTDP_ : bool*</text><ellipse cx="3418" cy="913.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3427" y="917.062">delayIndexPost_ : int*</text><ellipse cx="3418" cy="926.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3427" y="929.8667">delayQueuePostLength_ : int*</text><ellipse cx="3418" cy="939.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3427" y="942.6714">totalDelayPost_ : int*</text><ellipse cx="3418" cy="952.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3427" y="955.4761">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3408" x2="3650" y1="962.0703" y2="962.0703"/><!--MD5=[9207c363d1f0343d1c8507e42ff7f935]
class AllSpikingSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="124.8281" id="AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="3264.5" y="308"/><ellipse cx="3279.5" cy="324" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3282.4688,329.6406 Q3281.8906,329.9375 3281.25,330.0781 Q3280.6094,330.2344 3279.9063,330.2344 Q3277.4063,330.2344 3276.0781,328.5938 Q3274.7656,326.9375 3274.7656,323.8125 Q3274.7656,320.6875 3276.0781,319.0313 Q3277.4063,317.375 3279.9063,317.375 Q3280.6094,317.375 3281.25,317.5313 Q3281.9063,317.6875 3282.4688,317.9844 L3282.4688,320.7031 Q3281.8438,320.125 3281.25,319.8594 Q3280.6563,319.5781 3280.0313,319.5781 Q3278.6875,319.5781 3278,320.6563 Q3277.3125,321.7188 3277.3125,323.8125 Q3277.3125,325.9063 3278,326.9844 Q3278.6875,328.0469 3280.0313,328.0469 Q3280.6563,328.0469 3281.25,327.7813 Q3281.8438,327.5 3282.4688,326.9219 L3282.4688,329.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="3293.5" y="328.1543">AllSpikingSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3265.5" x2="3520.5" y1="340" y2="340"/><ellipse cx="3275.5" cy="351" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3284.5" y="354.2104">decay_ : BGFLOAT*</text><ellipse cx="3275.5" cy="363.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3284.5" y="367.0151">tau_ : BGFLOAT*</text><ellipse cx="3275.5" cy="376.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3284.5" y="379.8198">delayIndex_ : int*</text><ellipse cx="3275.5" cy="389.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3284.5" y="392.6245">delayQueueLength_ : int*</text><ellipse cx="3275.5" cy="402.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3284.5" y="405.4292">totalDelay_ : int*</text><ellipse cx="3275.5" cy="415.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3284.5" y="418.2339">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3265.5" x2="3520.5" y1="424.8281" y2="424.8281"/><!--MD5=[1ca6d9ba181062a9a4052698cf88a455]
class ConnGrowth::GrowthParams--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="137.6328" id="ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.5;" width="207" x="1846.5" y="1228.5"/><ellipse cx="1861.5" cy="1244.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1864.4688,1250.1406 Q1863.8906,1250.4375 1863.25,1250.5781 Q1862.6094,1250.7344 1861.9063,1250.7344 Q1859.4063,1250.7344 1858.0781,1249.0938 Q1856.7656,1247.4375 1856.7656,1244.3125 Q1856.7656,1241.1875 1858.0781,1239.5313 Q1859.4063,1237.875 1861.9063,1237.875 Q1862.6094,1237.875 1863.25,1238.0313 Q1863.9063,1238.1875 1864.4688,1238.4844 L1864.4688,1241.2031 Q1863.8438,1240.625 1863.25,1240.3594 Q1862.6563,1240.0781 1862.0313,1240.0781 Q1860.6875,1240.0781 1860,1241.1563 Q1859.3125,1242.2188 1859.3125,1244.3125 Q1859.3125,1246.4063 1860,1247.4844 Q1860.6875,1248.5469 1862.0313,1248.5469 Q1862.6563,1248.5469 1863.25,1248.2813 Q1863.8438,1248 1864.4688,1247.4219 L1864.4688,1250.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="175" x="1875.5" y="1248.6543">ConnGrowth::GrowthParams</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1847.5" x2="2052.5" y1="1260.5" y2="1260.5"/><ellipse cx="1857.5" cy="1271.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1866.5" y="1274.7104">beta : BGFLOAT</text><ellipse cx="1857.5" cy="1284.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1866.5" y="1287.5151">epsilon : BGFLOAT</text><ellipse cx="1857.5" cy="1297.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1866.5" y="1300.3198">maxRate : BGFLOAT</text><ellipse cx="1857.5" cy="1309.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1866.5" y="1313.1245">minRadius : BGFLOAT</text><ellipse cx="1857.5" cy="1322.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1866.5" y="1325.9292">rho : BGFLOAT</text><ellipse cx="1857.5" cy="1335.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1866.5" y="1338.7339">startRadius : BGFLOAT</text><ellipse cx="1857.5" cy="1348.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1866.5" y="1351.5386">targetRate : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1847.5" x2="2052.5" y1="1358.1328" y2="1358.1328"/><!--MD5=[0db2b2f8d15a42d02f46e8af06351a10]
class ConnStatic::DistDestVertex--><rect fill="#FEFECE" filter="url(#fl7fgykkhb41f)" height="86.4141" id="ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="2722" y="1254.5"/><ellipse cx="2781.25" cy="1270.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2784.2188,1276.1406 Q2783.6406,1276.4375 2783,1276.5781 Q2782.3594,1276.7344 2781.6563,1276.7344 Q2779.1563,1276.7344 2777.8281,1275.0938 Q2776.5156,1273.4375 2776.5156,1270.3125 Q2776.5156,1267.1875 2777.8281,1265.5313 Q2779.1563,1263.875 2781.6563,1263.875 Q2782.3594,1263.875 2783,1264.0313 Q2783.6563,1264.1875 2784.2188,1264.4844 L2784.2188,1267.2031 Q2783.5938,1266.625 2783,1266.3594 Q2782.4063,1266.0781 2781.7813,1266.0781 Q2780.4375,1266.0781 2779.75,1267.1563 Q2779.0625,1268.2188 2779.0625,1270.3125 Q2779.0625,1272.4063 2779.75,1273.4844 Q2780.4375,1274.5469 2781.7813,1274.5469 Q2782.4063,1274.5469 2783,1274.2813 Q2783.5938,1274 2784.2188,1273.4219 L2784.2188,1276.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="2801.75" y="1274.6543">ConnStatic::DistDestVertex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2723" x2="3017" y1="1286.5" y2="1286.5"/><ellipse cx="2733" cy="1297.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2742" y="1300.7104">dist : BGFLOAT</text><ellipse cx="2733" cy="1310.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2742" y="1313.5151">destVertex : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2723" x2="3017" y1="1320.1094" y2="1320.1094"/><ellipse cx="2733" cy="1331.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="2742" y="1334.3198">operator&lt;(DistDestVertex other) : bool {query}</text><!--MD5=[36cebae4583ca589f8881f15eca879f1]
reverse link AllEdges to AllNeuroEdges--><path d="M875,1163.2 C875,1177.11 875,1190.47 875,1202.99 " fill="none" id="AllEdges&lt;-AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,1163.18,875,1143.18,882,1163.18,868,1163.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d895029eba7154c6905399e7eb5aaaea]
reverse link AllEdgesDeviceProperties to AllSpikingSynapsesDeviceProperties--><path d="M3393,204.57 C3393,239.56 3393,277.19 3393,307.66 " fill="none" id="AllEdgesDeviceProperties&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3386,204.35,3393,184.35,3400,204.35,3386,204.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d383143b8365dcb1c00482aec0d8f87]
reverse link AllNeuroEdges to AllSpikingSynapses--><path d="M875,1412.52 C875,1424.96 875,1438.05 875,1451.59 " fill="none" id="AllNeuroEdges&lt;-AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,1412.23,875,1392.23,882,1412.23,868,1412.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5445f169f2d896f0fc54fbb0dd17c8d5]
reverse link AllSTDPSynapses to AllDynamicSTDPSynapses--><path d="M1320,3075.53 C1320,3088.84 1320,3101.95 1320,3114.8 " fill="none" id="AllSTDPSynapses&lt;-AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1313,3075.22,1320,3055.22,1327,3075.22,1313,3075.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[539a086fdc8dbc8028ce1b9c0d3cb21a]
reverse link AllSTDPSynapsesDeviceProperties to AllDynamicSTDPSynapsesDeviceProperties--><path d="M3529,990.27 C3529,1072.34 3529,1172.09 3529,1234.95 " fill="none" id="AllSTDPSynapsesDeviceProperties&lt;-AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3522,990.09,3529,970.09,3536,990.09,3522,990.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f221506eaa2e129ebcab2e085332c1be]
reverse link AllSpikingSynapses to AllDSSynapses--><path d="M677.9,2170.9 C633.94,2252.85 588.63,2337.31 548.97,2411.24 " fill="none" id="AllSpikingSynapses&lt;-AllDSSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="671.79,2167.49,687.41,2153.18,684.12,2174.11,671.79,2167.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[587b9d07fbc4fdda6579551662042140]
reverse link AllSpikingSynapses to AllSTDPSynapses--><path d="M1072.28,2171.23 C1079.66,2185 1087.09,2198.84 1094.52,2212.69 " fill="none" id="AllSpikingSynapses&lt;-AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1065.88,2174.11,1062.59,2153.18,1078.21,2167.49,1065.88,2174.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23aac5e482fb680cc0cec1f0f0dd59a6]
reverse link AllSpikingSynapsesDeviceProperties to AllDSSynapsesDeviceProperties--><path d="M3369.88,452.68 C3342.92,547.35 3298.95,701.72 3274.61,787.17 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3363.15,450.75,3375.36,433.44,3376.61,454.59,3363.15,450.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9a3e383543838c874b32001a8709207]
reverse link AllSpikingSynapsesDeviceProperties to AllSTDPSynapsesDeviceProperties--><path d="M3416.17,452.86 C3437.85,528.95 3470.47,643.5 3495.07,729.88 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3409.39,454.59,3410.64,433.44,3422.85,450.75,3409.39,454.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[10477add2578806cc5f98b33b8db5e65]
reverse link Connections to ConnGrowth--><path d="M1950,517.31 C1950,564.13 1950,616.61 1950,665.76 " fill="none" id="Connections&lt;-ConnGrowth" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1943,517.27,1950,497.27,1957,517.27,1943,517.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[513ec0388948448dab3ce17eb36460f7]
reverse link Connections to ConnStatic--><path d="M2519.49,505.52 C2552.72,520.89 2584.84,537.99 2615,557 C2670.23,591.82 2720.21,642.17 2761,691.29 " fill="none" id="Connections&lt;-ConnStatic" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2516.28,511.75,2500.92,497.16,2522.03,498.99,2516.28,511.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25007e0d6d2bc2691ed586569b6b25e2]
reverse link Connections to AllEdges--><path d="M1418.78,501.53 C1372.77,518.21 1327.57,536.67 1285,557 C1279.18,559.78 1273.36,562.64 1267.54,565.57 " fill="none" id="Connections&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1431.14,497.09,1424.1407,495.355,1419.8472,501.1486,1426.8464,502.8836,1431.14,497.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbf6625826c2ccd9ab80e1a9e4bec40a]
reverse link ConnectionsFactory to Connections--><path d="M1950,184.29 C1950,203.24 1950,223.64 1950,243.74 " fill="none" id="ConnectionsFactory&lt;-Connections" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1950,171.1,1946,177.1,1950,183.1,1954,177.1,1950,171.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[324f5d3a776c0915160172bb3bb1f68c]
reverse link EdgesFactory to AllEdges--><path d="M875,458.88 C875,487.69 875,521.5 875,556.96 " fill="none" id="EdgesFactory&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="875,445.59,871,451.59,875,457.59,879,451.59,875,445.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1c85b8207771a3600805682c49a79883]
reverse link ConnGrowth to ConnGrowth::GrowthParams--><path d="M1950,1049.49 C1950,1113.6 1950,1180.44 1950,1228.39 " fill="none" id="ConnGrowth&lt;-ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1950" cy="1042.13" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1950" x2="1950" y1="1050.13" y2="1034.13"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1942" x2="1958" y1="1042.13" y2="1042.13"/><!--MD5=[7436606c18ecdbda5eaebb84cf9adb19]
reverse link ConnStatic to ConnStatic::DistDestVertex--><path d="M2870,1023.93 C2870,1107.65 2870,1201.27 2870,1254.12 " fill="none" id="ConnStatic&lt;-ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2870" cy="1016.69" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2870" x2="2870" y1="1024.69" y2="1008.69"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2862" x2="2878" y1="1016.69" y2="1016.69"/><!--MD5=[81c6a6d45891c7e1489eee2e078967cb]
@startuml ConnectionsClassDiagram






class AllDSSynapses {
	+AllDSSynapses()
	+AllDSSynapses(const int numVertices, const int maxEdges)
	+~AllDSSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDSSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllDynamicSTDPSynapses {
	+AllDynamicSTDPSynapses()
	+AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllDynamicSTDPSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllEdges {
	+AllEdges()
	+AllEdges(const int numVertices, const int maxEdges)
	+~AllEdges()
	+W_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	#edgeOrdinalToType(const int typeOrdinal) : edgeType
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	+addEdge(edgeType type, const int srcVertex, const int destVertex, const BGFLOAT deltaT) : BGSIZE
	+{abstract} advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	+advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+{abstract} copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	+createEdgeIndexMap(shared_ptr<EdgeIndexMap> edgeIndexMap) : void
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void
	+load(Archive& archive) : void
	+loadParameters() : void
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+save(Archive& archive) : void {query}
	+{abstract} setAdvanceEdgesDeviceParams() : void
	+{abstract} setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllNeuroEdges {
	+AllNeuroEdges()
	+~AllNeuroEdges()
	+psr_ : BGFLOAT*
	+edgSign(const edgeType type) : int
	+{static} SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSTDPSynapses {
	+AllSTDPSynapses()
	+AllSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllSTDPSynapses()
	+{static} Create() : AllEdges*
	+Aneg_E_ : BGFLOAT
	+Aneg_I_ : BGFLOAT
	+Apos_E_ : BGFLOAT
	+Apos_I_ : BGFLOAT
	+Wex_E_ : BGFLOAT
	+Wex_I_ : BGFLOAT
	+defaultSTDPgap_ : BGFLOAT
	#synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT
	+tauneg_E_ : BGFLOAT
	+tauneg_I_ : BGFLOAT
	+taupos_E_ : BGFLOAT
	+taupos_I_ : BGFLOAT
	+tauspost_E_ : BGFLOAT
	+tauspost_I_ : BGFLOAT
	+tauspre_E_ : BGFLOAT
	+tauspre_I_ : BGFLOAT
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueuePost(const BGSIZE iEdg) : bool
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	-stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSpikingSynapses {
	+AllSpikingSynapses()
	+AllSpikingSynapses(const int numVertices, const int maxEdges)
	+~AllSpikingSynapses()
	+{static} Create() : AllEdges*
	+delay_EE_ : BGFLOAT
	+delay_EI_ : BGFLOAT
	+delay_IE_ : BGFLOAT
	+delay_II_ : BGFLOAT
	+tau_EE_ : BGFLOAT
	+tau_EI_ : BGFLOAT
	+tau_IE_ : BGFLOAT
	+tau_II_ : BGFLOAT
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueue(const BGSIZE iEdg) : bool
	#updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	#copyDeviceToHost(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+preSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setAdvanceEdgesDeviceParams() : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class ConnGrowth {
	+ConnGrowth()
	+~ConnGrowth()
	+W_ : CompleteMatrix*
	+area_ : CompleteMatrix*
	+delta_ : CompleteMatrix*
	+{static} Create() : Connections*
	+growthParams_ : GrowthParams
	+deltaR_ : VectorMatrix*
	+outgrowth_ : VectorMatrix*
	+radii_ : VectorMatrix*
	+rates_ : VectorMatrix*
	+updateConnections(AllVertices& neurons, Layout* layout) : bool
	+radiiSize_ : int
	+spikeCounts_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+printRadii() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void
	-updateConns(AllVertices& neurons) : void
	-updateFrontiers(const int numVertices, Layout* layout) : void
	-updateOverlap(BGFLOAT numVertices, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& neurons, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnStatic {
	+ConnStatic()
	+~ConnStatic()
	-excWeight_ : BGFLOAT
	+getConnsRadiusThresh() : BGFLOAT {query}
	-inhWeight_ : BGFLOAT
	-rewiringProbability_ : BGFLOAT
	-threshConnsRadius_ : BGFLOAT
	-WCurrentEpoch_ : BGFLOAT*
	+getWCurrentEpoch() : BGFLOAT* {query}
	+{static} Create() : Connections*
	-connsPerVertex_ : int
	-radiiSize_ : int
	-destVertexIndexCurrentEpoch_ : int*
	+getDestVertexIndexCurrentEpoch() : int* {query}
	+getSourceVertexIndexCurrentEpoch() : int* {query}
	-sourceVertexIndexCurrentEpoch_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void
}


abstract class Connections {
	+Connections()
	+~Connections()
	+updateConnections(AllVertices& vertices, Layout* layout) : bool
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	#edges_ : shared_ptr<AllEdges>
	+getEdges() : shared_ptr<AllEdges> {query}
	+getEdgeIndexMap() : shared_ptr<EdgeIndexMap> {query}
	#synapseIndexMap_ : shared_ptr<EdgeIndexMap>
	+createEdgeIndexMap() : void
	+createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices& vertices, AllEdges& synapses) : void
	+{abstract} loadParameters() : void
	+{abstract} printParameters() : void {query}
	+{abstract} setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnectionsFactory {
	-ConnectionsFactory()
	+~ConnectionsFactory()
	-invokeCreateFunction(const string& className) : Connections*
	+{static} getInstance() : ConnectionsFactory*
	-createFunctions : ConnectionsFunctionMap
	-connectionsInstance : shared_ptr<Connections>
	+createConnections(const string& className) : shared_ptr<Connections>
	-registerClass(const string& className, CreateFunction function) : void
}


class EdgesFactory {
	-EdgesFactory()
	+~EdgesFactory()
	-invokeCreateFunction(const string& className) : AllEdges*
	+{static} getInstance() : EdgesFactory*
	-createFunctions : EdgesFunctionMap
	+createEdges(const string& className) : shared_ptr<AllEdges>
	-edgesInstance_ : shared_ptr<AllEdges>
	-registerClass(const string& className, CreateFunction function) : void
}


enum enumClassSynapses {
	classAllDSSynapses
	classAllDynamicSTDPSynapses
	classAllSTDPSynapses
	classAllSpikingSynapses
	undefClassSynapses
}


class AllDSSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllDynamicSTDPSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllEdgesDeviceProperties {
	+W_ : BGFLOAT*
	+psr_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
}


class AllSTDPSynapsesDeviceProperties {
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+useFroemkeDanSTDP_ : bool*
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
}


class AllSpikingSynapsesDeviceProperties {
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
}


class ConnGrowth::GrowthParams {
	+beta : BGFLOAT
	+epsilon : BGFLOAT
	+maxRate : BGFLOAT
	+minRadius : BGFLOAT
	+rho : BGFLOAT
	+startRadius : BGFLOAT
	+targetRate : BGFLOAT
}


class ConnStatic::DistDestVertex {
	+dist : BGFLOAT
	+operator<(DistDestVertex other) : bool {query}
	+destVertex : int
}






.AllEdges <|- - .AllNeuroEdges


.AllEdgesDeviceProperties <|- - .AllSpikingSynapsesDeviceProperties


.AllNeuroEdges <|- - .AllSpikingSynapses


.AllSTDPSynapses <|- - .AllDynamicSTDPSynapses


.AllSTDPSynapsesDeviceProperties <|- - .AllDynamicSTDPSynapsesDeviceProperties


.AllSpikingSynapses <|- - .AllDSSynapses


.AllSpikingSynapses <|- - .AllSTDPSynapses


.AllSpikingSynapsesDeviceProperties <|- - .AllDSSynapsesDeviceProperties


.AllSpikingSynapsesDeviceProperties <|- - .AllSTDPSynapsesDeviceProperties


.Connections <|- - .ConnGrowth


.Connections <|- - .ConnStatic






.Connections *- - .AllEdges


.ConnectionsFactory *- - .Connections


.EdgesFactory *- - .AllEdges







.ConnGrowth +- - .ConnGrowth::GrowthParams


.ConnStatic +- - .ConnStatic::DistDestVertex




@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>