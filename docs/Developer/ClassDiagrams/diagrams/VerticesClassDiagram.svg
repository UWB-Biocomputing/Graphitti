<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2290px" preserveAspectRatio="none" style="width:2049px;height:2290px;" version="1.1" viewBox="0 0 2049 2290" width="2049px" zoomAndPan="magnify"><defs><filter height="300%" id="ftkrcfp5hfv2w" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cf80cca85261d84eda43dbc026d5d8d1]
class AllIFNeurons--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="688.2344" id="AllIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="453" y="894"/><ellipse cx="840.25" cy="910" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M843.2188,915.6406 Q842.6406,915.9375 842,916.0781 Q841.3594,916.2344 840.6563,916.2344 Q838.1563,916.2344 836.8281,914.5938 Q835.5156,912.9375 835.5156,909.8125 Q835.5156,906.6875 836.8281,905.0313 Q838.1563,903.375 840.6563,903.375 Q841.3594,903.375 842,903.5313 Q842.6563,903.6875 843.2188,903.9844 L843.2188,906.7031 Q842.5938,906.125 842,905.8594 Q841.4063,905.5781 840.7813,905.5781 Q839.4375,905.5781 838.75,906.6563 Q838.0625,907.7188 838.0625,909.8125 Q838.0625,911.9063 838.75,912.9844 Q839.4375,914.0469 840.7813,914.0469 Q841.4063,914.0469 842,913.7813 Q842.5938,913.5 843.2188,912.9219 L843.2188,915.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="860.75" y="914.1543">AllIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="454" x2="1312" y1="926" y2="926"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="934"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="473" y="940.2104">IinjectRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="946.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="473" y="953.0151">InoiseRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="959.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="473" y="965.8198">VinitRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="972.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="473" y="978.6245">VresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="985.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="473" y="991.4292">VrestingRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="998.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="473" y="1004.2339">VthreshRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1010.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="473" y="1017.0386">starterVresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1023.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="473" y="1029.8433">starterVthreshRange_ : BGFLOAT</text><ellipse cx="464" cy="1039.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="473" y="1042.6479">C1_ : BGFLOAT*</text><ellipse cx="464" cy="1052.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="473" y="1055.4526">C2_ : BGFLOAT*</text><ellipse cx="464" cy="1065.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="473" y="1068.2573">Cm_ : BGFLOAT*</text><ellipse cx="464" cy="1077.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="473" y="1081.062">I0_ : BGFLOAT*</text><ellipse cx="464" cy="1090.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="473" y="1093.8667">Iinject_ : BGFLOAT*</text><ellipse cx="464" cy="1103.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="473" y="1106.6714">Inoise_ : BGFLOAT*</text><ellipse cx="464" cy="1116.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="473" y="1119.4761">Isyn_ : BGFLOAT*</text><ellipse cx="464" cy="1129.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="473" y="1132.2808">Rm_ : BGFLOAT*</text><ellipse cx="464" cy="1141.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="473" y="1145.0854">Tau_ : BGFLOAT*</text><ellipse cx="464" cy="1154.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="473" y="1157.8901">Trefract_ : BGFLOAT*</text><ellipse cx="464" cy="1167.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="473" y="1170.6948">Vinit_ : BGFLOAT*</text><ellipse cx="464" cy="1180.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="473" y="1183.4995">Vm_ : BGFLOAT*</text><ellipse cx="464" cy="1193.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="473" y="1196.3042">Vreset_ : BGFLOAT*</text><ellipse cx="464" cy="1205.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="473" y="1209.1089">Vrest_ : BGFLOAT*</text><ellipse cx="464" cy="1218.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="473" y="1221.9136">Vthresh_ : BGFLOAT*</text><ellipse cx="464" cy="1231.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="473" y="1234.7183">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="454" x2="1312" y1="1241.3125" y2="1241.3125"/><ellipse cx="464" cy="1252.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="473" y="1255.5229">AllIFNeurons()</text><ellipse cx="464" cy="1265.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="473" y="1268.3276">~AllIFNeurons()</text><ellipse cx="464" cy="1277.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="473" y="1281.1323">toString(const int index) : string {query}</text><ellipse cx="464" cy="1290.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="473" y="1293.937">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="464,1298.5313,468,1302.5313,464,1306.5313,460,1302.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="473" y="1306.7417">allocDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1316.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1319.5464">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="464" cy="1329.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="473" y="1332.3511">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="464,1336.9453,468,1340.9453,464,1344.9453,460,1340.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="473" y="1345.1558">copyDeviceToHost(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="464,1349.75,468,1353.75,464,1357.75,460,1353.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="473" y="1357.9604">copyHostToDevice(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1367.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="473" y="1370.7651">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1380.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="473" y="1383.5698">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1393.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1396.3745">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1405.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1409.1792">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1418.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="473" y="1421.9839">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="464,1426.5781,468,1430.5781,464,1434.5781,460,1430.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="473" y="1434.7886">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="464,1439.3828,468,1443.3828,464,1447.3828,460,1443.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="473" y="1447.5933">deleteDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1457.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="473" y="1460.3979">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1469.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="473" y="1473.2026">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="464,1477.7969,468,1481.7969,464,1485.7969,460,1481.7969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="473" y="1486.0073">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="464" cy="1495.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="473" y="1498.812">loadParameters() : void</text><ellipse cx="464" cy="1508.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="473" y="1511.6167">printParameters() : void {query}</text><polygon fill="#FFFF44" points="464,1516.2109,468,1520.2109,464,1524.2109,460,1520.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="473" y="1524.4214">readNeuron(istream&amp; input, int i) : void</text><ellipse cx="464" cy="1534.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="473" y="1537.2261">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="464,1541.8203,468,1545.8203,464,1549.8203,460,1545.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="473" y="1550.0308">setNeuronDefaults(const int index) : void</text><ellipse cx="464" cy="1559.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="473" y="1562.8354">setupVertices() : void</text><polygon fill="#FFFF44" points="464,1567.4297,468,1571.4297,464,1575.4297,460,1571.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="473" y="1575.6401">writeNeuron(ostream&amp; output, int i) : void {query}</text><!--MD5=[a4e35ff6c4fc9c7a26a0ff69acb0e23b]
class AllIZHNeurons--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="637.0156" id="AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="6" y="1642"/><ellipse cx="387.75" cy="1658" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M390.7188,1663.6406 Q390.1406,1663.9375 389.5,1664.0781 Q388.8594,1664.2344 388.1563,1664.2344 Q385.6563,1664.2344 384.3281,1662.5938 Q383.0156,1660.9375 383.0156,1657.8125 Q383.0156,1654.6875 384.3281,1653.0313 Q385.6563,1651.375 388.1563,1651.375 Q388.8594,1651.375 389.5,1651.5313 Q390.1563,1651.6875 390.7188,1651.9844 L390.7188,1654.7031 Q390.0938,1654.125 389.5,1653.8594 Q388.9063,1653.5781 388.2813,1653.5781 Q386.9375,1653.5781 386.25,1654.6563 Q385.5625,1655.7188 385.5625,1657.8125 Q385.5625,1659.9063 386.25,1660.9844 Q386.9375,1662.0469 388.2813,1662.0469 Q388.9063,1662.0469 389.5,1661.7813 Q390.0938,1661.5 390.7188,1660.9219 L390.7188,1663.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="408.25" y="1662.1543">AllIZHNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="865" y1="1674" y2="1674"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1682"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="26" y="1688.2104">excAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1694.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="1701.0151">excBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1707.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="1713.8198">excCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1720.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="1726.6245">excDconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1733.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="26" y="1739.4292">inhAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1746.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="1752.2339">inhBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1758.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="1765.0386">inhCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1771.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="1777.8433">inhDconst_ : BGFLOAT</text><ellipse cx="17" cy="1787.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="26" y="1790.6479">Aconst_ : BGFLOAT*</text><ellipse cx="17" cy="1800.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="1803.4526">Bconst_ : BGFLOAT*</text><ellipse cx="17" cy="1813.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="1816.2573">C3_ : BGFLOAT*</text><ellipse cx="17" cy="1825.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="1829.062">Cconst_ : BGFLOAT*</text><ellipse cx="17" cy="1838.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="1841.8667">Dconst_ : BGFLOAT*</text><ellipse cx="17" cy="1851.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="1854.6714">u_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1861.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="1867.4761">DEFAULT_a : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1874.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="1880.2808">DEFAULT_b : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1886.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="26" y="1893.0854">DEFAULT_c : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1899.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="1905.8901">DEFAULT_d : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="865" y1="1912.4844" y2="1912.4844"/><ellipse cx="17" cy="1923.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26" y="1926.6948">AllIZHNeurons()</text><ellipse cx="17" cy="1936.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="1939.4995">~AllIZHNeurons()</text><ellipse cx="17" cy="1949.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="26" y="1952.3042">Create() : AllVertices*</text><ellipse cx="17" cy="1961.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="1965.1089">toString(const int index) : string {query}</text><polygon fill="#FFFF44" points="17,1969.7031,21,1973.7031,17,1977.7031,13,1973.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="26" y="1977.9136">advanceNeuron(const int index) : void</text><ellipse cx="17" cy="1987.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="26" y="1990.7183">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="17,1995.3125,21,1999.3125,17,2003.3125,13,1999.3125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="26" y="2003.5229">allocDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2013.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2016.3276">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="17" cy="2025.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="26" y="2029.1323">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="17,2033.7266,21,2037.7266,17,2041.7266,13,2037.7266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="26" y="2041.937">copyDeviceToHost(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="17,2046.5313,21,2050.5313,17,2054.5313,13,2050.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="26" y="2054.7417">copyHostToDevice(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2064.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="26" y="2067.5464">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2077.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="26" y="2080.3511">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2089.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2093.1558">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2102.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2105.9604">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2115.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="26" y="2118.7651">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="17,2123.3594,21,2127.3594,17,2131.3594,13,2127.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="26" y="2131.5698">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="17,2136.1641,21,2140.1641,17,2144.1641,13,2140.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="26" y="2144.3745">deleteDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2153.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="26" y="2157.1792">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2166.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26" y="2169.9839">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="17,2174.5781,21,2178.5781,17,2182.5781,13,2178.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="2182.7886">fire(const int index) : void</text><polygon fill="#FFFF44" points="17,2187.3828,21,2191.3828,17,2195.3828,13,2191.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="26" y="2195.5933">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="2205.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="2208.3979">printParameters() : void {query}</text><polygon fill="#FFFF44" points="17,2212.9922,21,2216.9922,17,2220.9922,13,2216.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="2221.2026">readNeuron(istream&amp; input, int index) : void</text><ellipse cx="17" cy="2230.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="2234.0073">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="17,2238.6016,21,2242.6016,17,2246.6016,13,2242.6016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="2246.812">setNeuronDefaults(const int index) : void</text><ellipse cx="17" cy="2256.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="2259.6167">setupVertices() : void</text><polygon fill="#FFFF44" points="17,2264.2109,21,2268.2109,17,2272.2109,13,2268.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2272.4214">writeNeuron(ostream&amp; output, int index) : void {query}</text><!--MD5=[17306769ffb707adf94de37859054409]
class AllLIFNeurons--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="137.6328" id="AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="901" y="1891.5"/><ellipse cx="1285.25" cy="1907.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1288.2188,1913.1406 Q1287.6406,1913.4375 1287,1913.5781 Q1286.3594,1913.7344 1285.6563,1913.7344 Q1283.1563,1913.7344 1281.8281,1912.0938 Q1280.5156,1910.4375 1280.5156,1907.3125 Q1280.5156,1904.1875 1281.8281,1902.5313 Q1283.1563,1900.875 1285.6563,1900.875 Q1286.3594,1900.875 1287,1901.0313 Q1287.6563,1901.1875 1288.2188,1901.4844 L1288.2188,1904.2031 Q1287.5938,1903.625 1287,1903.3594 Q1286.4063,1903.0781 1285.7813,1903.0781 Q1284.4375,1903.0781 1283.75,1904.1563 Q1283.0625,1905.2188 1283.0625,1907.3125 Q1283.0625,1909.4063 1283.75,1910.4844 Q1284.4375,1911.5469 1285.7813,1911.5469 Q1286.4063,1911.5469 1287,1911.2813 Q1287.5938,1911 1288.2188,1910.4219 L1288.2188,1913.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="1305.75" y="1911.6543">AllLIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1760" y1="1923.5" y2="1923.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1760" y1="1931.5" y2="1931.5"/><ellipse cx="912" cy="1942.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="921" y="1945.7104">AllLIFNeurons()</text><ellipse cx="912" cy="1955.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="921" y="1958.5151">~AllLIFNeurons()</text><ellipse cx="912" cy="1968.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="921" y="1971.3198">Create() : AllVertices*</text><polygon fill="#FFFF44" points="912,1975.9141,916,1979.9141,912,1983.9141,908,1979.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="921" y="1984.1245">advanceNeuron(const int index) : void</text><ellipse cx="912" cy="1993.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="921" y="1996.9292">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="912,2001.5234,916,2005.5234,912,2009.5234,908,2005.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="921" y="2009.7339">fire(const int index) : void</text><ellipse cx="912" cy="2019.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="921" y="2022.5386">printParameters() : void {query}</text><!--MD5=[00675e18512933602d55f5e0e2b1ab32]
class AllSpikingNeurons--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="278.4844" id="AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="831.5" y="556"/><ellipse cx="1047.25" cy="572" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1047.3594,567.3438 L1046.2031,572.4219 L1048.5313,572.4219 L1047.3594,567.3438 Z M1045.875,565.1094 L1048.8594,565.1094 L1052.2188,577.5 L1049.7656,577.5 L1049,574.4375 L1045.7188,574.4375 L1044.9688,577.5 L1042.5313,577.5 L1045.875,565.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="1067.75" y="576.1543">AllSpikingNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="832.5" x2="1381.5" y1="588" y2="588"/><polygon fill="none" points="842.5,594,846.5,598,842.5,602,838.5,598" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="851.5" y="602.2104">fAllowBackPropagation_ : bool</text><ellipse cx="842.5" cy="611.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="851.5" y="615.0151">vertexEvents_ : vector&lt;EventBuffer&gt;</text><ellipse cx="842.5" cy="624.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="851.5" y="627.8198">hasFired_ : vector&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="832.5" x2="1381.5" y1="634.4141" y2="634.4141"/><ellipse cx="842.5" cy="645.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="851.5" y="648.6245">AllSpikingNeurons()</text><ellipse cx="842.5" cy="658.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="851.5" y="661.4292">~AllSpikingNeurons()</text><ellipse cx="842.5" cy="671.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="851.5" y="674.2339">getSpikeHistory(int index, int offIndex) : uint64_t</text><polygon fill="#FFFF44" points="842.5,678.8281,846.5,682.8281,842.5,686.8281,838.5,682.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="851.5" y="687.0386">advanceNeuron(const int index) : void</text><ellipse cx="842.5" cy="696.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="851.5" y="699.8433">advanceVertices(AllEdges&amp; synapses, const EdgeIndexMap* edgeIndexMap) : void</text><polygon fill="#FFFF44" points="842.5,704.4375,846.5,708.4375,842.5,712.4375,838.5,708.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="851.5" y="712.6479">clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="842.5" cy="722.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="851.5" y="725.4526">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><ellipse cx="842.5" cy="735.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="851.5" y="738.2573">clearSpikeCounts() : void</text><polygon fill="#FFFF44" points="842.5,742.8516,846.5,746.8516,842.5,750.8516,838.5,746.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="851.5" y="751.062">copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="842.5,755.6563,846.5,759.6563,842.5,763.6563,838.5,759.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="851.5" y="763.8667">copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="842.5" cy="773.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="851.5" y="776.6714">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="842.5" cy="786.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="851.5" y="789.4761">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="842.5,794.0703,846.5,798.0703,842.5,802.0703,838.5,798.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="851.5" y="802.2808">fire(const int index) : void</text><ellipse cx="842.5" cy="811.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="851.5" y="815.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; synapses) : void</text><ellipse cx="842.5" cy="824.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="851.5" y="827.8901">setupVertices() : void</text><!--MD5=[34dee175ca2f1207a5c8be9520f72c2f]
class AllVertices--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="278.4844" id="AllVertices" style="stroke: #A80036; stroke-width: 1.5;" width="845" x="684.5" y="218"/><ellipse cx="1070.75" cy="234" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1070.8594,229.3438 L1069.7031,234.4219 L1072.0313,234.4219 L1070.8594,229.3438 Z M1069.375,227.1094 L1072.3594,227.1094 L1075.7188,239.5 L1073.2656,239.5 L1072.5,236.4375 L1069.2188,236.4375 L1068.4688,239.5 L1066.0313,239.5 L1069.375,227.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="1091.25" y="238.1543">AllVertices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="685.5" x2="1528.5" y1="250" y2="250"/><ellipse cx="695.5" cy="261" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="704.5" y="264.2104">summationPoints_ : BGFLOAT*</text><polygon fill="none" points="695.5,268.8047,699.5,272.8047,695.5,276.8047,691.5,272.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="704.5" y="277.0151">size_ : int</text><polygon fill="none" points="695.5,281.6094,699.5,285.6094,695.5,289.6094,691.5,285.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="704.5" y="289.8198">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="695.5,294.4141,699.5,298.4141,695.5,302.4141,691.5,298.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="704.5" y="302.6245">vertexLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="685.5" x2="1528.5" y1="309.2188" y2="309.2188"/><ellipse cx="695.5" cy="320.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="704.5" y="323.4292">AllVertices()</text><ellipse cx="695.5" cy="333.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="704.5" y="336.2339">~AllVertices()</text><ellipse cx="695.5" cy="345.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="704.5" y="349.0386">toString(const int i) : string {query}</text><ellipse cx="695.5" cy="358.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="819" x="704.5" y="361.8433">advanceVertices(AllEdges&amp; edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><ellipse cx="695.5" cy="371.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="704.5" y="374.6479">advanceVertices(AllEdges&amp; edges, const EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="695.5" cy="384.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="704.5" y="387.4526">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="695.5" cy="397.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="704.5" y="400.2573">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="695.5" cy="409.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="704.5" y="413.062">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="695.5" cy="422.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="704.5" y="425.8667">createAllVertices(Layout* layout) : void</text><ellipse cx="695.5" cy="435.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="704.5" y="438.6714">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="695.5" cy="448.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="704.5" y="451.4761">loadParameters() : void</text><ellipse cx="695.5" cy="461.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="704.5" y="464.2808">printParameters() : void {query}</text><ellipse cx="695.5" cy="473.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="704.5" y="477.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; edges) : void</text><ellipse cx="695.5" cy="486.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="704.5" y="489.8901">setupVertices() : void</text><!--MD5=[05f17831147ee39527b2431b4d22ccc3]
class EventBuffer--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="214.4609" id="EventBuffer" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="1348" y="1131"/><ellipse cx="1440.75" cy="1147" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1443.7188,1152.6406 Q1443.1406,1152.9375 1442.5,1153.0781 Q1441.8594,1153.2344 1441.1563,1153.2344 Q1438.6563,1153.2344 1437.3281,1151.5938 Q1436.0156,1149.9375 1436.0156,1146.8125 Q1436.0156,1143.6875 1437.3281,1142.0313 Q1438.6563,1140.375 1441.1563,1140.375 Q1441.8594,1140.375 1442.5,1140.5313 Q1443.1563,1140.6875 1443.7188,1140.9844 L1443.7188,1143.7031 Q1443.0938,1143.125 1442.5,1142.8594 Q1441.9063,1142.5781 1441.2813,1142.5781 Q1439.9375,1142.5781 1439.25,1143.6563 Q1438.5625,1144.7188 1438.5625,1146.8125 Q1438.5625,1148.9063 1439.25,1149.9844 Q1439.9375,1151.0469 1441.2813,1151.0469 Q1441.9063,1151.0469 1442.5,1150.7813 Q1443.0938,1150.5 1443.7188,1149.9219 L1443.7188,1152.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1461.25" y="1151.1543">EventBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1349" x2="1613" y1="1163" y2="1163"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1171"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1368" y="1177.2104">epochStart_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1183.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1368" y="1190.0151">numEventsInEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1196.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1368" y="1202.8198">queueEnd_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1209.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1368" y="1215.6245">queueFront_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1222.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1368" y="1228.4292">eventTimeSteps_ : vector&lt;uint64_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1349" x2="1613" y1="1235.0234" y2="1235.0234"/><ellipse cx="1359" cy="1246.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1368" y="1249.2339">EventBuffer(int maxEvents)</text><ellipse cx="1359" cy="1258.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1368" y="1262.0386">getNumEventsInEpoch() : int {query}</text><ellipse cx="1359" cy="1271.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="1368" y="1274.8433">getPastEvent(int offset) : uint64_t {query}</text><ellipse cx="1359" cy="1284.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1368" y="1287.6479">operator[](int i) : uint64_t {query}</text><ellipse cx="1359" cy="1297.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1368" y="1300.4526">clear() : void</text><ellipse cx="1359" cy="1310.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1368" y="1313.2573">insertEvent(uint64_t timeStep) : void</text><ellipse cx="1359" cy="1322.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1368" y="1326.062">resize(int maxEvents) : void</text><ellipse cx="1359" cy="1335.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1368" y="1338.8667">startNewEpoch() : void</text><!--MD5=[cc1c410fe2850b6da0ea695abfcea755]
class VerticesFactory--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="150.4375" id="VerticesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="890.5" y="8"/><ellipse cx="1054.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1057.2188,29.6406 Q1056.6406,29.9375 1056,30.0781 Q1055.3594,30.2344 1054.6563,30.2344 Q1052.1563,30.2344 1050.8281,28.5938 Q1049.5156,26.9375 1049.5156,23.8125 Q1049.5156,20.6875 1050.8281,19.0313 Q1052.1563,17.375 1054.6563,17.375 Q1055.3594,17.375 1056,17.5313 Q1056.6563,17.6875 1057.2188,17.9844 L1057.2188,20.7031 Q1056.5938,20.125 1056,19.8594 Q1055.4063,19.5781 1054.7813,19.5781 Q1053.4375,19.5781 1052.75,20.6563 Q1052.0625,21.7188 1052.0625,23.8125 Q1052.0625,25.9063 1052.75,26.9844 Q1053.4375,28.0469 1054.7813,28.0469 Q1055.4063,28.0469 1056,27.7813 Q1056.5938,27.5 1057.2188,26.9219 L1057.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="1074.75" y="28.1543">VerticesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="891.5" x2="1322.5" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898.5" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="910.5" y="54.2104">createFunctions : VerticesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898.5" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="910.5" y="67.0151">verticesInstance : shared_ptr&lt;AllVertices&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="891.5" x2="1322.5" y1="73.6094" y2="73.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898.5" y="81.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="910.5" y="87.8198">VerticesFactory()</text><ellipse cx="901.5" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="910.5" y="100.6245">~VerticesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898.5" y="107.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="910.5" y="113.4292">invokeCreateFunction(const string&amp; className) : AllVertices*</text><ellipse cx="901.5" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="910.5" y="126.2339">getInstance() : VerticesFactory*</text><ellipse cx="901.5" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="910.5" y="139.0386">createVertices(const string&amp; className) : shared_ptr&lt;AllVertices&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="898.5" y="145.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="910.5" y="151.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[639115fe7f0fcce40793e2aa5cc37621]
class AllIFNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="252.875" id="AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="1800" y="568.5"/><ellipse cx="1819.95" cy="584.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1822.9188,590.1406 Q1822.3406,590.4375 1821.7,590.5781 Q1821.0594,590.7344 1820.3563,590.7344 Q1817.8563,590.7344 1816.5281,589.0938 Q1815.2156,587.4375 1815.2156,584.3125 Q1815.2156,581.1875 1816.5281,579.5313 Q1817.8563,577.875 1820.3563,577.875 Q1821.0594,577.875 1821.7,578.0313 Q1822.3563,578.1875 1822.9188,578.4844 L1822.9188,581.2031 Q1822.2938,580.625 1821.7,580.3594 Q1821.1063,580.0781 1820.4813,580.0781 Q1819.1375,580.0781 1818.45,581.1563 Q1817.7625,582.2188 1817.7625,584.3125 Q1817.7625,586.4063 1818.45,587.4844 Q1819.1375,588.5469 1820.4813,588.5469 Q1821.1063,588.5469 1821.7,588.2813 Q1822.2938,588 1822.9188,587.4219 L1822.9188,590.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="183" x="1835.05" y="588.6543">AllIFNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1801" x2="2025" y1="600.5" y2="600.5"/><ellipse cx="1811" cy="611.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1820" y="614.7104">C1_ : BGFLOAT*</text><ellipse cx="1811" cy="624.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1820" y="627.5151">C2_ : BGFLOAT*</text><ellipse cx="1811" cy="637.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1820" y="640.3198">Cm_ : BGFLOAT*</text><ellipse cx="1811" cy="649.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1820" y="653.1245">I0_ : BGFLOAT*</text><ellipse cx="1811" cy="662.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1820" y="665.9292">Iinject_ : BGFLOAT*</text><ellipse cx="1811" cy="675.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1820" y="678.7339">Inoise_ : BGFLOAT*</text><ellipse cx="1811" cy="688.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1820" y="691.5386">Isyn_ : BGFLOAT*</text><ellipse cx="1811" cy="701.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1820" y="704.3433">Rm_ : BGFLOAT*</text><ellipse cx="1811" cy="713.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1820" y="717.1479">Tau_ : BGFLOAT*</text><ellipse cx="1811" cy="726.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1820" y="729.9526">Trefract_ : BGFLOAT*</text><ellipse cx="1811" cy="739.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1820" y="742.7573">Vinit_ : BGFLOAT*</text><ellipse cx="1811" cy="752.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1820" y="755.562">Vm_ : BGFLOAT*</text><ellipse cx="1811" cy="765.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1820" y="768.3667">Vreset_ : BGFLOAT*</text><ellipse cx="1811" cy="777.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1820" y="781.1714">Vrest_ : BGFLOAT*</text><ellipse cx="1811" cy="790.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1820" y="793.9761">Vthresh_ : BGFLOAT*</text><ellipse cx="1811" cy="803.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1820" y="806.7808">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1801" x2="2025" y1="813.375" y2="813.375"/><!--MD5=[bc6843495936d398fdad119946a0d209]
class AllIZHNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="124.8281" id="AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="1800" y="1175.5"/><ellipse cx="1815" cy="1191.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1817.9688,1197.1406 Q1817.3906,1197.4375 1816.75,1197.5781 Q1816.1094,1197.7344 1815.4063,1197.7344 Q1812.9063,1197.7344 1811.5781,1196.0938 Q1810.2656,1194.4375 1810.2656,1191.3125 Q1810.2656,1188.1875 1811.5781,1186.5313 Q1812.9063,1184.875 1815.4063,1184.875 Q1816.1094,1184.875 1816.75,1185.0313 Q1817.4063,1185.1875 1817.9688,1185.4844 L1817.9688,1188.2031 Q1817.3438,1187.625 1816.75,1187.3594 Q1816.1563,1187.0781 1815.5313,1187.0781 Q1814.1875,1187.0781 1813.5,1188.1563 Q1812.8125,1189.2188 1812.8125,1191.3125 Q1812.8125,1193.4063 1813.5,1194.4844 Q1814.1875,1195.5469 1815.5313,1195.5469 Q1816.1563,1195.5469 1816.75,1195.2813 Q1817.3438,1195 1817.9688,1194.4219 L1817.9688,1197.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="194" x="1829" y="1195.6543">AllIZHNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1801" x2="2025" y1="1207.5" y2="1207.5"/><ellipse cx="1811" cy="1218.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1820" y="1221.7104">Aconst_ : BGFLOAT*</text><ellipse cx="1811" cy="1231.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1820" y="1234.5151">Bconst_ : BGFLOAT*</text><ellipse cx="1811" cy="1244.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1820" y="1247.3198">C3_ : BGFLOAT*</text><ellipse cx="1811" cy="1256.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1820" y="1260.1245">Cconst_ : BGFLOAT*</text><ellipse cx="1811" cy="1269.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1820" y="1272.9292">Dconst_ : BGFLOAT*</text><ellipse cx="1811" cy="1282.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1820" y="1285.7339">u_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1801" x2="2025" y1="1292.3281" y2="1292.3281"/><!--MD5=[4ac84e1680f309079c4f5159a2743064]
class AllSpikingNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="99.2188" id="AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="1788" y="307.5"/><ellipse cx="1803" cy="323.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1805.9688,329.1406 Q1805.3906,329.4375 1804.75,329.5781 Q1804.1094,329.7344 1803.4063,329.7344 Q1800.9063,329.7344 1799.5781,328.0938 Q1798.2656,326.4375 1798.2656,323.3125 Q1798.2656,320.1875 1799.5781,318.5313 Q1800.9063,316.875 1803.4063,316.875 Q1804.1094,316.875 1804.75,317.0313 Q1805.4063,317.1875 1805.9688,317.4844 L1805.9688,320.2031 Q1805.3438,319.625 1804.75,319.3594 Q1804.1563,319.0781 1803.5313,319.0781 Q1802.1875,319.0781 1801.5,320.1563 Q1800.8125,321.2188 1800.8125,323.3125 Q1800.8125,325.4063 1801.5,326.4844 Q1802.1875,327.5469 1803.5313,327.5469 Q1804.1563,327.5469 1804.75,327.2813 Q1805.3438,327 1805.9688,326.4219 L1805.9688,329.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="1817" y="327.6543">AllSpikingNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1789" x2="2037" y1="339.5" y2="339.5"/><ellipse cx="1799" cy="350.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1808" y="353.7104">hasFired_ : bool*</text><ellipse cx="1799" cy="363.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1808" y="366.5151">spikeCountOffset_ : int*</text><ellipse cx="1799" cy="376.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1808" y="379.3198">spikeCount_ : int*</text><ellipse cx="1799" cy="388.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1808" y="392.1245">spikeHistory_ : uint64_t**</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1789" x2="2037" y1="398.7188" y2="398.7188"/><!--MD5=[537ade6dbdfe6ef3b32240037651f8aa]
class AllVerticesDeviceProperties--><rect fill="#FEFECE" filter="url(#ftkrcfp5hfv2w)" height="60.8047" id="AllVerticesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="1811.5" y="52.5"/><ellipse cx="1826.5" cy="68.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1829.4688,74.1406 Q1828.8906,74.4375 1828.25,74.5781 Q1827.6094,74.7344 1826.9063,74.7344 Q1824.4063,74.7344 1823.0781,73.0938 Q1821.7656,71.4375 1821.7656,68.3125 Q1821.7656,65.1875 1823.0781,63.5313 Q1824.4063,61.875 1826.9063,61.875 Q1827.6094,61.875 1828.25,62.0313 Q1828.9063,62.1875 1829.4688,62.4844 L1829.4688,65.2031 Q1828.8438,64.625 1828.25,64.3594 Q1827.6563,64.0781 1827.0313,64.0781 Q1825.6875,64.0781 1825,65.1563 Q1824.3125,66.2188 1824.3125,68.3125 Q1824.3125,70.4063 1825,71.4844 Q1825.6875,72.5469 1827.0313,72.5469 Q1827.6563,72.5469 1828.25,72.2813 Q1828.8438,72 1829.4688,71.4219 L1829.4688,74.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="1840.5" y="72.6543">AllVerticesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1812.5" x2="2013.5" y1="84.5" y2="84.5"/><ellipse cx="1822.5" cy="95.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1831.5" y="98.7104">summationPoints_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1812.5" x2="2013.5" y1="105.3047" y2="105.3047"/><!--MD5=[b299d6e53b6ac4d2a1701b68b9dc7554]
reverse link AllIFNeurons to AllIZHNeurons--><path d="M659.4,1599.41 C650.59,1613.6 641.79,1627.8 633.04,1641.9 " fill="none" id="AllIFNeurons&lt;-AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="653.64,1595.41,670.14,1582.11,665.54,1602.79,653.64,1595.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d41fa10eee7108bf615579dc16f66c4]
reverse link AllIFNeurons to AllLIFNeurons--><path d="M1107.03,1599.3 C1176.48,1710.99 1245.92,1822.67 1288.66,1891.4 " fill="none" id="AllIFNeurons&lt;-AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1100.96,1602.79,1096.34,1582.11,1112.84,1595.39,1100.96,1602.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17cadfdde82fbd78aaa7ab65342c0454]
reverse link AllIFNeuronsDeviceProperties to AllIZHNeuronsDeviceProperties--><path d="M1913,842.12 C1913,951.25 1913,1094.92 1913,1175.45 " fill="none" id="AllIFNeuronsDeviceProperties&lt;-AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1906,841.82,1913,821.82,1920,841.82,1906,841.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8724fdcf162cd93143062af7a28861a5]
reverse link AllSpikingNeurons to AllIFNeurons--><path d="M1042.08,852.8 C1036.55,866.14 1030.85,879.93 1025.02,893.99 " fill="none" id="AllSpikingNeurons&lt;-AllIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1035.63,850.07,1049.75,834.27,1048.57,855.42,1035.63,850.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcb689111a9832bf7543527f372e607]
reverse link AllSpikingNeuronsDeviceProperties to AllIFNeuronsDeviceProperties--><path d="M1913,426.94 C1913,467.61 1913,520.34 1913,568.18 " fill="none" id="AllSpikingNeuronsDeviceProperties&lt;-AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1906,426.86,1913,406.86,1920,426.86,1906,426.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f591e114573ccd2409f159b73ea72911]
reverse link AllVertices to AllSpikingNeurons--><path d="M1107,516.15 C1107,529.42 1107,542.77 1107,555.87 " fill="none" id="AllVertices&lt;-AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1100,516.12,1107,496.12,1114,516.12,1100,516.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fcd28df228b50666b72099cd983e7d22]
reverse link AllVerticesDeviceProperties to AllSpikingNeuronsDeviceProperties--><path d="M1913,133.66 C1913,182.98 1913,258.14 1913,307.17 " fill="none" id="AllVerticesDeviceProperties&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1906,133.63,1913,113.63,1920,133.63,1906,133.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7b242bc45f077880469141c87516fa7]
reverse link AllSpikingNeurons to EventBuffer--><path d="M1287.8,843.64 C1303.02,859.8 1317.38,876.69 1330,894 C1382.59,966.17 1422.19,1059.55 1447.62,1130.65 " fill="none" id="AllSpikingNeurons&lt;-EventBuffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1278.75,834.22,1280.021,841.3182,1287.062,842.8751,1285.791,835.7769,1278.75,834.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[420839a3a3a413a1278c95e345e5584e]
reverse link VerticesFactory to AllVertices--><path d="M1107,171.67 C1107,186.5 1107,202.21 1107,217.96 " fill="none" id="VerticesFactory&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1107,158.33,1103,164.33,1107,170.33,1111,164.33,1107,158.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[098039a809c3a9d1232e6a75dd71e35b]
@startuml VerticesClassDiagram




class AllIFNeurons {
	+AllIFNeurons()
	+~AllIFNeurons()
	-IinjectRange_ : BGFLOAT
	-InoiseRange_ : BGFLOAT
	-VinitRange_ : BGFLOAT
	-VresetRange_ : BGFLOAT
	-VrestingRange_ : BGFLOAT
	-VthreshRange_ : BGFLOAT
	-starterVresetRange_ : BGFLOAT
	-starterVthreshRange_ : BGFLOAT
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
	+toString(const int index) : string {query}
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+loadParameters() : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int i) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int i) : void {query}
}


class AllIZHNeurons {
	+AllIZHNeurons()
	+~AllIZHNeurons()
	+{static} Create() : AllVertices*
	-excAconst_ : BGFLOAT
	-excBconst_ : BGFLOAT
	-excCconst_ : BGFLOAT
	-excDconst_ : BGFLOAT
	-inhAconst_ : BGFLOAT
	-inhBconst_ : BGFLOAT
	-inhCconst_ : BGFLOAT
	-inhDconst_ : BGFLOAT
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
	-{static} DEFAULT_a : static constexpr BGFLOAT
	-{static} DEFAULT_b : static constexpr BGFLOAT
	-{static} DEFAULT_c : static constexpr BGFLOAT
	-{static} DEFAULT_d : static constexpr BGFLOAT
	+toString(const int index) : string {query}
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#fire(const int index) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int index) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int index) : void {query}
}


class AllLIFNeurons {
	+AllLIFNeurons()
	+~AllLIFNeurons()
	+{static} Create() : AllVertices*
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#fire(const int index) : void
	+printParameters() : void {query}
}


abstract class AllSpikingNeurons {
	+AllSpikingNeurons()
	+~AllSpikingNeurons()
	#fAllowBackPropagation_ : bool
	+getSpikeHistory(int index, int offIndex) : uint64_t
	+vertexEvents_ : vector<EventBuffer>
	+hasFired_ : vector<bool>
	#{abstract} advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, const EdgeIndexMap* edgeIndexMap) : void
	#clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} clearNeuronSpikeCounts(void* allVerticesDevice) : void
	+clearSpikeCounts() : void
	#copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	#copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	#fire(const int index) : void
	+setAdvanceVerticesDeviceParams(AllEdges& synapses) : void
	+setupVertices() : void
}


abstract class AllVertices {
	+AllVertices()
	+~AllVertices()
	+summationPoints_ : BGFLOAT*
	#size_ : int
	#fileLogger_ : log4cplus::Logger
	#vertexLogger_ : log4cplus::Logger
	+{abstract} toString(const int i) : string {query}
	+{abstract} advanceVertices(AllEdges& edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	+{abstract} advanceVertices(AllEdges& edges, const EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+{abstract} copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronHostToDevice(void* allVerticesDevice) : void
	+{abstract} createAllVertices(Layout* layout) : void
	+{abstract} deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+{abstract} setAdvanceVerticesDeviceParams(AllEdges& edges) : void
	+setupVertices() : void
}


class EventBuffer {
	+EventBuffer(int maxEvents)
	-epochStart_ : int
	+getNumEventsInEpoch() : int {query}
	-numEventsInEpoch_ : int
	-queueEnd_ : int
	-queueFront_ : int
	+getPastEvent(int offset) : uint64_t {query}
	+operator[](int i) : uint64_t {query}
	-eventTimeSteps_ : vector<uint64_t>
	+clear() : void
	+insertEvent(uint64_t timeStep) : void
	+resize(int maxEvents) : void
	+startNewEpoch() : void
}


class VerticesFactory {
	-VerticesFactory()
	+~VerticesFactory()
	-invokeCreateFunction(const string& className) : AllVertices*
	+{static} getInstance() : VerticesFactory*
	-createFunctions : VerticesFunctionMap
	+createVertices(const string& className) : shared_ptr<AllVertices>
	-verticesInstance : shared_ptr<AllVertices>
	-registerClass(const string& className, CreateFunction function) : void
}


class AllIFNeuronsDeviceProperties {
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
}


class AllIZHNeuronsDeviceProperties {
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
}


class AllSpikingNeuronsDeviceProperties {
	+hasFired_ : bool*
	+spikeCountOffset_ : int*
	+spikeCount_ : int*
	+spikeHistory_ : uint64_t**
}


class AllVerticesDeviceProperties {
	+summationPoints_ : BGFLOAT*
}






.AllIFNeurons <|- - .AllIZHNeurons


.AllIFNeurons <|- - .AllLIFNeurons


.AllIFNeuronsDeviceProperties <|- - .AllIZHNeuronsDeviceProperties


.AllSpikingNeurons <|- - .AllIFNeurons


.AllSpikingNeuronsDeviceProperties <|- - .AllIFNeuronsDeviceProperties


.AllVertices <|- - .AllSpikingNeurons


.AllVerticesDeviceProperties <|- - .AllSpikingNeuronsDeviceProperties






.AllSpikingNeurons *- - .EventBuffer


.VerticesFactory *- - .AllVertices









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>