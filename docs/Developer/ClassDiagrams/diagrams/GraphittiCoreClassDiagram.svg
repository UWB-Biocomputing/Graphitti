<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1927px" preserveAspectRatio="none" style="width:1247px;height:1927px;" version="1.1" viewBox="0 0 1247 1927" width="1247px" zoomAndPan="magnify"><defs><filter height="300%" id="fid9ec088dzsh" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d85fbbe7efff0e713ca3ebcdefdae521]
class CPUModel--><rect fill="#FEFECE" filter="url(#fid9ec088dzsh)" height="137.6328" id="CPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="6" y="1427.5"/><ellipse cx="59.75" cy="1443.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M62.7188,1449.1406 Q62.1406,1449.4375 61.5,1449.5781 Q60.8594,1449.7344 60.1563,1449.7344 Q57.6563,1449.7344 56.3281,1448.0938 Q55.0156,1446.4375 55.0156,1443.3125 Q55.0156,1440.1875 56.3281,1438.5313 Q57.6563,1436.875 60.1563,1436.875 Q60.8594,1436.875 61.5,1437.0313 Q62.1563,1437.1875 62.7188,1437.4844 L62.7188,1440.2031 Q62.0938,1439.625 61.5,1439.3594 Q60.9063,1439.0781 60.2813,1439.0781 Q58.9375,1439.0781 58.25,1440.1563 Q57.5625,1441.2188 57.5625,1443.3125 Q57.5625,1445.4063 58.25,1446.4844 Q58.9375,1447.5469 60.2813,1447.5469 Q60.9063,1447.5469 61.5,1447.2813 Q62.0938,1447 62.7188,1446.4219 L62.7188,1449.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="80.25" y="1447.6543">CPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="183" y1="1459.5" y2="1459.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="183" y1="1467.5" y2="1467.5"/><ellipse cx="17" cy="1478.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="26" y="1481.7104">CPUModel()</text><ellipse cx="17" cy="1491.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="26" y="1494.5151">~CPUModel()</text><ellipse cx="17" cy="1504.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="26" y="1507.3198">advance() : void</text><ellipse cx="17" cy="1516.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="26" y="1520.1245">copyCPUtoGPU() : void</text><ellipse cx="17" cy="1529.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="26" y="1532.9292">copyGPUtoCPU() : void</text><ellipse cx="17" cy="1542.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="26" y="1545.7339">finish() : void</text><ellipse cx="17" cy="1555.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="26" y="1558.5386">updateConnections() : void</text><!--MD5=[124ec3daa98f7d6a805c6f5a48dde9c7]
class GPUModel--><rect fill="#FEFECE" filter="url(#fid9ec088dzsh)" height="342.5078" id="GPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="1017" x="219.5" y="1325"/><ellipse cx="692.25" cy="1341" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M695.2188,1346.6406 Q694.6406,1346.9375 694,1347.0781 Q693.3594,1347.2344 692.6563,1347.2344 Q690.1563,1347.2344 688.8281,1345.5938 Q687.5156,1343.9375 687.5156,1340.8125 Q687.5156,1337.6875 688.8281,1336.0313 Q690.1563,1334.375 692.6563,1334.375 Q693.3594,1334.375 694,1334.5313 Q694.6563,1334.6875 695.2188,1334.9844 L695.2188,1337.7031 Q694.5938,1337.125 694,1336.8594 Q693.4063,1336.5781 692.7813,1336.5781 Q691.4375,1336.5781 690.75,1337.6563 Q690.0625,1338.7188 690.0625,1340.8125 Q690.0625,1342.9063 690.75,1343.9844 Q691.4375,1345.0469 692.7813,1345.0469 Q693.4063,1345.0469 694,1344.7813 Q694.5938,1344.5 695.2188,1343.9219 L695.2188,1346.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="712.75" y="1345.1543">GPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="220.5" x2="1235.5" y1="1357" y2="1357"/><polygon fill="none" points="230.5,1363,234.5,1367,230.5,1371,226.5,1367" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="239.5" y="1371.2104">allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*</text><polygon fill="none" points="230.5,1375.8047,234.5,1379.8047,230.5,1383.8047,226.5,1379.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="239.5" y="1384.0151">allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*</text><polygon fill="none" points="230.5,1388.6094,234.5,1392.6094,230.5,1396.6094,226.5,1392.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="239.5" y="1396.8198">synapseIndexMapDevice_ : EdgeIndexMap*</text><polygon fill="none" points="230.5,1401.4141,234.5,1405.4141,230.5,1409.4141,226.5,1405.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="239.5" y="1409.6245">randNoise_d : float*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="220.5" x2="1235.5" y1="1416.2188" y2="1416.2188"/><ellipse cx="230.5" cy="1427.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="239.5" y="1430.4292">GPUModel()</text><ellipse cx="230.5" cy="1440.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="239.5" y="1443.2339">~GPUModel()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1449.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="991" x="239.5" y="1456.0386">addEdge(AllEdges&amp; synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate&amp; source, Coordinate&amp; dest, BGFLOAT* sumPoint, BGFLOAT deltaT) : void</text><ellipse cx="230.5" cy="1465.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="239.5" y="1468.8433">advance() : void</text><polygon fill="#FFFF44" points="230.5,1473.4375,234.5,1477.4375,230.5,1481.4375,226.5,1477.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="239.5" y="1481.6479">allocDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="367.5" y="1481.6479">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="517.5" y="1481.6479">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1488.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="239.5" y="1494.4526">allocSynapseImap(int count) : void</text><polygon fill="#FFFF44" points="230.5,1499.0469,234.5,1503.0469,230.5,1507.0469,226.5,1503.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="239.5" y="1507.2573">calcSummationMap() : void</text><ellipse cx="230.5" cy="1516.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="239.5" y="1520.062">copyCPUtoGPU() : void</text><ellipse cx="230.5" cy="1529.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="239.5" y="1532.8667">copyGPUtoCPU() : void</text><ellipse cx="230.5" cy="1542.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="239.5" y="1545.6714">copySynapseIndexMapHostToDevice(EdgeIndexMap&amp; synapseIndexMapHost, int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1552.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="980" x="239.5" y="1558.4761">createEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT* sp, BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="230.5,1563.0703,234.5,1567.0703,230.5,1571.0703,226.5,1567.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="239.5" y="1571.2808">deleteDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="376.5" y="1571.2808">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="526.5" y="1571.2808">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1577.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="239.5" y="1584.0854">deleteSynapseImap() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1590.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="239.5" y="1596.8901">eraseEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex) : void</text><ellipse cx="230.5" cy="1606.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="239.5" y="1609.6948">finish() : void</text><ellipse cx="230.5" cy="1619.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="239.5" y="1622.4995">printGPUSynapsesPropsModel() : void {query}</text><ellipse cx="230.5" cy="1632.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="239.5" y="1635.3042">setupSim() : void</text><ellipse cx="230.5" cy="1644.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="239.5" y="1648.1089">updateConnections() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="227.5" y="1654.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="239.5" y="1660.9136">updateHistory() : void</text><!--MD5=[7e20e022571e30ec1001cf6eabd7f3e2]
class Model--><rect fill="#FEFECE" filter="url(#fid9ec088dzsh)" height="291.2891" id="Model" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="244" y="974"/><ellipse cx="388.25" cy="990" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M388.3594,985.3438 L387.2031,990.4219 L389.5313,990.4219 L388.3594,985.3438 Z M386.875,983.1094 L389.8594,983.1094 L393.2188,995.5 L390.7656,995.5 L390,992.4375 L386.7188,992.4375 L385.9688,995.5 L383.5313,995.5 L386.875,983.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="408.75" y="994.1543">Model</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="245" x2="577" y1="1006" y2="1006"/><polygon fill="none" points="255,1012,259,1016,255,1020,251,1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="264" y="1020.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="255,1024.8047,259,1028.8047,255,1032.8047,251,1028.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="264" y="1033.0151">connections_ : shared_ptr&lt;Connections&gt;</text><polygon fill="none" points="255,1037.6094,259,1041.6094,255,1045.6094,251,1041.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="264" y="1045.8198">recorder_ : shared_ptr&lt;IRecorder&gt;</text><polygon fill="none" points="255,1050.4141,259,1054.4141,255,1058.4141,251,1054.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="264" y="1058.6245">layout_ : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="245" x2="577" y1="1065.2188" y2="1065.2188"/><ellipse cx="255" cy="1076.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="264" y="1079.4292">Model()</text><ellipse cx="255" cy="1089.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="264" y="1092.2339">~Model()</text><ellipse cx="255" cy="1101.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="264" y="1105.0386">getConnections() : shared_ptr&lt;Connections&gt; {query}</text><ellipse cx="255" cy="1114.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="264" y="1117.8433">getRecorder() : shared_ptr&lt;IRecorder&gt; {query}</text><ellipse cx="255" cy="1127.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="264" y="1130.6479">getLayout() : shared_ptr&lt;Layout&gt; {query}</text><ellipse cx="255" cy="1140.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="264" y="1143.4526">advance() : void</text><polygon fill="#FFFF44" points="255,1148.0469,259,1152.0469,255,1156.0469,251,1152.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="264" y="1156.2573">copyCPUtoGPU() : void</text><polygon fill="#FFFF44" points="255,1160.8516,259,1164.8516,255,1168.8516,251,1164.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="264" y="1169.062">copyGPUtoCPU() : void</text><polygon fill="#FFFF44" points="255,1173.6563,259,1177.6563,255,1181.6563,251,1177.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="264" y="1181.8667">createAllVertices() : void</text><ellipse cx="255" cy="1191.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="264" y="1194.6714">finish() : void</text><polygon fill="#FFFF44" points="255,1199.2656,259,1203.2656,255,1207.2656,251,1203.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="264" y="1207.4761">logSimStep() : void {query}</text><ellipse cx="255" cy="1217.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="264" y="1220.2808">saveResults() : void</text><ellipse cx="255" cy="1229.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="264" y="1233.0854">setupSim() : void</text><ellipse cx="255" cy="1242.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="264" y="1245.8901">updateConnections() : void</text><ellipse cx="255" cy="1255.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="264" y="1258.6948">updateHistory() : void</text><!--MD5=[e78d3bd29d68b8fbdb4aae8710e3db25]
class Simulator--><rect fill="#FEFECE" filter="url(#fid9ec088dzsh)" height="905.9141" id="Simulator" style="stroke: #A80036; stroke-width: 1.5;" width="354" x="234" y="8"/><ellipse cx="377.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.2188,29.6406 Q379.6406,29.9375 379,30.0781 Q378.3594,30.2344 377.6563,30.2344 Q375.1563,30.2344 373.8281,28.5938 Q372.5156,26.9375 372.5156,23.8125 Q372.5156,20.6875 373.8281,19.0313 Q375.1563,17.375 377.6563,17.375 Q378.3594,17.375 379,17.5313 Q379.6563,17.6875 380.2188,17.9844 L380.2188,20.7031 Q379.5938,20.125 379,19.8594 Q378.4063,19.5781 377.7813,19.5781 Q376.4375,19.5781 375.75,20.6563 Q375.0625,21.7188 375.0625,23.8125 Q375.0625,25.9063 375.75,26.9844 Q376.4375,28.0469 377.7813,28.0469 Q378.4063,28.0469 379,27.7813 Q379.5938,27.5 380.2188,26.9219 L380.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="397.75" y="28.1543">Simulator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="235" x2="587" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="254" y="54.2104">deltaT_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="254" y="67.0151">epochDuration_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="73.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="254" y="79.8198">maxRate_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="86.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="254" y="92.6245">pSummationMap_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="99.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="254" y="105.4292">short_timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="112.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="254" y="118.2339">timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="124.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="254" y="131.0386">rgEndogenouslyActiveNeuronMap_ : bool*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="137.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="254" y="143.8433">currentEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="150.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="254" y="156.6479">height_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="163.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="254" y="169.4526">maxEdgesPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="176.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="254" y="182.2573">maxFiringRate_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="188.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="254" y="195.062">numEpochs_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="201.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="254" y="207.8667">totalNeurons_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="214.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="254" y="220.6714">width_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="227.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="254" y="233.4761">consoleLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="240.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="254" y="246.2808">edgeLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="252.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="254" y="259.0854">fileLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="265.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="254" y="271.8901">initRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="278.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="254" y="284.6948">noiseRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="291.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="254" y="297.4995">model_ : shared_ptr&lt;Model&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="304.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="254" y="310.3042">configFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="316.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="254" y="323.1089">deserializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="329.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="254" y="335.9136">serializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="342.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="254" y="348.7183">stimulusFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="355.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="254" y="361.5229">rgNeuronTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="235" x2="587" y1="368.1172" y2="368.1172"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="376.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="254" y="382.3276">Simulator()</text><ellipse cx="245" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="254" y="395.1323">~Simulator()</text><ellipse cx="245" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="254" y="407.937">getDeltaT() : BGFLOAT {query}</text><ellipse cx="245" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="254" y="420.7417">getEpochDuration() : BGFLOAT {query}</text><ellipse cx="245" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="254" y="433.5464">getMaxRate() : BGFLOAT {query}</text><ellipse cx="245" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="254" y="446.3511">getPSummationMap() : BGFLOAT* {query}</text><ellipse cx="245" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="254" y="459.1558">getInstance() : Simulator&amp;</text><ellipse cx="245" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="254" y="471.9604">getShort_timer() : Timer</text><ellipse cx="245" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="254" y="484.7651">getTimer() : Timer</text><ellipse cx="245" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="254" y="497.5698">instantiateSimulatorObjects() : bool</text><ellipse cx="245" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="254" y="510.3745">getRgEndogenouslyActiveNeuronMap() : bool* {query}</text><ellipse cx="245" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="254" y="523.1792">getCurrentStep() : int {query}</text><ellipse cx="245" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="254" y="535.9839">getHeight() : int {query}</text><ellipse cx="245" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="254" y="548.7886">getMaxEdgesPerVertex() : int {query}</text><ellipse cx="245" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="254" y="561.5933">getMaxFiringRate() : int {query}</text><ellipse cx="245" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="254" y="574.3979">getNumEpochs() : int {query}</text><ellipse cx="245" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="254" y="587.2026">getTotalVertices() : int {query}</text><ellipse cx="245" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="254" y="600.0073">getWidth() : int {query}</text><ellipse cx="245" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="254" y="612.812">getInitRngSeed() : long {query}</text><ellipse cx="245" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="254" y="625.6167">getNoiseRngSeed() : long {query}</text><ellipse cx="245" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="254" y="638.4214">getModel() : shared_ptr&lt;Model&gt; {query}</text><ellipse cx="245" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="254" y="651.2261">getConfigFileName() : string {query}</text><ellipse cx="245" cy="660.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="254" y="664.0308">getDeserializationFileName() : string {query}</text><ellipse cx="245" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="254" y="676.8354">getSerializationFileName() : string {query}</text><ellipse cx="245" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="254" y="689.6401">getStimulusFileName() : string {query}</text><ellipse cx="245" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="254" y="702.4448">getRgNeuronTypeMap() : vertexType* {query}</text><ellipse cx="245" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="254" y="715.2495">advanceEpoch(const int&amp; currentEpoch) : void {query}</text><ellipse cx="245" cy="724.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="254" y="728.0542">copyCPUSynapseToGPU() : void</text><ellipse cx="245" cy="737.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="254" y="740.8589">copyGPUSynapseToCPU() : void</text><ellipse cx="245" cy="750.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="254" y="753.6636">finish() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242" y="760.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="254" y="766.4683">freeResources() : void</text><ellipse cx="245" cy="776.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="254" y="779.2729">loadParameters() : void</text><ellipse cx="245" cy="788.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="254" y="792.0776">printParameters() : void {query}</text><ellipse cx="245" cy="801.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="254" y="804.8823">reset() : void</text><ellipse cx="245" cy="814.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="254" y="817.687">saveResults() : void {query}</text><ellipse cx="245" cy="827.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="254" y="830.4917">setConfigFileName(const string&amp; fileName) : void</text><ellipse cx="245" cy="840.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="254" y="843.2964">setDeserializationFileName(const string&amp; fileName) : void</text><ellipse cx="245" cy="852.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="254" y="856.1011">setPSummationMap(BGFLOAT* summationMap) : void</text><ellipse cx="245" cy="865.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="254" y="868.9058">setSerializationFileName(const string&amp; fileName) : void</text><ellipse cx="245" cy="878.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="254" y="881.7104">setStimulusFileName(const string&amp; fileName) : void</text><ellipse cx="245" cy="891.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="254" y="894.5151">setup() : void</text><ellipse cx="245" cy="904.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="254" y="907.3198">simulate() : void</text><!--MD5=[0b11278c58281ab7c80e79be642856f2]
class EdgeIndexMap--><rect fill="#FEFECE" filter="url(#fid9ec088dzsh)" height="188.8516" id="EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="584" y="1728"/><ellipse cx="678.25" cy="1744" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M681.2188,1749.6406 Q680.6406,1749.9375 680,1750.0781 Q679.3594,1750.2344 678.6563,1750.2344 Q676.1563,1750.2344 674.8281,1748.5938 Q673.5156,1746.9375 673.5156,1743.8125 Q673.5156,1740.6875 674.8281,1739.0313 Q676.1563,1737.375 678.6563,1737.375 Q679.3594,1737.375 680,1737.5313 Q680.6563,1737.6875 681.2188,1737.9844 L681.2188,1740.7031 Q680.5938,1740.125 680,1739.8594 Q679.4063,1739.5781 678.7813,1739.5781 Q677.4375,1739.5781 676.75,1740.6563 Q676.0625,1741.7188 676.0625,1743.8125 Q676.0625,1745.9063 676.75,1746.9844 Q677.4375,1748.0469 678.7813,1748.0469 Q679.4063,1748.0469 680,1747.7813 Q680.5938,1747.5 681.2188,1746.9219 L681.2188,1749.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="698.75" y="1748.1543">EdgeIndexMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="585" x2="871" y1="1760" y2="1760"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="592" y="1768"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="604" y="1774.2104">numOfEdges_ : BGSIZE</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="592" y="1780.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="604" y="1787.0151">numOfVertices_ : BGSIZE</text><ellipse cx="595" cy="1796.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="604" y="1799.8198">incomingEdgeBegin_ : BGSIZE*</text><ellipse cx="595" cy="1809.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="604" y="1812.6245">incomingEdgeCount_ : BGSIZE*</text><ellipse cx="595" cy="1822.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="604" y="1825.4292">incomingEdgeIndexMap_ : BGSIZE*</text><ellipse cx="595" cy="1835.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="604" y="1838.2339">outgoingEdgeBegin_ : BGSIZE*</text><ellipse cx="595" cy="1847.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="604" y="1851.0386">outgoingEdgeCount_ : BGSIZE*</text><ellipse cx="595" cy="1860.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="604" y="1863.8433">outgoingEdgeIndexMap_ : BGSIZE*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="585" x2="871" y1="1870.4375" y2="1870.4375"/><ellipse cx="595" cy="1881.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="604" y="1884.6479">EdgeIndexMap()</text><ellipse cx="595" cy="1894.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="604" y="1897.4526">EdgeIndexMap(int vertexCount, int edgeCount)</text><ellipse cx="595" cy="1907.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="604" y="1910.2573">~EdgeIndexMap()</text><!--MD5=[a2a96d1a257e41c08a9c3a3f8aadcb29]
reverse link Model to CPUModel--><path d="M241.05,1279.85 C227.39,1294.72 214.18,1309.88 202,1325 C176.34,1356.84 151.79,1395.18 132.69,1427.44 " fill="none" id="Model&lt;-CPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="236.06,1274.94,254.83,1265.11,246.29,1284.5,236.06,1274.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8342ff62b1882cdc2aad46dd54e535e9]
reverse link Model to GPUModel--><path d="M546.56,1280.87 C558.84,1295.38 571.3,1310.12 583.64,1324.73 " fill="none" id="Model&lt;-GPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="540.9,1285.01,533.33,1265.22,551.59,1275.97,540.9,1285.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aeaf2a6bd64d076c9a29b9ba5666847]
reverse link GPUModel to EdgeIndexMap--><path d="M728,1681.51 C728,1697.47 728,1713.15 728,1727.9 " fill="none" id="GPUModel&lt;-EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="728,1668.04,724,1674.04,728,1680.04,732,1674.04,728,1668.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[263ae887246c1ce3b32534d14bc96b50]
reverse link Simulator to Model--><path d="M411,927.41 C411,943.52 411,959.1 411,973.94 " fill="none" id="Simulator&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="411,914.38,407,920.38,411,926.38,415,920.38,411,914.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[113dde7e5b28eb2a1f1f7d4ee36b459c]
@startuml GraphittiCoreClassDiagram






class CPUModel {
	+CPUModel()
	+~CPUModel()
	+advance() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+finish() : void
	+updateConnections() : void
}


class GPUModel {
	+GPUModel()
	+~GPUModel()
	#allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*
	#allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*
	#synapseIndexMapDevice_ : EdgeIndexMap*
	#randNoise_d : float*
	-addEdge(AllEdges& synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate& source, Coordinate& dest, BGFLOAT* sumPoint, BGFLOAT deltaT) : void
	+advance() : void
	#allocDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-allocSynapseImap(int count) : void
	#calcSummationMap() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+copySynapseIndexMapHostToDevice(EdgeIndexMap& synapseIndexMapHost, int numVertices) : void
	-createEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT* sp, BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-deleteSynapseImap() : void
	-eraseEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex) : void
	+finish() : void
	+printGPUSynapsesPropsModel() : void {query}
	+setupSim() : void
	+updateConnections() : void
	-updateHistory() : void
}


abstract class Model {
	+Model()
	+~Model()
	#fileLogger_ : log4cplus::Logger
	#connections_ : shared_ptr<Connections>
	+getConnections() : shared_ptr<Connections> {query}
	+getRecorder() : shared_ptr<IRecorder> {query}
	#recorder_ : shared_ptr<IRecorder>
	+getLayout() : shared_ptr<Layout> {query}
	#layout_ : shared_ptr<Layout>
	+{abstract} advance() : void
	#{abstract} copyCPUtoGPU() : void
	#{abstract} copyGPUtoCPU() : void
	#createAllVertices() : void
	+{abstract} finish() : void
	#logSimStep() : void {query}
	+saveResults() : void
	+setupSim() : void
	+{abstract} updateConnections() : void
	+updateHistory() : void
}


class Simulator {
	-Simulator()
	+~Simulator()
	-deltaT_ : BGFLOAT
	-epochDuration_ : BGFLOAT
	+getDeltaT() : BGFLOAT {query}
	+getEpochDuration() : BGFLOAT {query}
	+getMaxRate() : BGFLOAT {query}
	-maxRate_ : BGFLOAT
	+getPSummationMap() : BGFLOAT* {query}
	-pSummationMap_ : BGFLOAT*
	+{static} getInstance() : Simulator&
	+getShort_timer() : Timer
	+getTimer() : Timer
	-short_timer : Timer
	-timer : Timer
	+instantiateSimulatorObjects() : bool
	+getRgEndogenouslyActiveNeuronMap() : bool* {query}
	-rgEndogenouslyActiveNeuronMap_ : bool*
	-currentEpoch_ : int
	+getCurrentStep() : int {query}
	+getHeight() : int {query}
	+getMaxEdgesPerVertex() : int {query}
	+getMaxFiringRate() : int {query}
	+getNumEpochs() : int {query}
	+getTotalVertices() : int {query}
	+getWidth() : int {query}
	-height_ : int
	-maxEdgesPerVertex_ : int
	-maxFiringRate_ : int
	-numEpochs_ : int
	-totalNeurons_ : int
	-width_ : int
	-consoleLogger_ : log4cplus::Logger
	-edgeLogger_ : log4cplus::Logger
	-fileLogger_ : log4cplus::Logger
	+getInitRngSeed() : long {query}
	+getNoiseRngSeed() : long {query}
	-initRngSeed_ : long
	-noiseRngSeed_ : long
	+getModel() : shared_ptr<Model> {query}
	-model_ : shared_ptr<Model>
	-configFileName_ : string
	-deserializationFileName_ : string
	+getConfigFileName() : string {query}
	+getDeserializationFileName() : string {query}
	+getSerializationFileName() : string {query}
	+getStimulusFileName() : string {query}
	-serializationFileName_ : string
	-stimulusFileName_ : string
	+getRgNeuronTypeMap() : vertexType* {query}
	-rgNeuronTypeMap_ : vertexType*
	+advanceEpoch(const int& currentEpoch) : void {query}
	+copyCPUSynapseToGPU() : void
	+copyGPUSynapseToCPU() : void
	+finish() : void
	-freeResources() : void
	+loadParameters() : void
	+printParameters() : void {query}
	+reset() : void
	+saveResults() : void {query}
	+setConfigFileName(const string& fileName) : void
	+setDeserializationFileName(const string& fileName) : void
	+setPSummationMap(BGFLOAT* summationMap) : void
	+setSerializationFileName(const string& fileName) : void
	+setStimulusFileName(const string& fileName) : void
	+setup() : void
	+simulate() : void
}


class EdgeIndexMap {
	+EdgeIndexMap()
	+EdgeIndexMap(int vertexCount, int edgeCount)
	+~EdgeIndexMap()
	-numOfEdges_ : BGSIZE
	-numOfVertices_ : BGSIZE
	+incomingEdgeBegin_ : BGSIZE*
	+incomingEdgeCount_ : BGSIZE*
	+incomingEdgeIndexMap_ : BGSIZE*
	+outgoingEdgeBegin_ : BGSIZE*
	+outgoingEdgeCount_ : BGSIZE*
	+outgoingEdgeIndexMap_ : BGSIZE*
}






.Model <|- - .CPUModel


.Model <|- - .GPUModel






.GPUModel o- - .EdgeIndexMap

.Simulator *- - .Model






@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>