<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4881px" preserveAspectRatio="none" style="width:7768px;height:4881px;" version="1.1" viewBox="0 0 7768 4881" width="7768px" zoomAndPan="magnify"><defs><filter height="300%" id="fmsewbgwf2zv0" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[935a686a552498c9fe3db149d943753f]
class AllDSSynapses--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="444.9453" id="AllDSSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="848" x="6" y="3722.5"/><ellipse cx="380.25" cy="3738.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.2188,3744.1406 Q382.6406,3744.4375 382,3744.5781 Q381.3594,3744.7344 380.6563,3744.7344 Q378.1563,3744.7344 376.8281,3743.0938 Q375.5156,3741.4375 375.5156,3738.3125 Q375.5156,3735.1875 376.8281,3733.5313 Q378.1563,3731.875 380.6563,3731.875 Q381.3594,3731.875 382,3732.0313 Q382.6563,3732.1875 383.2188,3732.4844 L383.2188,3735.2031 Q382.5938,3734.625 382,3734.3594 Q381.4063,3734.0781 380.7813,3734.0781 Q379.4375,3734.0781 378.75,3735.1563 Q378.0625,3736.2188 378.0625,3738.3125 Q378.0625,3740.4063 378.75,3741.4844 Q379.4375,3742.5469 380.7813,3742.5469 Q381.4063,3742.5469 382,3742.2813 Q382.5938,3742 383.2188,3741.4219 L383.2188,3744.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="400.75" y="3742.6543">AllDSSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="3754.5" y2="3754.5"/><ellipse cx="17" cy="3765.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="3768.7104">D_ : BGFLOAT*</text><ellipse cx="17" cy="3778.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="3781.5151">F_ : BGFLOAT*</text><ellipse cx="17" cy="3791.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="3794.3198">U_ : BGFLOAT*</text><ellipse cx="17" cy="3803.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="3807.1245">r_ : BGFLOAT*</text><ellipse cx="17" cy="3816.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="3819.9292">u_ : BGFLOAT*</text><ellipse cx="17" cy="3829.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="3832.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="3839.3281" y2="3839.3281"/><ellipse cx="17" cy="3850.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="3853.5386">AllDSSynapses()</text><ellipse cx="17" cy="3863.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="26" y="3866.3433">AllDSSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="17" cy="3875.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="3879.1479">~AllDSSynapses()</text><ellipse cx="17" cy="3888.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="26" y="3891.9526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="17,3896.5469,21,3900.5469,17,3904.5469,13,3900.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="26" y="3904.7573">allocDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="3914.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3917.562">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="17" cy="3927.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="3930.3667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,3934.9609,21,3938.9609,17,3942.9609,13,3938.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="3943.1714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="17,3947.7656,21,3951.7656,17,3955.7656,13,3951.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="26" y="3955.9761">copyDeviceToHost(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="3965.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3968.7808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="17" cy="3978.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3981.5854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="17" cy="3991.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="3994.3901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,3998.9844,21,4002.9844,17,4006.9844,13,4002.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="822" x="26" y="4007.1948">copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="4016.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="26" y="4019.9995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="17,4024.5938,21,4028.5938,17,4032.5938,13,4028.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="26" y="4032.8042">deleteDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="4042.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="26" y="4045.6089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="17" cy="4055.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="4058.4136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="17" cy="4068.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="4071.2183">printParameters() : void {query}</text><ellipse cx="17" cy="4080.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="4084.0229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="17,4088.6172,21,4092.6172,17,4096.6172,13,4092.6172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="26" y="4096.8276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="17" cy="4106.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="4109.6323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="4119.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="4122.437">setEdgeClassID() : void</text><ellipse cx="17" cy="4132.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="4135.2417">setupEdges() : void</text><polygon fill="#FFFF44" points="17,4139.8359,21,4143.8359,17,4147.8359,13,4143.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="26" y="4148.0464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="17,4152.6406,21,4156.6406,17,4160.6406,13,4156.6406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="4160.8511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[09c0093d34d85daed484b6b6f446313a]
class AllDynamicSTDPSynapses--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="444.9453" id="AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="910" x="865" y="4426"/><ellipse cx="1236.75" cy="4442" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1239.7188,4447.6406 Q1239.1406,4447.9375 1238.5,4448.0781 Q1237.8594,4448.2344 1237.1563,4448.2344 Q1234.6563,4448.2344 1233.3281,4446.5938 Q1232.0156,4444.9375 1232.0156,4441.8125 Q1232.0156,4438.6875 1233.3281,4437.0313 Q1234.6563,4435.375 1237.1563,4435.375 Q1237.8594,4435.375 1238.5,4435.5313 Q1239.1563,4435.6875 1239.7188,4435.9844 L1239.7188,4438.7031 Q1239.0938,4438.125 1238.5,4437.8594 Q1237.9063,4437.5781 1237.2813,4437.5781 Q1235.9375,4437.5781 1235.25,4438.6563 Q1234.5625,4439.7188 1234.5625,4441.8125 Q1234.5625,4443.9063 1235.25,4444.9844 Q1235.9375,4446.0469 1237.2813,4446.0469 Q1237.9063,4446.0469 1238.5,4445.7813 Q1239.0938,4445.5 1239.7188,4444.9219 L1239.7188,4447.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1257.25" y="4446.1543">AllDynamicSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="4458" y2="4458"/><ellipse cx="876" cy="4469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="4472.2104">D_ : BGFLOAT*</text><ellipse cx="876" cy="4481.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="885" y="4485.0151">F_ : BGFLOAT*</text><ellipse cx="876" cy="4494.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="4497.8198">U_ : BGFLOAT*</text><ellipse cx="876" cy="4507.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="885" y="4510.6245">r_ : BGFLOAT*</text><ellipse cx="876" cy="4520.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="885" y="4523.4292">u_ : BGFLOAT*</text><ellipse cx="876" cy="4533.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="885" y="4536.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="4542.8281" y2="4542.8281"/><ellipse cx="876" cy="4553.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="885" y="4557.0386">AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="4566.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="885" y="4569.8433">AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="876" cy="4579.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="885" y="4582.6479">~AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="4592.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="885" y="4595.4526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="876,4600.0469,880,4604.0469,876,4608.0469,872,4604.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="885" y="4608.2573">allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="4617.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4621.062">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="876" cy="4630.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="4633.8667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,4638.4609,880,4642.4609,876,4646.4609,872,4642.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="885" y="4646.6714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="876,4651.2656,880,4655.2656,876,4659.2656,872,4655.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="885" y="4659.4761">copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="4669.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4672.2808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4681.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4685.0854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4694.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="4697.8901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,4702.4844,880,4706.4844,876,4710.4844,872,4706.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="885" y="4710.6948">copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="4720.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="885" y="4723.4995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="876,4728.0938,880,4732.0938,876,4736.0938,872,4732.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="885" y="4736.3042">deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="4745.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="885" y="4749.1089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4758.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="4761.9136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="876" cy="4771.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="885" y="4774.7183">printParameters() : void {query}</text><ellipse cx="876" cy="4784.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="885" y="4787.5229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="876,4792.1172,880,4796.1172,876,4800.1172,872,4796.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="885" y="4800.3276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="876" cy="4809.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="885" y="4813.1323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="876" cy="4822.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="885" y="4825.937">setEdgeClassID() : void</text><ellipse cx="876" cy="4835.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="885" y="4838.7417">setupEdges() : void</text><polygon fill="#FFFF44" points="876,4843.3359,880,4847.3359,876,4851.3359,872,4847.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="885" y="4851.5464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="876,4856.1406,880,4860.1406,876,4864.1406,872,4860.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="4864.3511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[06f12ec46b87224fd0e1c514fed4a6e4]
class AllEdges--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="585.7969" id="AllEdges" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="482.5" y="1779"/><ellipse cx="844.75" cy="1795" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M844.8594,1790.3438 L843.7031,1795.4219 L846.0313,1795.4219 L844.8594,1790.3438 Z M843.375,1788.1094 L846.3594,1788.1094 L849.7188,1800.5 L847.2656,1800.5 L846.5,1797.4375 L843.2188,1797.4375 L842.4688,1800.5 L840.0313,1800.5 L843.375,1788.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="865.25" y="1799.1543">AllEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="1811" y2="1811"/><ellipse cx="493.5" cy="1822" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="502.5" y="1825.2104">W_ : BGFLOAT*</text><ellipse cx="493.5" cy="1834.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="502.5" y="1838.0151">summationPoint_ : BGFLOAT**</text><ellipse cx="493.5" cy="1847.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="502.5" y="1850.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="493.5" cy="1860.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="502.5" y="1863.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="493.5" cy="1873.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="502.5" y="1876.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="493.5" cy="1886.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="502.5" y="1889.2339">inUse_ : bool*</text><ellipse cx="493.5" cy="1898.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="502.5" y="1902.0386">type_ : edgeType*</text><ellipse cx="493.5" cy="1911.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="502.5" y="1914.8433">countVertices_ : int</text><ellipse cx="493.5" cy="1924.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="502.5" y="1927.6479">destVertexIndex_ : int*</text><ellipse cx="493.5" cy="1937.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="502.5" y="1940.4526">sourceVertexIndex_ : int*</text><polygon fill="none" points="493.5,1945.0469,497.5,1949.0469,493.5,1953.0469,489.5,1949.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="1953.2573">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="493.5,1957.8516,497.5,1961.8516,493.5,1965.8516,489.5,1961.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="502.5" y="1966.062">fileLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="1972.6563" y2="1972.6563"/><ellipse cx="493.5" cy="1983.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="502.5" y="1986.8667">AllEdges()</text><ellipse cx="493.5" cy="1996.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="502.5" y="1999.6714">AllEdges(const int numVertices, const int maxEdges)</text><ellipse cx="493.5" cy="2009.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="502.5" y="2012.4761">~AllEdges()</text><polygon fill="#FFFF44" points="493.5,2017.0703,497.5,2021.0703,493.5,2025.0703,489.5,2021.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="502.5" y="2025.2808">edgeOrdinalToType(const int typeOrdinal) : edgeType</text><ellipse cx="493.5" cy="2034.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="502.5" y="2038.0854">addEdge(BGSIZE&amp; iEdg, edgeType type, const int srcVertex, const int destVertex, const BGFLOAT deltaT) : void</text><ellipse cx="493.5" cy="2047.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="502.5" y="2050.8901">advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void</text><ellipse cx="493.5" cy="2060.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="502.5" y="2063.6948">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><ellipse cx="493.5" cy="2073.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="502.5" y="2076.4995">advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="493.5" cy="2086.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="502.5" y="2089.3042">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="493.5" cy="2098.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="502.5" y="2102.1089">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="2111.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="502.5" y="2114.9136">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2124.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="502.5" y="2127.7183">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2137.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="2140.5229">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2150.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="2153.3276">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2162.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="502.5" y="2166.1323">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="2175.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="731" x="502.5" y="2178.937">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><ellipse cx="493.5" cy="2188.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="502.5" y="2191.7417">createEdgeIndexMap(shared_ptr&lt;EdgeIndexMap&gt; edgeIndexMap) : void</text><ellipse cx="493.5" cy="2201.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="297" x="502.5" y="2204.5464">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2214.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="502.5" y="2217.3511">eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="2226.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="502.5" y="2230.1558">load(Archive&amp; archive) : void</text><ellipse cx="493.5" cy="2239.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="502.5" y="2242.9604">loadParameters() : void</text><ellipse cx="493.5" cy="2252.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="2255.7651">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="493.5" cy="2265.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="2268.5698">printParameters() : void {query}</text><polygon fill="#FFFF44" points="493.5,2273.1641,497.5,2277.1641,493.5,2281.1641,489.5,2277.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="502.5" y="2281.3745">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="2290.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="502.5" y="2294.1792">save(Archive&amp; archive) : void {query}</text><ellipse cx="493.5" cy="2303.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="502.5" y="2306.9839">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="493.5" cy="2316.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="502.5" y="2319.7886">setEdgeClassID() : void</text><ellipse cx="493.5" cy="2329.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="502.5" y="2332.5933">setupEdges() : void</text><polygon fill="#FFFF44" points="493.5,2337.1875,497.5,2341.1875,493.5,2345.1875,489.5,2341.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="502.5" y="2345.3979">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="493.5,2349.9922,497.5,2353.9922,493.5,2357.9922,489.5,2353.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="2358.2026">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[cf80cca85261d84eda43dbc026d5d8d1]
class AllIFNeurons--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="688.2344" id="AllIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="5667" y="2769.5"/><ellipse cx="6054.25" cy="2785.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6057.2188,2791.1406 Q6056.6406,2791.4375 6056,2791.5781 Q6055.3594,2791.7344 6054.6563,2791.7344 Q6052.1563,2791.7344 6050.8281,2790.0938 Q6049.5156,2788.4375 6049.5156,2785.3125 Q6049.5156,2782.1875 6050.8281,2780.5313 Q6052.1563,2778.875 6054.6563,2778.875 Q6055.3594,2778.875 6056,2779.0313 Q6056.6563,2779.1875 6057.2188,2779.4844 L6057.2188,2782.2031 Q6056.5938,2781.625 6056,2781.3594 Q6055.4063,2781.0781 6054.7813,2781.0781 Q6053.4375,2781.0781 6052.75,2782.1563 Q6052.0625,2783.2188 6052.0625,2785.3125 Q6052.0625,2787.4063 6052.75,2788.4844 Q6053.4375,2789.5469 6054.7813,2789.5469 Q6055.4063,2789.5469 6056,2789.2813 Q6056.5938,2789 6057.2188,2788.4219 L6057.2188,2791.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="6074.75" y="2789.6543">AllIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5668" x2="6526" y1="2801.5" y2="2801.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2809.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5687" y="2815.7104">IinjectRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2822.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5687" y="2828.5151">InoiseRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2835.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5687" y="2841.3198">VinitRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2847.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5687" y="2854.1245">VresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2860.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5687" y="2866.9292">VrestingRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2873.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5687" y="2879.7339">VthreshRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2886.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5687" y="2892.5386">starterVresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5675" y="2899.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="5687" y="2905.3433">starterVthreshRange_ : BGFLOAT</text><ellipse cx="5678" cy="2914.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5687" y="2918.1479">C1_ : BGFLOAT*</text><ellipse cx="5678" cy="2927.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5687" y="2930.9526">C2_ : BGFLOAT*</text><ellipse cx="5678" cy="2940.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5687" y="2943.7573">Cm_ : BGFLOAT*</text><ellipse cx="5678" cy="2953.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5687" y="2956.562">I0_ : BGFLOAT*</text><ellipse cx="5678" cy="2966.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5687" y="2969.3667">Iinject_ : BGFLOAT*</text><ellipse cx="5678" cy="2978.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5687" y="2982.1714">Inoise_ : BGFLOAT*</text><ellipse cx="5678" cy="2991.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5687" y="2994.9761">Isyn_ : BGFLOAT*</text><ellipse cx="5678" cy="3004.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5687" y="3007.7808">Rm_ : BGFLOAT*</text><ellipse cx="5678" cy="3017.375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5687" y="3020.5854">Tau_ : BGFLOAT*</text><ellipse cx="5678" cy="3030.1797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5687" y="3033.3901">Trefract_ : BGFLOAT*</text><ellipse cx="5678" cy="3042.9844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5687" y="3046.1948">Vinit_ : BGFLOAT*</text><ellipse cx="5678" cy="3055.7891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5687" y="3058.9995">Vm_ : BGFLOAT*</text><ellipse cx="5678" cy="3068.5938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="5687" y="3071.8042">Vreset_ : BGFLOAT*</text><ellipse cx="5678" cy="3081.3984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5687" y="3084.6089">Vrest_ : BGFLOAT*</text><ellipse cx="5678" cy="3094.2031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5687" y="3097.4136">Vthresh_ : BGFLOAT*</text><ellipse cx="5678" cy="3107.0078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5687" y="3110.2183">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5668" x2="6526" y1="3116.8125" y2="3116.8125"/><ellipse cx="5678" cy="3127.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5687" y="3131.0229">AllIFNeurons()</text><ellipse cx="5678" cy="3140.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5687" y="3143.8276">~AllIFNeurons()</text><ellipse cx="5678" cy="3153.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5687" y="3156.6323">toString(const int index) : string {query}</text><ellipse cx="5678" cy="3166.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="5687" y="3169.437">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="5678,3174.0313,5682,3178.0313,5678,3182.0313,5674,3178.0313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="5687" y="3182.2417">allocDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5678" cy="3191.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5687" y="3195.0464">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="5678" cy="3204.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5687" y="3207.8511">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5678,3212.4453,5682,3216.4453,5678,3220.4453,5674,3216.4453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="5687" y="3220.6558">copyDeviceToHost(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5678,3225.25,5682,3229.25,5678,3233.25,5674,3229.25" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="5687" y="3233.4604">copyHostToDevice(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5678" cy="3243.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5687" y="3246.2651">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="5678" cy="3255.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5687" y="3259.0698">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="5678" cy="3268.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5687" y="3271.8745">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="5678" cy="3281.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5687" y="3284.6792">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="5678" cy="3294.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5687" y="3297.4839">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="5678,3302.0781,5682,3306.0781,5678,3310.0781,5674,3306.0781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5687" y="3310.2886">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="5678,3314.8828,5682,3318.8828,5678,3322.8828,5674,3318.8828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="5687" y="3323.0933">deleteDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5678" cy="3332.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="5687" y="3335.8979">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="5678" cy="3345.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5687" y="3348.7026">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="5678,3353.2969,5682,3357.2969,5678,3361.2969,5674,3357.2969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5687" y="3361.5073">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="5678" cy="3371.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5687" y="3374.312">loadParameters() : void</text><ellipse cx="5678" cy="3383.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5687" y="3387.1167">printParameters() : void {query}</text><polygon fill="#FFFF44" points="5678,3391.7109,5682,3395.7109,5678,3399.7109,5674,3395.7109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5687" y="3399.9214">readNeuron(istream&amp; input, int i) : void</text><ellipse cx="5678" cy="3409.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5687" y="3412.7261">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="5678,3417.3203,5682,3421.3203,5678,3425.3203,5674,3421.3203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5687" y="3425.5308">setNeuronDefaults(const int index) : void</text><ellipse cx="5678" cy="3435.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5687" y="3438.3354">setupVertices() : void</text><polygon fill="#FFFF44" points="5678,3442.9297,5682,3446.9297,5678,3450.9297,5674,3446.9297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="5687" y="3451.1401">writeNeuron(ostream&amp; output, int i) : void {query}</text><!--MD5=[a4e35ff6c4fc9c7a26a0ff69acb0e23b]
class AllIZHNeurons--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="637.0156" id="AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="5219" y="3626.5"/><ellipse cx="5600.75" cy="3642.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5603.7188,3648.1406 Q5603.1406,3648.4375 5602.5,3648.5781 Q5601.8594,3648.7344 5601.1563,3648.7344 Q5598.6563,3648.7344 5597.3281,3647.0938 Q5596.0156,3645.4375 5596.0156,3642.3125 Q5596.0156,3639.1875 5597.3281,3637.5313 Q5598.6563,3635.875 5601.1563,3635.875 Q5601.8594,3635.875 5602.5,3636.0313 Q5603.1563,3636.1875 5603.7188,3636.4844 L5603.7188,3639.2031 Q5603.0938,3638.625 5602.5,3638.3594 Q5601.9063,3638.0781 5601.2813,3638.0781 Q5599.9375,3638.0781 5599.25,3639.1563 Q5598.5625,3640.2188 5598.5625,3642.3125 Q5598.5625,3644.4063 5599.25,3645.4844 Q5599.9375,3646.5469 5601.2813,3646.5469 Q5601.9063,3646.5469 5602.5,3646.2813 Q5603.0938,3646 5603.7188,3645.4219 L5603.7188,3648.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="5621.25" y="3646.6543">AllIZHNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220" x2="6078" y1="3658.5" y2="3658.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3666.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5239" y="3672.7104">excAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3679.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5239" y="3685.5151">excBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3692.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5239" y="3698.3198">excCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3704.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5239" y="3711.1245">excDconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3717.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5239" y="3723.9292">inhAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3730.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5239" y="3736.7339">inhBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3743.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5239" y="3749.5386">inhCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3756.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5239" y="3762.3433">inhDconst_ : BGFLOAT</text><ellipse cx="5230" cy="3771.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="5239" y="3775.1479">Aconst_ : BGFLOAT*</text><ellipse cx="5230" cy="3784.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5239" y="3787.9526">Bconst_ : BGFLOAT*</text><ellipse cx="5230" cy="3797.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5239" y="3800.7573">C3_ : BGFLOAT*</text><ellipse cx="5230" cy="3810.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5239" y="3813.562">Cconst_ : BGFLOAT*</text><ellipse cx="5230" cy="3823.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5239" y="3826.3667">Dconst_ : BGFLOAT*</text><ellipse cx="5230" cy="3835.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5239" y="3839.1714">u_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3845.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="5239" y="3851.9761">DEFAULT_a : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3858.5703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="5239" y="3864.7808">DEFAULT_b : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3871.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="5239" y="3877.5854">DEFAULT_c : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227" y="3884.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="5239" y="3890.3901">DEFAULT_d : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220" x2="6078" y1="3896.9844" y2="3896.9844"/><ellipse cx="5230" cy="3907.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5239" y="3911.1948">AllIZHNeurons()</text><ellipse cx="5230" cy="3920.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5239" y="3923.9995">~AllIZHNeurons()</text><ellipse cx="5230" cy="3933.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="5239" y="3936.8042">Create() : AllVertices*</text><ellipse cx="5230" cy="3946.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5239" y="3949.6089">toString(const int index) : string {query}</text><polygon fill="#FFFF44" points="5230,3954.2031,5234,3958.2031,5230,3962.2031,5226,3958.2031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="5239" y="3962.4136">advanceNeuron(const int index) : void</text><ellipse cx="5230" cy="3972.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="5239" y="3975.2183">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="5230,3979.8125,5234,3983.8125,5230,3987.8125,5226,3983.8125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="5239" y="3988.0229">allocDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5230" cy="3997.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5239" y="4000.8276">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="5230" cy="4010.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5239" y="4013.6323">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5230,4018.2266,5234,4022.2266,5230,4026.2266,5226,4022.2266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="5239" y="4026.437">copyDeviceToHost(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5230,4031.0313,5234,4035.0313,5230,4039.0313,5226,4035.0313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="5239" y="4039.2417">copyHostToDevice(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5230" cy="4048.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5239" y="4052.0464">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="5230" cy="4061.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5239" y="4064.8511">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="5230" cy="4074.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5239" y="4077.6558">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="5230" cy="4087.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5239" y="4090.4604">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="5230" cy="4100.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5239" y="4103.2651">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="5230,4107.8594,5234,4111.8594,5230,4115.8594,5226,4111.8594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5239" y="4116.0698">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="5230,4120.6641,5234,4124.6641,5230,4128.6641,5226,4124.6641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="5239" y="4128.8745">deleteDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5230" cy="4138.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="5239" y="4141.6792">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="5230" cy="4151.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5239" y="4154.4839">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="5230,4159.0781,5234,4163.0781,5230,4167.0781,5226,4163.0781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5239" y="4167.2886">fire(const int index) : void</text><polygon fill="#FFFF44" points="5230,4171.8828,5234,4175.8828,5230,4179.8828,5226,4175.8828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5239" y="4180.0933">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="5230" cy="4189.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5239" y="4192.8979">printParameters() : void {query}</text><polygon fill="#FFFF44" points="5230,4197.4922,5234,4201.4922,5230,4205.4922,5226,4201.4922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="5239" y="4205.7026">readNeuron(istream&amp; input, int index) : void</text><ellipse cx="5230" cy="4215.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5239" y="4218.5073">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="5230,4223.1016,5234,4227.1016,5230,4231.1016,5226,4227.1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5239" y="4231.312">setNeuronDefaults(const int index) : void</text><ellipse cx="5230" cy="4240.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5239" y="4244.1167">setupVertices() : void</text><polygon fill="#FFFF44" points="5230,4248.7109,5234,4252.7109,5230,4256.7109,5226,4252.7109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5239" y="4256.9214">writeNeuron(ostream&amp; output, int index) : void {query}</text><!--MD5=[17306769ffb707adf94de37859054409]
class AllLIFNeurons--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="137.6328" id="AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="6114" y="3876"/><ellipse cx="6498.25" cy="3892" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6501.2188,3897.6406 Q6500.6406,3897.9375 6500,3898.0781 Q6499.3594,3898.2344 6498.6563,3898.2344 Q6496.1563,3898.2344 6494.8281,3896.5938 Q6493.5156,3894.9375 6493.5156,3891.8125 Q6493.5156,3888.6875 6494.8281,3887.0313 Q6496.1563,3885.375 6498.6563,3885.375 Q6499.3594,3885.375 6500,3885.5313 Q6500.6563,3885.6875 6501.2188,3885.9844 L6501.2188,3888.7031 Q6500.5938,3888.125 6500,3887.8594 Q6499.4063,3887.5781 6498.7813,3887.5781 Q6497.4375,3887.5781 6496.75,3888.6563 Q6496.0625,3889.7188 6496.0625,3891.8125 Q6496.0625,3893.9063 6496.75,3894.9844 Q6497.4375,3896.0469 6498.7813,3896.0469 Q6499.4063,3896.0469 6500,3895.7813 Q6500.5938,3895.5 6501.2188,3894.9219 L6501.2188,3897.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="6518.75" y="3896.1543">AllLIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6115" x2="6973" y1="3908" y2="3908"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6115" x2="6973" y1="3916" y2="3916"/><ellipse cx="6125" cy="3927" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="6134" y="3930.2104">AllLIFNeurons()</text><ellipse cx="6125" cy="3939.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6134" y="3943.0151">~AllLIFNeurons()</text><ellipse cx="6125" cy="3952.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="6134" y="3955.8198">Create() : AllVertices*</text><polygon fill="#FFFF44" points="6125,3960.4141,6129,3964.4141,6125,3968.4141,6121,3964.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="6134" y="3968.6245">advanceNeuron(const int index) : void</text><ellipse cx="6125" cy="3978.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="6134" y="3981.4292">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="6125,3986.0234,6129,3990.0234,6125,3994.0234,6121,3990.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6134" y="3994.2339">fire(const int index) : void</text><ellipse cx="6125" cy="4003.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6134" y="4007.0386">printParameters() : void {query}</text><!--MD5=[96f31d00847e9628d93d2720c47b9604]
class AllNeuroEdges--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="188.8516" id="AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="681" y="2469.5"/><ellipse cx="825.25" cy="2485.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M828.2188,2491.1406 Q827.6406,2491.4375 827,2491.5781 Q826.3594,2491.7344 825.6563,2491.7344 Q823.1563,2491.7344 821.8281,2490.0938 Q820.5156,2488.4375 820.5156,2485.3125 Q820.5156,2482.1875 821.8281,2480.5313 Q823.1563,2478.875 825.6563,2478.875 Q826.3594,2478.875 827,2479.0313 Q827.6563,2479.1875 828.2188,2479.4844 L828.2188,2482.2031 Q827.5938,2481.625 827,2481.3594 Q826.4063,2481.0781 825.7813,2481.0781 Q824.4375,2481.0781 823.75,2482.1563 Q823.0625,2483.2188 823.0625,2485.3125 Q823.0625,2487.4063 823.75,2488.4844 Q824.4375,2489.5469 825.7813,2489.5469 Q826.4063,2489.5469 827,2489.2813 Q827.5938,2489 828.2188,2488.4219 L828.2188,2491.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="845.75" y="2489.6543">AllNeuroEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="2501.5" y2="2501.5"/><ellipse cx="692" cy="2512.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="701" y="2515.7104">psr_ : BGFLOAT*</text><ellipse cx="692" cy="2525.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="356" x="701" y="2528.5151">SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="2535.1094" y2="2535.1094"/><ellipse cx="692" cy="2546.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="701" y="2549.3198">AllNeuroEdges()</text><ellipse cx="692" cy="2558.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="701" y="2562.1245">~AllNeuroEdges()</text><ellipse cx="692" cy="2571.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="701" y="2574.9292">edgSign(const edgeType type) : int</text><ellipse cx="692" cy="2584.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="701" y="2587.7339">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="692,2592.3281,696,2596.3281,692,2600.3281,688,2596.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="701" y="2600.5386">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="692" cy="2610.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="701" y="2613.3433">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="692" cy="2622.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="701" y="2626.1479">setupEdges() : void</text><polygon fill="#FFFF44" points="692,2630.7422,696,2634.7422,692,2638.7422,688,2634.7422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="701" y="2638.9526">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="692,2643.5469,696,2647.5469,692,2651.5469,688,2647.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="701" y="2651.7573">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[635988d62f36dba7a8b9baa086d12f03]
class AllSTDPSynapses--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="841.8906" id="AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="862" x="889" y="3524"/><ellipse cx="1262.75" cy="3540" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1265.7188,3545.6406 Q1265.1406,3545.9375 1264.5,3546.0781 Q1263.8594,3546.2344 1263.1563,3546.2344 Q1260.6563,3546.2344 1259.3281,3544.5938 Q1258.0156,3542.9375 1258.0156,3539.8125 Q1258.0156,3536.6875 1259.3281,3535.0313 Q1260.6563,3533.375 1263.1563,3533.375 Q1263.8594,3533.375 1264.5,3533.5313 Q1265.1563,3533.6875 1265.7188,3533.9844 L1265.7188,3536.7031 Q1265.0938,3536.125 1264.5,3535.8594 Q1263.9063,3535.5781 1263.2813,3535.5781 Q1261.9375,3535.5781 1261.25,3536.6563 Q1260.5625,3537.7188 1260.5625,3539.8125 Q1260.5625,3541.9063 1261.25,3542.9844 Q1261.9375,3544.0469 1263.2813,3544.0469 Q1263.9063,3544.0469 1264.5,3543.7813 Q1265.0938,3543.5 1265.7188,3542.9219 L1265.7188,3545.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="1283.25" y="3544.1543">AllSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="3556" y2="3556"/><ellipse cx="900" cy="3567" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="3570.2104">Aneg_E_ : BGFLOAT</text><ellipse cx="900" cy="3579.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3583.0151">Aneg_I_ : BGFLOAT</text><ellipse cx="900" cy="3592.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="3595.8198">Apos_E_ : BGFLOAT</text><ellipse cx="900" cy="3605.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3608.6245">Apos_I_ : BGFLOAT</text><ellipse cx="900" cy="3618.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="909" y="3621.4292">Wex_E_ : BGFLOAT</text><ellipse cx="900" cy="3631.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="909" y="3634.2339">Wex_I_ : BGFLOAT</text><ellipse cx="900" cy="3643.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="909" y="3647.0386">defaultSTDPgap_ : BGFLOAT</text><ellipse cx="900" cy="3656.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="3659.8433">tauneg_E_ : BGFLOAT</text><ellipse cx="900" cy="3669.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="3672.6479">tauneg_I_ : BGFLOAT</text><ellipse cx="900" cy="3682.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="3685.4526">taupos_E_ : BGFLOAT</text><ellipse cx="900" cy="3695.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="3698.2573">taupos_I_ : BGFLOAT</text><ellipse cx="900" cy="3707.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="909" y="3711.062">tauspost_E_ : BGFLOAT</text><ellipse cx="900" cy="3720.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="909" y="3723.8667">tauspost_I_ : BGFLOAT</text><ellipse cx="900" cy="3733.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="3736.6714">tauspre_E_ : BGFLOAT</text><ellipse cx="900" cy="3746.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="3749.4761">tauspre_I_ : BGFLOAT</text><ellipse cx="900" cy="3759.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="3762.2808">Aneg_ : BGFLOAT*</text><ellipse cx="900" cy="3771.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="3775.0854">Apos_ : BGFLOAT*</text><ellipse cx="900" cy="3784.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="3787.8901">STDPgap_ : BGFLOAT*</text><ellipse cx="900" cy="3797.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="909" y="3800.6948">Wex_ : BGFLOAT*</text><ellipse cx="900" cy="3810.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3813.4995">muneg_ : BGFLOAT*</text><ellipse cx="900" cy="3823.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3826.3042">mupos_ : BGFLOAT*</text><ellipse cx="900" cy="3835.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3839.1089">tauneg_ : BGFLOAT*</text><ellipse cx="900" cy="3848.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3851.9136">taupos_ : BGFLOAT*</text><ellipse cx="900" cy="3861.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="909" y="3864.7183">tauspost_ : BGFLOAT*</text><ellipse cx="900" cy="3874.3125" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="909" y="3877.5229">tauspre_ : BGFLOAT*</text><ellipse cx="900" cy="3887.1172" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="3890.3276">delayIndexPost_ : int*</text><ellipse cx="900" cy="3899.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="3903.1323">delayQueuePostLength_ : int*</text><ellipse cx="900" cy="3912.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="909" y="3915.937">totalDelayPost_ : int*</text><ellipse cx="900" cy="3925.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="909" y="3928.7417">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="3935.3359" y2="3935.3359"/><ellipse cx="900" cy="3946.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3949.5464">AllSTDPSynapses()</text><ellipse cx="900" cy="3959.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="909" y="3962.3511">AllSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="900" cy="3971.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="909" y="3975.1558">~AllSTDPSynapses()</text><ellipse cx="900" cy="3984.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="909" y="3987.9604">Create() : AllEdges*</text><polygon fill="#FFFF44" points="900,3992.5547,904,3996.5547,900,4000.5547,896,3996.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="909" y="4000.7651">synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT</text><ellipse cx="900" cy="4010.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="4013.5698">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="900,4018.1641,904,4022.1641,900,4026.1641,896,4022.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="909" y="4026.3745">isSpikeQueuePost(const BGSIZE iEdg) : bool</text><ellipse cx="900" cy="4035.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="909" y="4039.1792">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="900" cy="4048.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="909" y="4051.9839">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="900,4056.5781,904,4060.5781,900,4064.5781,896,4060.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="909" y="4064.7886">allocDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="4074.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4077.5933">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="900" cy="4087.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="4090.3979">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,4094.9922,904,4098.9922,900,4102.9922,896,4098.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="909" y="4103.2026">copyDeviceToHost(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="4112.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4116.0073">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="900" cy="4125.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4128.812">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="900" cy="4138.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="4141.6167">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,4146.2109,904,4150.2109,900,4154.2109,896,4150.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="836" x="909" y="4154.4214">copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="4164.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="909" y="4167.2261">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="900,4171.8203,904,4175.8203,900,4179.8203,896,4175.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="909" y="4180.0308">deleteDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="4189.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="909" y="4192.8354">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="900,4197.4297,904,4201.4297,900,4205.4297,896,4201.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="909" y="4205.6401">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4215.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="909" y="4218.4448">loadParameters() : void</text><ellipse cx="900" cy="4228.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="909" y="4231.2495">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4240.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="4244.0542">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="900" cy="4253.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="909" y="4256.8589">printParameters() : void {query}</text><ellipse cx="900" cy="4266.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="909" y="4269.6636">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="900,4274.2578,904,4278.2578,900,4282.2578,896,4278.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="909" y="4282.4683">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4292.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="909" y="4295.2729">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="900" cy="4304.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="909" y="4308.0776">setEdgeClassID() : void</text><ellipse cx="900" cy="4317.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="909" y="4320.8823">setupEdges() : void</text><polygon fill="#FFFF44" points="900,4325.4766,904,4329.4766,900,4333.4766,896,4329.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="909" y="4333.687">setupEdges(const int numVertices, const int maxEdges) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897" y="4340.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="909" y="4346.4917">stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void</text><polygon fill="#FFFF44" points="900,4351.0859,904,4355.0859,900,4359.0859,896,4355.0859" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="4359.2964">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[00675e18512933602d55f5e0e2b1ab32]
class AllSpikingNeurons--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="278.4844" id="AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="5522.5" y="2425"/><ellipse cx="5738.25" cy="2441" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5738.3594,2436.3438 L5737.2031,2441.4219 L5739.5313,2441.4219 L5738.3594,2436.3438 Z M5736.875,2434.1094 L5739.8594,2434.1094 L5743.2188,2446.5 L5740.7656,2446.5 L5740,2443.4375 L5736.7188,2443.4375 L5735.9688,2446.5 L5733.5313,2446.5 L5736.875,2434.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="5758.75" y="2445.1543">AllSpikingNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5523.5" x2="6072.5" y1="2457" y2="2457"/><polygon fill="none" points="5533.5,2463,5537.5,2467,5533.5,2471,5529.5,2467" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5542.5" y="2471.2104">fAllowBackPropagation_ : bool</text><ellipse cx="5533.5" cy="2480.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5542.5" y="2484.0151">vertexEvents_ : vector&lt;EventBuffer&gt;</text><ellipse cx="5533.5" cy="2493.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5542.5" y="2496.8198">hasFired_ : vector&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5523.5" x2="6072.5" y1="2503.4141" y2="2503.4141"/><ellipse cx="5533.5" cy="2514.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5542.5" y="2517.6245">AllSpikingNeurons()</text><ellipse cx="5533.5" cy="2527.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5542.5" y="2530.4292">~AllSpikingNeurons()</text><ellipse cx="5533.5" cy="2540.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5542.5" y="2543.2339">getSpikeHistory(int index, int offIndex) : uint64_t</text><polygon fill="#FFFF44" points="5533.5,2547.8281,5537.5,2551.8281,5533.5,2555.8281,5529.5,2551.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="5542.5" y="2556.0386">advanceNeuron(const int index) : void</text><ellipse cx="5533.5" cy="2565.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="5542.5" y="2568.8433">advanceVertices(AllEdges&amp; synapses, const EdgeIndexMap* edgeIndexMap) : void</text><polygon fill="#FFFF44" points="5533.5,2573.4375,5537.5,2577.4375,5533.5,2581.4375,5529.5,2577.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="5542.5" y="2581.6479">clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5533.5" cy="2591.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="5542.5" y="2594.4526">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><ellipse cx="5533.5" cy="2604.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5542.5" y="2607.2573">clearSpikeCounts() : void</text><polygon fill="#FFFF44" points="5533.5,2611.8516,5537.5,2615.8516,5533.5,2619.8516,5529.5,2615.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="5542.5" y="2620.062">copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5533.5,2624.6563,5537.5,2628.6563,5533.5,2632.6563,5529.5,2628.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="5542.5" y="2632.8667">copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5533.5" cy="2642.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5542.5" y="2645.6714">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="5533.5" cy="2655.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="5542.5" y="2658.4761">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5533.5,2663.0703,5537.5,2667.0703,5533.5,2671.0703,5529.5,2667.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5542.5" y="2671.2808">fire(const int index) : void</text><ellipse cx="5533.5" cy="2680.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5542.5" y="2684.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; synapses) : void</text><ellipse cx="5533.5" cy="2693.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5542.5" y="2696.8901">setupVertices() : void</text><!--MD5=[cfe37ad1a50a7dcaaf80645f5fb9fa69]
class AllSpikingSynapses--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="701.0391" id="AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="873" x="438.5" y="2763"/><ellipse cx="811.25" cy="2779" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,2784.6406 Q813.6406,2784.9375 813,2785.0781 Q812.3594,2785.2344 811.6563,2785.2344 Q809.1563,2785.2344 807.8281,2783.5938 Q806.5156,2781.9375 806.5156,2778.8125 Q806.5156,2775.6875 807.8281,2774.0313 Q809.1563,2772.375 811.6563,2772.375 Q812.3594,2772.375 813,2772.5313 Q813.6563,2772.6875 814.2188,2772.9844 L814.2188,2775.7031 Q813.5938,2775.125 813,2774.8594 Q812.4063,2774.5781 811.7813,2774.5781 Q810.4375,2774.5781 809.75,2775.6563 Q809.0625,2776.7188 809.0625,2778.8125 Q809.0625,2780.9063 809.75,2781.9844 Q810.4375,2783.0469 811.7813,2783.0469 Q812.4063,2783.0469 813,2782.7813 Q813.5938,2782.5 814.2188,2781.9219 L814.2188,2784.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="831.75" y="2783.1543">AllSpikingSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="2795" y2="2795"/><ellipse cx="449.5" cy="2806" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="458.5" y="2809.2104">delay_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="2818.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="2822.0151">delay_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="2831.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="2834.8198">delay_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="2844.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="458.5" y="2847.6245">delay_II_ : BGFLOAT</text><ellipse cx="449.5" cy="2857.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="458.5" y="2860.4292">tau_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="2870.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="2873.2339">tau_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="2882.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="2886.0386">tau_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="2895.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="458.5" y="2898.8433">tau_II_ : BGFLOAT</text><ellipse cx="449.5" cy="2908.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="458.5" y="2911.6479">decay_ : BGFLOAT*</text><ellipse cx="449.5" cy="2921.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="2924.4526">tau_ : BGFLOAT*</text><ellipse cx="449.5" cy="2934.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="458.5" y="2937.2573">delayIndex_ : int*</text><ellipse cx="449.5" cy="2946.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="458.5" y="2950.062">delayQueueLength_ : int*</text><ellipse cx="449.5" cy="2959.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="2962.8667">totalDelay_ : int*</text><ellipse cx="449.5" cy="2972.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="458.5" y="2975.6714">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="2982.2656" y2="2982.2656"/><ellipse cx="449.5" cy="2993.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="458.5" y="2996.4761">AllSpikingSynapses()</text><ellipse cx="449.5" cy="3006.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3009.2808">AllSpikingSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="449.5" cy="3018.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="458.5" y="3022.0854">~AllSpikingSynapses()</text><ellipse cx="449.5" cy="3031.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="458.5" y="3034.8901">Create() : AllEdges*</text><ellipse cx="449.5" cy="3044.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="458.5" y="3047.6948">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="449.5,3052.2891,453.5,3056.2891,449.5,3060.2891,445.5,3056.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="458.5" y="3060.4995">isSpikeQueue(const BGSIZE iEdg) : bool</text><polygon fill="#FFFF44" points="449.5,3065.0938,453.5,3069.0938,449.5,3073.0938,445.5,3069.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="458.5" y="3073.3042">updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool</text><ellipse cx="449.5" cy="3082.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="458.5" y="3086.1089">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="449.5" cy="3095.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="458.5" y="3098.9136">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="449.5,3103.5078,453.5,3107.5078,449.5,3111.5078,445.5,3107.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="458.5" y="3111.7183">allocDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="3121.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3124.5229">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="449.5" cy="3134.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="3137.3276">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,3141.9219,453.5,3145.9219,449.5,3149.9219,445.5,3145.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="458.5" y="3150.1323">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="3159.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="458.5" y="3162.937">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3172.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="458.5" y="3175.7417">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,3180.3359,453.5,3184.3359,449.5,3188.3359,445.5,3184.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="458.5" y="3188.5464">copyDeviceToHost(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="3198.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3201.3511">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3210.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3214.1558">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3223.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="3226.9604">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,3231.5547,453.5,3235.5547,449.5,3239.5547,445.5,3235.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="458.5" y="3239.7651">copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="3249.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="458.5" y="3252.5698">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="449.5,3257.1641,453.5,3261.1641,449.5,3265.1641,445.5,3261.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="458.5" y="3265.3745">deleteDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="3274.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="458.5" y="3278.1792">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,3282.7734,453.5,3286.7734,449.5,3290.7734,445.5,3286.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="458.5" y="3290.9839">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3300.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="458.5" y="3303.7886">loadParameters() : void</text><ellipse cx="449.5" cy="3313.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="458.5" y="3316.5933">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3326.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="458.5" y="3329.3979">preSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3338.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3342.2026">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="449.5" cy="3351.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="458.5" y="3355.0073">printParameters() : void {query}</text><ellipse cx="449.5" cy="3364.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="458.5" y="3367.812">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="449.5,3372.4063,453.5,3376.4063,449.5,3380.4063,445.5,3376.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="458.5" y="3380.6167">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3390.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="458.5" y="3393.4214">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="3403.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="458.5" y="3406.2261">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="449.5" cy="3415.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="458.5" y="3419.0308">setEdgeClassID() : void</text><ellipse cx="449.5" cy="3428.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="458.5" y="3431.8354">setupEdges() : void</text><polygon fill="#FFFF44" points="449.5,3436.4297,453.5,3440.4297,449.5,3444.4297,445.5,3440.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="458.5" y="3444.6401">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="449.5,3449.2344,453.5,3453.2344,449.5,3457.2344,445.5,3453.2344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3457.4448">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[34dee175ca2f1207a5c8be9520f72c2f]
class AllVertices--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="278.4844" id="AllVertices" style="stroke: #A80036; stroke-width: 1.5;" width="845" x="5375.5" y="1933"/><ellipse cx="5761.75" cy="1949" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5761.8594,1944.3438 L5760.7031,1949.4219 L5763.0313,1949.4219 L5761.8594,1944.3438 Z M5760.375,1942.1094 L5763.3594,1942.1094 L5766.7188,1954.5 L5764.2656,1954.5 L5763.5,1951.4375 L5760.2188,1951.4375 L5759.4688,1954.5 L5757.0313,1954.5 L5760.375,1942.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="5782.25" y="1953.1543">AllVertices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5376.5" x2="6219.5" y1="1965" y2="1965"/><ellipse cx="5386.5" cy="1976" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5395.5" y="1979.2104">summationMap_ : BGFLOAT*</text><polygon fill="none" points="5386.5,1983.8047,5390.5,1987.8047,5386.5,1991.8047,5382.5,1987.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="5395.5" y="1992.0151">size_ : int</text><polygon fill="none" points="5386.5,1996.6094,5390.5,2000.6094,5386.5,2004.6094,5382.5,2000.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5395.5" y="2004.8198">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="5386.5,2009.4141,5390.5,2013.4141,5386.5,2017.4141,5382.5,2013.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5395.5" y="2017.6245">vertexLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5376.5" x2="6219.5" y1="2024.2188" y2="2024.2188"/><ellipse cx="5386.5" cy="2035.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5395.5" y="2038.4292">AllVertices()</text><ellipse cx="5386.5" cy="2048.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5395.5" y="2051.2339">~AllVertices()</text><ellipse cx="5386.5" cy="2060.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="5395.5" y="2064.0386">toString(const int i) : string {query}</text><ellipse cx="5386.5" cy="2073.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="819" x="5395.5" y="2076.8433">advanceVertices(AllEdges&amp; edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><ellipse cx="5386.5" cy="2086.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="5395.5" y="2089.6479">advanceVertices(AllEdges&amp; edges, const EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="5386.5" cy="2099.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="5395.5" y="2102.4526">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="5386.5" cy="2112.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="5395.5" y="2115.2573">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="5386.5" cy="2124.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="5395.5" y="2128.062">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="5386.5" cy="2137.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="5395.5" y="2140.8667">createAllVertices(Layout* layout) : void</text><ellipse cx="5386.5" cy="2150.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="5395.5" y="2153.6714">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="5386.5" cy="2163.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="5395.5" y="2166.4761">loadParameters() : void</text><ellipse cx="5386.5" cy="2176.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5395.5" y="2179.2808">printParameters() : void {query}</text><ellipse cx="5386.5" cy="2188.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="5395.5" y="2192.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; edges) : void</text><ellipse cx="5386.5" cy="2201.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5395.5" y="2204.8901">setupVertices() : void</text><!--MD5=[d85fbbe7efff0e713ca3ebcdefdae521]
class CPUModel--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="137.6328" id="CPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="4290" y="1453"/><ellipse cx="4343.75" cy="1469" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4346.7188,1474.6406 Q4346.1406,1474.9375 4345.5,1475.0781 Q4344.8594,1475.2344 4344.1563,1475.2344 Q4341.6563,1475.2344 4340.3281,1473.5938 Q4339.0156,1471.9375 4339.0156,1468.8125 Q4339.0156,1465.6875 4340.3281,1464.0313 Q4341.6563,1462.375 4344.1563,1462.375 Q4344.8594,1462.375 4345.5,1462.5313 Q4346.1563,1462.6875 4346.7188,1462.9844 L4346.7188,1465.7031 Q4346.0938,1465.125 4345.5,1464.8594 Q4344.9063,1464.5781 4344.2813,1464.5781 Q4342.9375,1464.5781 4342.25,1465.6563 Q4341.5625,1466.7188 4341.5625,1468.8125 Q4341.5625,1470.9063 4342.25,1471.9844 Q4342.9375,1473.0469 4344.2813,1473.0469 Q4344.9063,1473.0469 4345.5,1472.7813 Q4346.0938,1472.5 4346.7188,1471.9219 L4346.7188,1474.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4364.25" y="1473.1543">CPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4291" x2="4467" y1="1485" y2="1485"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4291" x2="4467" y1="1493" y2="1493"/><ellipse cx="4301" cy="1504" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4310" y="1507.2104">CPUModel()</text><ellipse cx="4301" cy="1516.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4310" y="1520.0151">~CPUModel()</text><ellipse cx="4301" cy="1529.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4310" y="1532.8198">advance() : void</text><ellipse cx="4301" cy="1542.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4310" y="1545.6245">copyCPUtoGPU() : void</text><ellipse cx="4301" cy="1555.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4310" y="1558.4292">copyGPUtoCPU() : void</text><ellipse cx="4301" cy="1568.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4310" y="1571.2339">finish() : void</text><ellipse cx="4301" cy="1580.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4310" y="1584.0386">updateConnections() : void</text><!--MD5=[540eab1ed52846d003b47757435df453]
class ConnGrowth--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="368.1172" id="ConnGrowth" style="stroke: #A80036; stroke-width: 1.5;" width="1295" x="1812.5" y="1888"/><ellipse cx="2417.75" cy="1904" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2420.7188,1909.6406 Q2420.1406,1909.9375 2419.5,1910.0781 Q2418.8594,1910.2344 2418.1563,1910.2344 Q2415.6563,1910.2344 2414.3281,1908.5938 Q2413.0156,1906.9375 2413.0156,1903.8125 Q2413.0156,1900.6875 2414.3281,1899.0313 Q2415.6563,1897.375 2418.1563,1897.375 Q2418.8594,1897.375 2419.5,1897.5313 Q2420.1563,1897.6875 2420.7188,1897.9844 L2420.7188,1900.7031 Q2420.0938,1900.125 2419.5,1899.8594 Q2418.9063,1899.5781 2418.2813,1899.5781 Q2416.9375,1899.5781 2416.25,1900.6563 Q2415.5625,1901.7188 2415.5625,1903.8125 Q2415.5625,1905.9063 2416.25,1906.9844 Q2416.9375,1908.0469 2418.2813,1908.0469 Q2418.9063,1908.0469 2419.5,1907.7813 Q2420.0938,1907.5 2420.7188,1906.9219 L2420.7188,1909.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="2438.25" y="1908.1543">ConnGrowth</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1813.5" x2="3106.5" y1="1920" y2="1920"/><ellipse cx="1823.5" cy="1931" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1832.5" y="1934.2104">W_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1943.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1832.5" y="1947.0151">area_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1956.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1832.5" y="1959.8198">delta_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1969.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1832.5" y="1972.6245">growthParams_ : GrowthParams</text><ellipse cx="1823.5" cy="1982.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1832.5" y="1985.4292">deltaR_ : VectorMatrix*</text><ellipse cx="1823.5" cy="1995.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1832.5" y="1998.2339">outgrowth_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2007.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1832.5" y="2011.0386">radii_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2020.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1832.5" y="2023.8433">rates_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2033.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1832.5" y="2036.6479">radiiSize_ : int</text><ellipse cx="1823.5" cy="2046.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1832.5" y="2049.4526">spikeCounts_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1813.5" x2="3106.5" y1="2056.0469" y2="2056.0469"/><ellipse cx="1823.5" cy="2067.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1832.5" y="2070.2573">ConnGrowth()</text><ellipse cx="1823.5" cy="2079.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1832.5" y="2083.062">~ConnGrowth()</text><ellipse cx="1823.5" cy="2092.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1832.5" y="2095.8667">Create() : Connections*</text><ellipse cx="1823.5" cy="2105.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1832.5" y="2108.6714">updateConnections(AllVertices&amp; neurons, Layout* layout) : bool</text><ellipse cx="1823.5" cy="2118.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1832.5" y="2121.4761">load(Archive&amp; archive) : void</text><ellipse cx="1823.5" cy="2131.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1832.5" y="2134.2808">loadParameters() : void</text><ellipse cx="1823.5" cy="2143.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1832.5" y="2147.0854">printParameters() : void {query}</text><ellipse cx="1823.5" cy="2156.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1832.5" y="2159.8901">printRadii() : void {query}</text><ellipse cx="1823.5" cy="2169.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1832.5" y="2172.6948">save(Archive&amp; archive) : void {query}</text><ellipse cx="1823.5" cy="2182.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="1832.5" y="2185.4995">setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2192.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1832.5" y="2198.3042">updateConns(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2204.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="1832.5" y="2211.1089">updateFrontiers(const int numVertices, Layout* layout) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2217.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1832.5" y="2223.9136">updateOverlap(BGFLOAT numVertices, Layout* layout) : void</text><ellipse cx="1823.5" cy="2233.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1269" x="1832.5" y="2236.7183">updateSynapsesWeights(const int numVertices, AllVertices&amp; neurons, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1823.5" cy="2246.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1832.5" y="2249.5229">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[b671e9144a70d5380b4364952f259167]
class ConnStatic--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="316.8984" id="ConnStatic" style="stroke: #A80036; stroke-width: 1.5;" width="475" x="1302.5" y="1913.5"/><ellipse cx="1501.75" cy="1929.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1504.7188,1935.1406 Q1504.1406,1935.4375 1503.5,1935.5781 Q1502.8594,1935.7344 1502.1563,1935.7344 Q1499.6563,1935.7344 1498.3281,1934.0938 Q1497.0156,1932.4375 1497.0156,1929.3125 Q1497.0156,1926.1875 1498.3281,1924.5313 Q1499.6563,1922.875 1502.1563,1922.875 Q1502.8594,1922.875 1503.5,1923.0313 Q1504.1563,1923.1875 1504.7188,1923.4844 L1504.7188,1926.2031 Q1504.0938,1925.625 1503.5,1925.3594 Q1502.9063,1925.0781 1502.2813,1925.0781 Q1500.9375,1925.0781 1500.25,1926.1563 Q1499.5625,1927.2188 1499.5625,1929.3125 Q1499.5625,1931.4063 1500.25,1932.4844 Q1500.9375,1933.5469 1502.2813,1933.5469 Q1502.9063,1933.5469 1503.5,1933.2813 Q1504.0938,1933 1504.7188,1932.4219 L1504.7188,1935.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1522.25" y="1933.6543">ConnStatic</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="1776.5" y1="1945.5" y2="1945.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1953.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1322.5" y="1959.7104">excWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1966.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1322.5" y="1972.5151">inhWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1979.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1322.5" y="1985.3198">rewiringProbability_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1991.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1322.5" y="1998.1245">threshConnsRadius_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2004.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1322.5" y="2010.9292">WCurrentEpoch_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2017.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1322.5" y="2023.7339">connsPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2030.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1322.5" y="2036.5386">radiiSize_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2043.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1322.5" y="2049.3433">destVertexIndexCurrentEpoch_ : int*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2055.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1322.5" y="2062.1479">sourceVertexIndexCurrentEpoch_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="1776.5" y1="2068.7422" y2="2068.7422"/><ellipse cx="1313.5" cy="2079.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1322.5" y="2082.9526">ConnStatic()</text><ellipse cx="1313.5" cy="2092.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1322.5" y="2095.7573">~ConnStatic()</text><ellipse cx="1313.5" cy="2105.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1322.5" y="2108.562">getConnsRadiusThresh() : BGFLOAT {query}</text><ellipse cx="1313.5" cy="2118.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1322.5" y="2121.3667">getWCurrentEpoch() : BGFLOAT* {query}</text><ellipse cx="1313.5" cy="2130.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1322.5" y="2134.1714">Create() : Connections*</text><ellipse cx="1313.5" cy="2143.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="1322.5" y="2146.9761">getDestVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="1313.5" cy="2156.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1322.5" y="2159.7808">getSourceVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="1313.5" cy="2169.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1322.5" y="2172.5854">load(Archive&amp; archive) : void</text><ellipse cx="1313.5" cy="2182.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1322.5" y="2185.3901">loadParameters() : void</text><ellipse cx="1313.5" cy="2194.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1322.5" y="2198.1948">printParameters() : void {query}</text><ellipse cx="1313.5" cy="2207.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1322.5" y="2210.9995">save(Archive&amp; archive) : void {query}</text><ellipse cx="1313.5" cy="2220.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="1322.5" y="2223.8042">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void</text><!--MD5=[24bb951fb6b9ac52df1580923e830244]
class Connections--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="252.875" id="Connections" style="stroke: #A80036; stroke-width: 1.5;" width="1293" x="1671.5" y="1395.5"/><ellipse cx="2275.25" cy="1411.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2275.3594,1406.8438 L2274.2031,1411.9219 L2276.5313,1411.9219 L2275.3594,1406.8438 Z M2273.875,1404.6094 L2276.8594,1404.6094 L2280.2188,1417 L2277.7656,1417 L2277,1413.9375 L2273.7188,1413.9375 L2272.9688,1417 L2270.5313,1417 L2273.875,1404.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2295.75" y="1415.6543">Connections</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1672.5" x2="2963.5" y1="1427.5" y2="1427.5"/><polygon fill="none" points="1682.5,1433.5,1686.5,1437.5,1682.5,1441.5,1678.5,1437.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1691.5" y="1441.7104">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="1682.5,1446.3047,1686.5,1450.3047,1682.5,1454.3047,1678.5,1450.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1691.5" y="1454.5151">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="1682.5,1459.1094,1686.5,1463.1094,1682.5,1467.1094,1678.5,1463.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1691.5" y="1467.3198">edges_ : shared_ptr&lt;AllEdges&gt;</text><polygon fill="none" points="1682.5,1471.9141,1686.5,1475.9141,1682.5,1479.9141,1678.5,1475.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1691.5" y="1480.1245">synapseIndexMap_ : shared_ptr&lt;EdgeIndexMap&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1672.5" x2="2963.5" y1="1486.7188" y2="1486.7188"/><ellipse cx="1682.5" cy="1497.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1691.5" y="1500.9292">Connections()</text><ellipse cx="1682.5" cy="1510.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1691.5" y="1513.7339">~Connections()</text><ellipse cx="1682.5" cy="1523.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1691.5" y="1526.5386">updateConnections(AllVertices&amp; vertices, Layout* layout) : bool</text><ellipse cx="1682.5" cy="1536.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1691.5" y="1539.3433">getEdges() : shared_ptr&lt;AllEdges&gt; {query}</text><ellipse cx="1682.5" cy="1548.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="1691.5" y="1552.1479">getEdgeIndexMap() : shared_ptr&lt;EdgeIndexMap&gt; {query}</text><ellipse cx="1682.5" cy="1561.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1691.5" y="1564.9526">createEdgeIndexMap() : void</text><ellipse cx="1682.5" cy="1574.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="672" x="1691.5" y="1577.7573">createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices&amp; vertices, AllEdges&amp; synapses) : void</text><ellipse cx="1682.5" cy="1587.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="1691.5" y="1590.562">loadParameters() : void</text><ellipse cx="1682.5" cy="1600.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="187" x="1691.5" y="1603.3667">printParameters() : void {query}</text><ellipse cx="1682.5" cy="1612.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="469" x="1691.5" y="1616.1714">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void</text><ellipse cx="1682.5" cy="1625.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1267" x="1691.5" y="1628.9761">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1682.5" cy="1638.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1691.5" y="1641.7808">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[07560c205a8067cf69726ad645fec973]
class ConnectionsFactory--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="ConnectionsFactory" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="2094.5" y="1044.5"/><ellipse cx="2251.75" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2254.7188,1066.1406 Q2254.1406,1066.4375 2253.5,1066.5781 Q2252.8594,1066.7344 2252.1563,1066.7344 Q2249.6563,1066.7344 2248.3281,1065.0938 Q2247.0156,1063.4375 2247.0156,1060.3125 Q2247.0156,1057.1875 2248.3281,1055.5313 Q2249.6563,1053.875 2252.1563,1053.875 Q2252.8594,1053.875 2253.5,1054.0313 Q2254.1563,1054.1875 2254.7188,1054.4844 L2254.7188,1057.2031 Q2254.0938,1056.625 2253.5,1056.3594 Q2252.9063,1056.0781 2252.2813,1056.0781 Q2250.9375,1056.0781 2250.25,1057.1563 Q2249.5625,1058.2188 2249.5625,1060.3125 Q2249.5625,1062.4063 2250.25,1063.4844 Q2250.9375,1064.5469 2252.2813,1064.5469 Q2252.9063,1064.5469 2253.5,1064.2813 Q2254.0938,1064 2254.7188,1063.4219 L2254.7188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="2272.25" y="1064.6543">ConnectionsFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2095.5" x2="2540.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2102.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2114.5" y="1090.7104">createFunctions : ConnectionsFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2102.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2114.5" y="1103.5151">connectionsInstance : shared_ptr&lt;Connections&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2095.5" x2="2540.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2102.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2114.5" y="1124.3198">ConnectionsFactory()</text><ellipse cx="2105.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2114.5" y="1137.1245">~ConnectionsFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2102.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="2114.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : Connections*</text><ellipse cx="2105.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="203" x="2114.5" y="1162.7339">getInstance() : ConnectionsFactory*</text><ellipse cx="2105.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2114.5" y="1175.5386">createConnections(const string&amp; className) : shared_ptr&lt;Connections&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2102.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="2114.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[12f7f85e6a82a668bac37f73aa8a25f9]
class DynamicLayout--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="176.0469" id="DynamicLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="6669" y="1984"/><ellipse cx="6807.25" cy="2000" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6810.2188,2005.6406 Q6809.6406,2005.9375 6809,2006.0781 Q6808.3594,2006.2344 6807.6563,2006.2344 Q6805.1563,2006.2344 6803.8281,2004.5938 Q6802.5156,2002.9375 6802.5156,1999.8125 Q6802.5156,1996.6875 6803.8281,1995.0313 Q6805.1563,1993.375 6807.6563,1993.375 Q6808.3594,1993.375 6809,1993.5313 Q6809.6563,1993.6875 6810.2188,1993.9844 L6810.2188,1996.7031 Q6809.5938,1996.125 6809,1995.8594 Q6808.4063,1995.5781 6807.7813,1995.5781 Q6806.4375,1995.5781 6805.75,1996.6563 Q6805.0625,1997.7188 6805.0625,1999.8125 Q6805.0625,2001.9063 6805.75,2002.9844 Q6806.4375,2004.0469 6807.7813,2004.0469 Q6808.4063,2004.0469 6809,2003.7813 Q6809.5938,2003.5 6810.2188,2002.9219 L6810.2188,2005.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="6827.75" y="2004.1543">DynamicLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6670" x2="7046" y1="2016" y2="2016"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6677" y="2024"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="6689" y="2030.2104">fractionEndogenouslyActive_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6677" y="2036.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6689" y="2043.0151">fractionExcitatory_ : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6670" x2="7046" y1="2049.6094" y2="2049.6094"/><ellipse cx="6680" cy="2060.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6689" y="2063.8198">DynamicLayout()</text><ellipse cx="6680" cy="2073.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6689" y="2076.6245">~DynamicLayout()</text><ellipse cx="6680" cy="2086.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="6689" y="2089.4292">Create() : Layout*</text><ellipse cx="6680" cy="2099.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="6689" y="2102.2339">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="6680" cy="2111.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="6689" y="2115.0386">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="6680" cy="2124.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6689" y="2127.8433">initStarterMap(const int numVertices) : void</text><ellipse cx="6680" cy="2137.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6689" y="2140.6479">loadParameters() : void</text><ellipse cx="6680" cy="2150.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6689" y="2153.4526">printParameters() : void {query}</text><!--MD5=[2137c854024e09e8076c84fb007b1c3c]
class EdgesFactory--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="EdgesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="658.5" y="1447"/><ellipse cx="828.25" cy="1463" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M831.2188,1468.6406 Q830.6406,1468.9375 830,1469.0781 Q829.3594,1469.2344 828.6563,1469.2344 Q826.1563,1469.2344 824.8281,1467.5938 Q823.5156,1465.9375 823.5156,1462.8125 Q823.5156,1459.6875 824.8281,1458.0313 Q826.1563,1456.375 828.6563,1456.375 Q829.3594,1456.375 830,1456.5313 Q830.6563,1456.6875 831.2188,1456.9844 L831.2188,1459.7031 Q830.5938,1459.125 830,1458.8594 Q829.4063,1458.5781 828.7813,1458.5781 Q827.4375,1458.5781 826.75,1459.6563 Q826.0625,1460.7188 826.0625,1462.8125 Q826.0625,1464.9063 826.75,1465.9844 Q827.4375,1467.0469 828.7813,1467.0469 Q829.4063,1467.0469 830,1466.7813 Q830.5938,1466.5 831.2188,1465.9219 L831.2188,1468.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="848.75" y="1467.1543">EdgesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="1479" y2="1479"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="678.5" y="1493.2104">createFunctions : EdgesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1499.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="678.5" y="1506.0151">edgesInstance_ : shared_ptr&lt;AllEdges&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="1512.6094" y2="1512.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1520.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="678.5" y="1526.8198">EdgesFactory()</text><ellipse cx="669.5" cy="1536.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="678.5" y="1539.6245">~EdgesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1546.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="678.5" y="1552.4292">invokeCreateFunction(const string&amp; className) : AllEdges*</text><ellipse cx="669.5" cy="1562.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="678.5" y="1565.2339">getInstance() : EdgesFactory*</text><ellipse cx="669.5" cy="1574.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="678.5" y="1578.0386">createEdges(const string&amp; className) : shared_ptr&lt;AllEdges&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1584.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="678.5" y="1590.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[05f17831147ee39527b2431b4d22ccc3]
class EventBuffer--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="214.4609" id="EventBuffer" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="5366" y="3006.5"/><ellipse cx="5458.75" cy="3022.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5461.7188,3028.1406 Q5461.1406,3028.4375 5460.5,3028.5781 Q5459.8594,3028.7344 5459.1563,3028.7344 Q5456.6563,3028.7344 5455.3281,3027.0938 Q5454.0156,3025.4375 5454.0156,3022.3125 Q5454.0156,3019.1875 5455.3281,3017.5313 Q5456.6563,3015.875 5459.1563,3015.875 Q5459.8594,3015.875 5460.5,3016.0313 Q5461.1563,3016.1875 5461.7188,3016.4844 L5461.7188,3019.2031 Q5461.0938,3018.625 5460.5,3018.3594 Q5459.9063,3018.0781 5459.2813,3018.0781 Q5457.9375,3018.0781 5457.25,3019.1563 Q5456.5625,3020.2188 5456.5625,3022.3125 Q5456.5625,3024.4063 5457.25,3025.4844 Q5457.9375,3026.5469 5459.2813,3026.5469 Q5459.9063,3026.5469 5460.5,3026.2813 Q5461.0938,3026 5461.7188,3025.4219 L5461.7188,3028.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="5479.25" y="3026.6543">EventBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5367" x2="5631" y1="3038.5" y2="3038.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5374" y="3046.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5386" y="3052.7104">epochStart_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5374" y="3059.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5386" y="3065.5151">numEventsInEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5374" y="3072.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="5386" y="3078.3198">queueEnd_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5374" y="3084.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5386" y="3091.1245">queueFront_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5374" y="3097.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5386" y="3103.9292">eventTimeSteps_ : vector&lt;uint64_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5367" x2="5631" y1="3110.5234" y2="3110.5234"/><ellipse cx="5377" cy="3121.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5386" y="3124.7339">EventBuffer(int maxEvents)</text><ellipse cx="5377" cy="3134.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5386" y="3137.5386">getNumEventsInEpoch() : int {query}</text><ellipse cx="5377" cy="3147.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="5386" y="3150.3433">getPastEvent(int offset) : uint64_t {query}</text><ellipse cx="5377" cy="3159.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5386" y="3163.1479">operator[](int i) : uint64_t {query}</text><ellipse cx="5377" cy="3172.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5386" y="3175.9526">clear() : void</text><ellipse cx="5377" cy="3185.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5386" y="3188.7573">insertEvent(uint64_t timeStep) : void</text><ellipse cx="5377" cy="3198.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5386" y="3201.562">resize(int maxEvents) : void</text><ellipse cx="5377" cy="3211.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5386" y="3214.3667">startNewEpoch() : void</text><!--MD5=[c01d281453c5d4cdc24a7f27a30cb7c5]
class FixedLayout--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="FixedLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="6256" y="1997"/><ellipse cx="6404.25" cy="2013" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6407.2188,2018.6406 Q6406.6406,2018.9375 6406,2019.0781 Q6405.3594,2019.2344 6404.6563,2019.2344 Q6402.1563,2019.2344 6400.8281,2017.5938 Q6399.5156,2015.9375 6399.5156,2012.8125 Q6399.5156,2009.6875 6400.8281,2008.0313 Q6402.1563,2006.375 6404.6563,2006.375 Q6405.3594,2006.375 6406,2006.5313 Q6406.6563,2006.6875 6407.2188,2006.9844 L6407.2188,2009.7031 Q6406.5938,2009.125 6406,2008.8594 Q6405.4063,2008.5781 6404.7813,2008.5781 Q6403.4375,2008.5781 6402.75,2009.6563 Q6402.0625,2010.7188 6402.0625,2012.8125 Q6402.0625,2014.9063 6402.75,2015.9844 Q6403.4375,2017.0469 6404.7813,2017.0469 Q6405.4063,2017.0469 6406,2016.7813 Q6406.5938,2016.5 6407.2188,2015.9219 L6407.2188,2018.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="6424.75" y="2017.1543">FixedLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6257" x2="6633" y1="2029" y2="2029"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6257" x2="6633" y1="2037" y2="2037"/><ellipse cx="6267" cy="2048" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6276" y="2051.2104">FixedLayout()</text><ellipse cx="6267" cy="2060.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="6276" y="2064.0151">~FixedLayout()</text><ellipse cx="6267" cy="2073.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="6276" y="2076.8198">Create() : Layout*</text><ellipse cx="6267" cy="2086.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="6276" y="2089.6245">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="6267" cy="2099.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="6276" y="2102.4292">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="6267" cy="2112.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6276" y="2115.2339">initStarterMap(const int numVertices) : void</text><ellipse cx="6267" cy="2124.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6276" y="2128.0386">loadParameters() : void</text><ellipse cx="6267" cy="2137.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6276" y="2140.8433">printParameters() : void {query}</text><!--MD5=[124ec3daa98f7d6a805c6f5a48dde9c7]
class GPUModel--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="342.5078" id="GPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="1017" x="2999.5" y="1350.5"/><ellipse cx="3472.25" cy="1366.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3475.2188,1372.1406 Q3474.6406,1372.4375 3474,1372.5781 Q3473.3594,1372.7344 3472.6563,1372.7344 Q3470.1563,1372.7344 3468.8281,1371.0938 Q3467.5156,1369.4375 3467.5156,1366.3125 Q3467.5156,1363.1875 3468.8281,1361.5313 Q3470.1563,1359.875 3472.6563,1359.875 Q3473.3594,1359.875 3474,1360.0313 Q3474.6563,1360.1875 3475.2188,1360.4844 L3475.2188,1363.2031 Q3474.5938,1362.625 3474,1362.3594 Q3473.4063,1362.0781 3472.7813,1362.0781 Q3471.4375,1362.0781 3470.75,1363.1563 Q3470.0625,1364.2188 3470.0625,1366.3125 Q3470.0625,1368.4063 3470.75,1369.4844 Q3471.4375,1370.5469 3472.7813,1370.5469 Q3473.4063,1370.5469 3474,1370.2813 Q3474.5938,1370 3475.2188,1369.4219 L3475.2188,1372.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="3492.75" y="1370.6543">GPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3000.5" x2="4015.5" y1="1382.5" y2="1382.5"/><polygon fill="none" points="3010.5,1388.5,3014.5,1392.5,3010.5,1396.5,3006.5,1392.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="3019.5" y="1396.7104">allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*</text><polygon fill="none" points="3010.5,1401.3047,3014.5,1405.3047,3010.5,1409.3047,3006.5,1405.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="3019.5" y="1409.5151">allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*</text><polygon fill="none" points="3010.5,1414.1094,3014.5,1418.1094,3010.5,1422.1094,3006.5,1418.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="3019.5" y="1422.3198">synapseIndexMapDevice_ : EdgeIndexMap*</text><polygon fill="none" points="3010.5,1426.9141,3014.5,1430.9141,3010.5,1434.9141,3006.5,1430.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="3019.5" y="1435.1245">randNoise_d : float*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3000.5" x2="4015.5" y1="1441.7188" y2="1441.7188"/><ellipse cx="3010.5" cy="1452.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3019.5" y="1455.9292">GPUModel()</text><ellipse cx="3010.5" cy="1465.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3019.5" y="1468.7339">~GPUModel()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1475.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="991" x="3019.5" y="1481.5386">addEdge(AllEdges&amp; synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate&amp; source, Coordinate&amp; dest, BGFLOAT deltaT) : void</text><ellipse cx="3010.5" cy="1491.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3019.5" y="1494.3433">advance() : void</text><polygon fill="#FFFF44" points="3010.5,1498.9375,3014.5,1502.9375,3010.5,1506.9375,3006.5,1502.9375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3019.5" y="1507.1479">allocDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="3147.5" y="1507.1479">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3297.5" y="1507.1479">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1513.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3019.5" y="1519.9526">allocSynapseImap(int count) : void</text><polygon fill="#FFFF44" points="3010.5,1524.5469,3014.5,1528.5469,3010.5,1532.5469,3006.5,1528.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3019.5" y="1532.7573">calcSummationMap() : void</text><ellipse cx="3010.5" cy="1542.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3019.5" y="1545.562">copyCPUtoGPU() : void</text><ellipse cx="3010.5" cy="1555.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3019.5" y="1558.3667">copyGPUtoCPU() : void</text><ellipse cx="3010.5" cy="1567.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="3019.5" y="1571.1714">copySynapseIndexMapHostToDevice(EdgeIndexMap&amp; synapseIndexMapHost, int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1577.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="980" x="3019.5" y="1583.9761">createEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="3010.5,1588.5703,3014.5,1592.5703,3010.5,1596.5703,3006.5,1592.5703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3019.5" y="1596.7808">deleteDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="3156.5" y="1596.7808">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3306.5" y="1596.7808">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1603.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3019.5" y="1609.5854">deleteSynapseImap() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1616.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="3019.5" y="1622.3901">eraseEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex) : void</text><ellipse cx="3010.5" cy="1631.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3019.5" y="1635.1948">finish() : void</text><ellipse cx="3010.5" cy="1644.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3019.5" y="1647.9995">printGPUSynapsesPropsModel() : void {query}</text><ellipse cx="3010.5" cy="1657.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3019.5" y="1660.8042">setupSim() : void</text><ellipse cx="3010.5" cy="1670.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3019.5" y="1673.6089">updateConnections() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3007.5" y="1680.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3019.5" y="1686.4136">updateHistory() : void</text><!--MD5=[dd9a31495c85b5dc63c13c8cf57db1f9]
class GenericFunctionNode--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="99.2188" id="GenericFunctionNode" style="stroke: #A80036; stroke-width: 1.5;" width="599" x="6567.5" y="1472.5"/><ellipse cx="6795.25" cy="1488.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6798.2188,1494.1406 Q6797.6406,1494.4375 6797,1494.5781 Q6796.3594,1494.7344 6795.6563,1494.7344 Q6793.1563,1494.7344 6791.8281,1493.0938 Q6790.5156,1491.4375 6790.5156,1488.3125 Q6790.5156,1485.1875 6791.8281,1483.5313 Q6793.1563,1481.875 6795.6563,1481.875 Q6796.3594,1481.875 6797,1482.0313 Q6797.6563,1482.1875 6798.2188,1482.4844 L6798.2188,1485.2031 Q6797.5938,1484.625 6797,1484.3594 Q6796.4063,1484.0781 6795.7813,1484.0781 Q6794.4375,1484.0781 6793.75,1485.1563 Q6793.0625,1486.2188 6793.0625,1488.3125 Q6793.0625,1490.4063 6793.75,1491.4844 Q6794.4375,1492.5469 6795.7813,1492.5469 Q6796.4063,1492.5469 6797,1492.2813 Q6797.5938,1492 6798.2188,1491.4219 L6798.2188,1494.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="6815.75" y="1492.6543">GenericFunctionNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6568.5" x2="7165.5" y1="1504.5" y2="1504.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6568.5" x2="7165.5" y1="1512.5" y2="1512.5"/><ellipse cx="6578.5" cy="1523.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="573" x="6587.5" y="1526.7104">GenericFunctionNode(const Operations::op&amp; operationType, const std::function&lt;void ( )&gt;&amp; function)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6575.5" y="1533.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6587.5" y="1539.5151">function&lt;void()</text><ellipse cx="6578.5" cy="1549.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6587.5" y="1552.3198">~GenericFunctionNode()</text><ellipse cx="6578.5" cy="1561.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="6587.5" y="1565.1245">invokeFunction(const Operations::op&amp; operation) : bool {query}</text><!--MD5=[af68557a962a5f1f7548a7e590f8fd62]
class Hdf5GrowthRecorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="240.0703" id="Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="5153" y="2444"/><ellipse cx="5225.75" cy="2460" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5228.7188,2465.6406 Q5228.1406,2465.9375 5227.5,2466.0781 Q5226.8594,2466.2344 5226.1563,2466.2344 Q5223.6563,2466.2344 5222.3281,2464.5938 Q5221.0156,2462.9375 5221.0156,2459.8125 Q5221.0156,2456.6875 5222.3281,2455.0313 Q5223.6563,2453.375 5226.1563,2453.375 Q5226.8594,2453.375 5227.5,2453.5313 Q5228.1563,2453.6875 5228.7188,2453.9844 L5228.7188,2456.7031 Q5228.0938,2456.125 5227.5,2455.8594 Q5226.9063,2455.5781 5226.2813,2455.5781 Q5224.9375,2455.5781 5224.25,2456.6563 Q5223.5625,2457.7188 5223.5625,2459.8125 Q5223.5625,2461.9063 5224.25,2462.9844 Q5224.9375,2464.0469 5226.2813,2464.0469 Q5226.9063,2464.0469 5227.5,2463.7813 Q5228.0938,2463.5 5228.7188,2462.9219 L5228.7188,2465.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="5246.25" y="2464.1543">Hdf5GrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5154" x2="5436" y1="2476" y2="2476"/><polygon fill="none" points="5164,2482,5168,2486,5164,2490,5160,2486" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5173" y="2490.2104">radiiHistory_ : BGFLOAT*</text><polygon fill="none" points="5164,2494.8047,5168,2498.8047,5164,2502.8047,5160,2498.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5173" y="2503.0151">ratesHistory_ : BGFLOAT*</text><polygon fill="none" points="5164,2507.6094,5168,2511.6094,5164,2515.6094,5160,2511.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5173" y="2515.8198">dataSetRadiiHist_ : DataSet</text><polygon fill="none" points="5164,2520.4141,5168,2524.4141,5164,2528.4141,5160,2524.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="5173" y="2528.6245">dataSetRatesHist_ : DataSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5154" x2="5436" y1="2535.2188" y2="2535.2188"/><ellipse cx="5164" cy="2546.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5173" y="2549.4292">Hdf5GrowthRecorder()</text><ellipse cx="5164" cy="2559.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="5173" y="2562.2339">~Hdf5GrowthRecorder()</text><ellipse cx="5164" cy="2571.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="5173" y="2575.0386">Create() : IRecorder*</text><ellipse cx="5164" cy="2584.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="5173" y="2587.8433">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="5164" cy="2597.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5173" y="2600.6479">getValues() : void</text><polygon fill="#FFFF44" points="5164,2605.2422,5168,2609.2422,5164,2613.2422,5160,2609.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5173" y="2613.4526">initDataSet() : void</text><ellipse cx="5164" cy="2623.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5173" y="2626.2573">initDefaultValues() : void</text><ellipse cx="5164" cy="2635.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5173" y="2639.062">initValues() : void</text><ellipse cx="5164" cy="2648.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5173" y="2651.8667">printParameters() : void</text><ellipse cx="5164" cy="2661.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5173" y="2664.6714">term() : void</text><polygon fill="#FFFF44" points="5164,2669.2656,5168,2673.2656,5164,2677.2656,5160,2673.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5173" y="2677.4761">writeRadiiRates() : void</text><!--MD5=[2f81b0e77ba864956fe3cef8330f890e]
class Hdf5Recorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="380.9219" id="Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="4879.5" y="1881.5"/><ellipse cx="5062.75" cy="1897.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5065.7188,1903.1406 Q5065.1406,1903.4375 5064.5,1903.5781 Q5063.8594,1903.7344 5063.1563,1903.7344 Q5060.6563,1903.7344 5059.3281,1902.0938 Q5058.0156,1900.4375 5058.0156,1897.3125 Q5058.0156,1894.1875 5059.3281,1892.5313 Q5060.6563,1890.875 5063.1563,1890.875 Q5063.8594,1890.875 5064.5,1891.0313 Q5065.1563,1891.1875 5065.7188,1891.4844 L5065.7188,1894.2031 Q5065.0938,1893.625 5064.5,1893.3594 Q5063.9063,1893.0781 5063.2813,1893.0781 Q5061.9375,1893.0781 5061.25,1894.1563 Q5060.5625,1895.2188 5060.5625,1897.3125 Q5060.5625,1899.4063 5061.25,1900.4844 Q5061.9375,1901.5469 5063.2813,1901.5469 Q5063.9063,1901.5469 5064.5,1901.2813 Q5065.0938,1901 5065.7188,1900.4219 L5065.7188,1903.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="5083.25" y="1901.6543">Hdf5Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4880.5" x2="5339.5" y1="1913.5" y2="1913.5"/><polygon fill="none" points="4890.5,1919.5,4894.5,1923.5,4890.5,1927.5,4886.5,1923.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4899.5" y="1927.7104">dataSetNeuronThresh_ : DataSet*</text><polygon fill="none" points="4890.5,1932.3047,4894.5,1936.3047,4890.5,1940.3047,4886.5,1936.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4899.5" y="1940.5151">dataSetNeuronTypes_ : DataSet*</text><polygon fill="none" points="4890.5,1945.1094,4894.5,1949.1094,4890.5,1953.1094,4886.5,1949.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4899.5" y="1953.3198">dataSetProbedNeurons_ : DataSet*</text><polygon fill="none" points="4890.5,1957.9141,4894.5,1961.9141,4890.5,1965.9141,4886.5,1961.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4899.5" y="1966.1245">dataSetSimulationEndTime_ : DataSet*</text><polygon fill="none" points="4890.5,1970.7188,4894.5,1974.7188,4890.5,1978.7188,4886.5,1974.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4899.5" y="1978.9292">dataSetSpikesHist_ : DataSet*</text><polygon fill="none" points="4890.5,1983.5234,4894.5,1987.5234,4890.5,1991.5234,4886.5,1987.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4899.5" y="1991.7339">dataSetSpikesProbedNeurons_ : DataSet*</text><polygon fill="none" points="4890.5,1996.3281,4894.5,2000.3281,4890.5,2004.3281,4886.5,2000.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4899.5" y="2004.5386">dataSetStarterNeurons_ : DataSet*</text><polygon fill="none" points="4890.5,2009.1328,4894.5,2013.1328,4890.5,2017.1328,4886.5,2013.1328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4899.5" y="2017.3433">dataSetTsim_ : DataSet*</text><polygon fill="none" points="4890.5,2021.9375,4894.5,2025.9375,4890.5,2029.9375,4886.5,2025.9375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4899.5" y="2030.1479">dataSetXloc_ : DataSet*</text><polygon fill="none" points="4890.5,2034.7422,4894.5,2038.7422,4890.5,2042.7422,4886.5,2038.7422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4899.5" y="2042.9526">dataSetYloc_ : DataSet*</text><polygon fill="none" points="4890.5,2047.5469,4894.5,2051.5469,4890.5,2055.5469,4886.5,2051.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4899.5" y="2055.7573">resultOut_ : H5File*</text><polygon fill="none" points="4890.5,2060.3516,4894.5,2064.3516,4890.5,2068.3516,4886.5,2064.3516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4899.5" y="2068.562">offsetSpikesProbedNeurons_ : hsize_t*</text><polygon fill="none" points="4890.5,2073.1563,4894.5,2077.1563,4890.5,2081.1563,4886.5,2077.1563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4899.5" y="2081.3667">spikesHistory_ : int*</text><polygon fill="none" points="4890.5,2085.9609,4894.5,2089.9609,4890.5,2093.9609,4886.5,2089.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4899.5" y="2094.1714">spikesProbedNeurons_ : vector&lt;uint64_t&gt;*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4880.5" x2="5339.5" y1="2100.7656" y2="2100.7656"/><ellipse cx="4890.5" cy="2111.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4899.5" y="2114.9761">Hdf5Recorder()</text><ellipse cx="4890.5" cy="2124.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="4899.5" y="2127.7808">Create() : IRecorder*</text><ellipse cx="4890.5" cy="2137.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4899.5" y="2140.5854">compileHistories(AllVertices&amp; neurons) : void</text><polygon fill="#FFFF44" points="4890.5,2145.1797,4894.5,2149.1797,4890.5,2153.1797,4886.5,2149.1797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="4899.5" y="2153.3901">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4890.5" cy="2162.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4899.5" y="2166.1948">getValues() : void</text><ellipse cx="4890.5" cy="2175.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4899.5" y="2178.9995">init() : void</text><polygon fill="#FFFF44" points="4890.5,2183.5938,4894.5,2187.5938,4890.5,2191.5938,4886.5,2187.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4899.5" y="2191.8042">initDataSet() : void</text><ellipse cx="4890.5" cy="2201.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4899.5" y="2204.6089">initDefaultValues() : void</text><ellipse cx="4890.5" cy="2214.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4899.5" y="2217.4136">initValues() : void</text><ellipse cx="4890.5" cy="2227.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4899.5" y="2230.2183">printParameters() : void</text><ellipse cx="4890.5" cy="2239.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4899.5" y="2243.0229">saveSimData(const AllVertices&amp; neurons) : void</text><ellipse cx="4890.5" cy="2252.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4899.5" y="2255.8276">term() : void</text><!--MD5=[99788c5c01261f19cd519066f428e9b5]
class IFunctionNode--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="86.4141" id="IFunctionNode" style="stroke: #A80036; stroke-width: 1.5;" width="390" x="7057" y="1076.5"/><ellipse cx="7202.25" cy="1092.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7202.3594,1087.8438 L7201.2031,1092.9219 L7203.5313,1092.9219 L7202.3594,1087.8438 Z M7200.875,1085.6094 L7203.8594,1085.6094 L7207.2188,1098 L7204.7656,1098 L7204,1094.9375 L7200.7188,1094.9375 L7199.9688,1098 L7197.5313,1098 L7200.875,1085.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="7222.75" y="1096.6543">IFunctionNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7058" x2="7446" y1="1108.5" y2="1108.5"/><polygon fill="none" points="7068,1114.5,7072,1118.5,7068,1122.5,7064,1118.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="7077" y="1122.7104">operationType_ : Operations::op</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7058" x2="7446" y1="1129.3047" y2="1129.3047"/><ellipse cx="7068" cy="1140.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="7077" y="1143.5151">~IFunctionNode()</text><ellipse cx="7068" cy="1153.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="7077" y="1156.3198">invokeFunction(const Operations::op&amp; operation) : bool {query}</text><!--MD5=[a2efe13f97b9395dfb70e2255bd52698]
class IRecorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="201.6563" id="IRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="462" x="4740" y="1421"/><ellipse cx="4936.25" cy="1437" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4936.3594,1432.3438 L4935.2031,1437.4219 L4937.5313,1437.4219 L4936.3594,1432.3438 Z M4934.875,1430.1094 L4937.8594,1430.1094 L4941.2188,1442.5 L4938.7656,1442.5 L4938,1439.4375 L4934.7188,1439.4375 L4933.9688,1442.5 L4931.5313,1442.5 L4934.875,1430.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="4956.75" y="1441.1543">IRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4741" x2="5201" y1="1453" y2="1453"/><polygon fill="none" points="4751,1459,4755,1463,4751,1467,4747,1463" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4760" y="1467.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="4751,1471.8047,4755,1475.8047,4751,1479.8047,4747,1475.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4760" y="1480.0151">resultFileName_ : string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4741" x2="5201" y1="1486.6094" y2="1486.6094"/><ellipse cx="4751" cy="1497.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4760" y="1500.8198">~IRecorder()</text><ellipse cx="4751" cy="1510.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="4760" y="1513.6245">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="4751,1518.2188,4755,1522.2188,4751,1526.2188,4747,1522.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="4760" y="1526.4292">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4751" cy="1536.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="4760" y="1539.2339">getValues() : void</text><ellipse cx="4751" cy="1548.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="4760" y="1552.0386">init() : void</text><ellipse cx="4751" cy="1561.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="4760" y="1564.8433">initDefaultValues() : void</text><ellipse cx="4751" cy="1574.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="4760" y="1577.6479">initValues() : void</text><ellipse cx="4751" cy="1587.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="4760" y="1590.4526">printParameters() : void</text><ellipse cx="4751" cy="1600.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="270" x="4760" y="1603.2573">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="4751" cy="1612.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="4760" y="1616.062">term() : void</text><!--MD5=[caebf2ddd0fe15aa1cd7c0f919e7d6a1]
class Layout--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="393.7266" id="Layout" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="6152" y="1325"/><ellipse cx="6316.25" cy="1341" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6316.3594,1336.3438 L6315.2031,1341.4219 L6317.5313,1341.4219 L6316.3594,1336.3438 Z M6314.875,1334.1094 L6317.8594,1334.1094 L6321.2188,1346.5 L6318.7656,1346.5 L6318,1343.4375 L6314.7188,1343.4375 L6313.9688,1346.5 L6311.5313,1346.5 L6314.875,1334.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="6336.75" y="1345.1543">Layout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6153" x2="6531" y1="1357" y2="1357"/><ellipse cx="6163" cy="1368" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="6172" y="1371.2104">numCallerVertices_ : BGSIZE</text><ellipse cx="6163" cy="1380.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6172" y="1384.0151">numEndogenouslyActiveNeurons_ : BGSIZE</text><ellipse cx="6163" cy="1393.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="6172" y="1396.8198">dist2_ : CompleteMatrix*</text><ellipse cx="6163" cy="1406.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6172" y="1409.6245">dist_ : CompleteMatrix*</text><ellipse cx="6163" cy="1419.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="6172" y="1422.4292">xloc_ : VectorMatrix*</text><ellipse cx="6163" cy="1432.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="6172" y="1435.2339">yloc_ : VectorMatrix*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6160" y="1441.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6172" y="1448.0386">gridLayout_ : bool</text><ellipse cx="6163" cy="1457.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6172" y="1460.8433">starterMap_ : bool*</text><polygon fill="none" points="6163,1465.4375,6167,1469.4375,6163,1473.4375,6159,1469.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="6172" y="1473.6479">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="6163,1478.2422,6167,1482.2422,6163,1486.2422,6159,1482.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="6172" y="1486.4526">vertices_ : shared_ptr&lt;AllVertices&gt;</text><polygon fill="none" points="6163,1491.0469,6167,1495.0469,6163,1499.0469,6159,1495.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="6172" y="1499.2573">callerVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="6163,1503.8516,6167,1507.8516,6163,1511.8516,6159,1507.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="6172" y="1512.062">endogenouslyActiveNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="6163,1516.6563,6167,1520.6563,6163,1524.6563,6159,1520.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6172" y="1524.8667">inhibitoryNeuronLayout_ : vector&lt;int&gt;</text><ellipse cx="6163" cy="1534.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6172" y="1537.6714">probedNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="6163,1542.2656,6167,1546.2656,6163,1550.2656,6159,1546.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6172" y="1550.4761">psapVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="6163,1555.0703,6167,1559.0703,6163,1563.0703,6159,1559.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6172" y="1563.2808">responderVertexList_ : vector&lt;int&gt;</text><ellipse cx="6163" cy="1572.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6172" y="1576.0854">vertexTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6153" x2="6531" y1="1582.6797" y2="1582.6797"/><ellipse cx="6163" cy="1593.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="6172" y="1596.8901">Layout()</text><ellipse cx="6163" cy="1606.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="6172" y="1609.6948">~Layout()</text><ellipse cx="6163" cy="1619.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="6172" y="1622.4995">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="6163" cy="1632.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="6172" y="1635.3042">getVertices() : shared_ptr&lt;AllVertices&gt; {query}</text><ellipse cx="6163" cy="1644.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="6172" y="1648.1089">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="6163" cy="1657.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6172" y="1660.9136">initStarterMap(const int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6160" y="1667.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="6172" y="1673.7183">initVerticesLocs() : void</text><ellipse cx="6163" cy="1683.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="6172" y="1686.5229">loadParameters() : void</text><ellipse cx="6163" cy="1696.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6172" y="1699.3276">printParameters() : void {query}</text><ellipse cx="6163" cy="1708.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="6172" y="1712.1323">setupLayout() : void</text><!--MD5=[e2bec1e8f5041d1015728825611f3c9f]
class LayoutFactory--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="LayoutFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="6125.5" y="1044.5"/><ellipse cx="6294.25" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6297.2188,1066.1406 Q6296.6406,1066.4375 6296,1066.5781 Q6295.3594,1066.7344 6294.6563,1066.7344 Q6292.1563,1066.7344 6290.8281,1065.0938 Q6289.5156,1063.4375 6289.5156,1060.3125 Q6289.5156,1057.1875 6290.8281,1055.5313 Q6292.1563,1053.875 6294.6563,1053.875 Q6295.3594,1053.875 6296,1054.0313 Q6296.6563,1054.1875 6297.2188,1054.4844 L6297.2188,1057.2031 Q6296.5938,1056.625 6296,1056.3594 Q6295.4063,1056.0781 6294.7813,1056.0781 Q6293.4375,1056.0781 6292.75,1057.1563 Q6292.0625,1058.2188 6292.0625,1060.3125 Q6292.0625,1062.4063 6292.75,1063.4844 Q6293.4375,1064.5469 6294.7813,1064.5469 Q6295.4063,1064.5469 6296,1064.2813 Q6296.5938,1064 6297.2188,1063.4219 L6297.2188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="6314.75" y="1064.6543">LayoutFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6126.5" x2="6557.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6133.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6145.5" y="1090.7104">createFunctions : LayoutFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6133.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="6145.5" y="1103.5151">layoutInstance : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6126.5" x2="6557.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6133.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6145.5" y="1124.3198">LayoutFactory()</text><ellipse cx="6136.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="6145.5" y="1137.1245">~LayoutFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6133.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="6145.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : Layout*</text><ellipse cx="6136.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="6145.5" y="1162.7339">getInstance() : LayoutFactory*</text><ellipse cx="6136.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6145.5" y="1175.5386">createLayout(const string&amp; className) : shared_ptr&lt;Layout&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6133.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="6145.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[7e20e022571e30ec1001cf6eabd7f3e2]
class Model--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="291.2891" id="Model" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="4212" y="974"/><ellipse cx="4356.25" cy="990" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4356.3594,985.3438 L4355.2031,990.4219 L4357.5313,990.4219 L4356.3594,985.3438 Z M4354.875,983.1094 L4357.8594,983.1094 L4361.2188,995.5 L4358.7656,995.5 L4358,992.4375 L4354.7188,992.4375 L4353.9688,995.5 L4351.5313,995.5 L4354.875,983.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="4376.75" y="994.1543">Model</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4213" x2="4545" y1="1006" y2="1006"/><polygon fill="none" points="4223,1012,4227,1016,4223,1020,4219,1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4232" y="1020.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="4223,1024.8047,4227,1028.8047,4223,1032.8047,4219,1028.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4232" y="1033.0151">connections_ : shared_ptr&lt;Connections&gt;</text><polygon fill="none" points="4223,1037.6094,4227,1041.6094,4223,1045.6094,4219,1041.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4232" y="1045.8198">recorder_ : shared_ptr&lt;IRecorder&gt;</text><polygon fill="none" points="4223,1050.4141,4227,1054.4141,4223,1058.4141,4219,1054.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4232" y="1058.6245">layout_ : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4213" x2="4545" y1="1065.2188" y2="1065.2188"/><ellipse cx="4223" cy="1076.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4232" y="1079.4292">Model()</text><ellipse cx="4223" cy="1089.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="4232" y="1092.2339">~Model()</text><ellipse cx="4223" cy="1101.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="4232" y="1105.0386">getConnections() : shared_ptr&lt;Connections&gt; {query}</text><ellipse cx="4223" cy="1114.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4232" y="1117.8433">getRecorder() : shared_ptr&lt;IRecorder&gt; {query}</text><ellipse cx="4223" cy="1127.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4232" y="1130.6479">getLayout() : shared_ptr&lt;Layout&gt; {query}</text><ellipse cx="4223" cy="1140.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="4232" y="1143.4526">advance() : void</text><polygon fill="#FFFF44" points="4223,1148.0469,4227,1152.0469,4223,1156.0469,4219,1152.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="4232" y="1156.2573">copyCPUtoGPU() : void</text><polygon fill="#FFFF44" points="4223,1160.8516,4227,1164.8516,4223,1168.8516,4219,1164.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="4232" y="1169.062">copyGPUtoCPU() : void</text><polygon fill="#FFFF44" points="4223,1173.6563,4227,1177.6563,4223,1181.6563,4219,1177.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4232" y="1181.8667">createAllVertices() : void</text><ellipse cx="4223" cy="1191.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="4232" y="1194.6714">finish() : void</text><polygon fill="#FFFF44" points="4223,1199.2656,4227,1203.2656,4223,1207.2656,4219,1203.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4232" y="1207.4761">logSimStep() : void {query}</text><ellipse cx="4223" cy="1217.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4232" y="1220.2808">saveResults() : void</text><ellipse cx="4223" cy="1229.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4232" y="1233.0854">setupSim() : void</text><ellipse cx="4223" cy="1242.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="4232" y="1245.8901">updateConnections() : void</text><ellipse cx="4223" cy="1255.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4232" y="1258.6948">updateHistory() : void</text><!--MD5=[314e3b7c2db0a5a356d5ece57f37d58b]
class OperationManager--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="OperationManager" style="stroke: #A80036; stroke-width: 1.5;" width="562" x="6971" y="386"/><ellipse cx="7189.25" cy="402" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7192.2188,407.6406 Q7191.6406,407.9375 7191,408.0781 Q7190.3594,408.2344 7189.6563,408.2344 Q7187.1563,408.2344 7185.8281,406.5938 Q7184.5156,404.9375 7184.5156,401.8125 Q7184.5156,398.6875 7185.8281,397.0313 Q7187.1563,395.375 7189.6563,395.375 Q7190.3594,395.375 7191,395.5313 Q7191.6563,395.6875 7192.2188,395.9844 L7192.2188,398.7031 Q7191.5938,398.125 7191,397.8594 Q7190.4063,397.5781 7189.7813,397.5781 Q7188.4375,397.5781 7187.75,398.6563 Q7187.0625,399.7188 7187.0625,401.8125 Q7187.0625,403.9063 7187.75,404.9844 Q7188.4375,406.0469 7189.7813,406.0469 Q7190.4063,406.0469 7191,405.7813 Q7191.5938,405.5 7192.2188,404.9219 L7192.2188,407.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="7209.75" y="406.1543">OperationManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6972" x2="7532" y1="418" y2="418"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6979" y="426"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="6991" y="432.2104">functionList_ : list&lt;unique_ptr&lt;IFunctionNode&gt;&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6979" y="438.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6991" y="445.0151">logger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6972" x2="7532" y1="451.6094" y2="451.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6979" y="459.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6991" y="465.8198">OperationManager()</text><ellipse cx="6982" cy="475.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6991" y="478.6245">~OperationManager()</text><ellipse cx="6982" cy="488.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="6991" y="491.4292">getInstance() : OperationManager&amp;</text><ellipse cx="6982" cy="501.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="6991" y="504.2339">operationToString(const Operations::op&amp; operation) : string {query}</text><ellipse cx="6982" cy="513.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="6991" y="517.0386">executeOperation(const Operations::op&amp; operation) : void {query}</text><ellipse cx="6982" cy="526.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="536" x="6991" y="529.8433">registerOperation(const Operations::op&amp; operation, const function&lt;void ( )&gt;&amp; function) : void</text><!--MD5=[fdf81c1c7218c7a86b85d500a2db5e87]
class Operations--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="48" id="Operations" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="7201.5" y="1498"/><ellipse cx="7216.5" cy="1514" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7219.4688,1519.6406 Q7218.8906,1519.9375 7218.25,1520.0781 Q7217.6094,1520.2344 7216.9063,1520.2344 Q7214.4063,1520.2344 7213.0781,1518.5938 Q7211.7656,1516.9375 7211.7656,1513.8125 Q7211.7656,1510.6875 7213.0781,1509.0313 Q7214.4063,1507.375 7216.9063,1507.375 Q7217.6094,1507.375 7218.25,1507.5313 Q7218.9063,1507.6875 7219.4688,1507.9844 L7219.4688,1510.7031 Q7218.8438,1510.125 7218.25,1509.8594 Q7217.6563,1509.5781 7217.0313,1509.5781 Q7215.6875,1509.5781 7215,1510.6563 Q7214.3125,1511.7188 7214.3125,1513.8125 Q7214.3125,1515.9063 7215,1516.9844 Q7215.6875,1518.0469 7217.0313,1518.0469 Q7217.6563,1518.0469 7218.25,1517.7813 Q7218.8438,1517.5 7219.4688,1516.9219 L7219.4688,1519.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="7230.5" y="1518.1543">Operations</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7202.5" x2="7301.5" y1="1530" y2="1530"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7202.5" x2="7301.5" y1="1538" y2="1538"/><!--MD5=[2d167d26ebdee84d71997832bfe86c3e]
class RecorderFactory--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="RecorderFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="4754.5" y="1044.5"/><ellipse cx="4915.25" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4918.2188,1066.1406 Q4917.6406,1066.4375 4917,1066.5781 Q4916.3594,1066.7344 4915.6563,1066.7344 Q4913.1563,1066.7344 4911.8281,1065.0938 Q4910.5156,1063.4375 4910.5156,1060.3125 Q4910.5156,1057.1875 4911.8281,1055.5313 Q4913.1563,1053.875 4915.6563,1053.875 Q4916.3594,1053.875 4917,1054.0313 Q4917.6563,1054.1875 4918.2188,1054.4844 L4918.2188,1057.2031 Q4917.5938,1056.625 4917,1056.3594 Q4916.4063,1056.0781 4915.7813,1056.0781 Q4914.4375,1056.0781 4913.75,1057.1563 Q4913.0625,1058.2188 4913.0625,1060.3125 Q4913.0625,1062.4063 4913.75,1063.4844 Q4914.4375,1064.5469 4915.7813,1064.5469 Q4916.4063,1064.5469 4917,1064.2813 Q4917.5938,1064 4918.2188,1063.4219 L4918.2188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="4935.75" y="1064.6543">RecorderFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4755.5" x2="5186.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4762.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4774.5" y="1090.7104">createFunctions : RecorderFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4762.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="4774.5" y="1103.5151">recorderInstance : shared_ptr&lt;IRecorder&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4755.5" x2="5186.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4762.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4774.5" y="1124.3198">RecorderFactory()</text><ellipse cx="4765.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4774.5" y="1137.1245">~RecorderFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4762.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="4774.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : IRecorder*</text><ellipse cx="4765.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="4774.5" y="1162.7339">getInstance() : RecorderFactory*</text><ellipse cx="4765.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="4774.5" y="1175.5386">createRecorder(const string&amp; className) : shared_ptr&lt;IRecorder&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4762.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="4774.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[e78d3bd29d68b8fbdb4aae8710e3db25]
class Simulator--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="905.9141" id="Simulator" style="stroke: #A80036; stroke-width: 1.5;" width="354" x="4202" y="8"/><ellipse cx="4345.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4348.2188,29.6406 Q4347.6406,29.9375 4347,30.0781 Q4346.3594,30.2344 4345.6563,30.2344 Q4343.1563,30.2344 4341.8281,28.5938 Q4340.5156,26.9375 4340.5156,23.8125 Q4340.5156,20.6875 4341.8281,19.0313 Q4343.1563,17.375 4345.6563,17.375 Q4346.3594,17.375 4347,17.5313 Q4347.6563,17.6875 4348.2188,17.9844 L4348.2188,20.7031 Q4347.5938,20.125 4347,19.8594 Q4346.4063,19.5781 4345.7813,19.5781 Q4344.4375,19.5781 4343.75,20.6563 Q4343.0625,21.7188 4343.0625,23.8125 Q4343.0625,25.9063 4343.75,26.9844 Q4344.4375,28.0469 4345.7813,28.0469 Q4346.4063,28.0469 4347,27.7813 Q4347.5938,27.5 4348.2188,26.9219 L4348.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="4365.75" y="28.1543">Simulator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4203" x2="4555" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4222" y="54.2104">deltaT_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4222" y="67.0151">epochDuration_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="73.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4222" y="79.8198">maxRate_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="86.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4222" y="92.6245">pSummationMap_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="99.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4222" y="105.4292">short_timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="112.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="4222" y="118.2339">timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="124.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4222" y="131.0386">rgEndogenouslyActiveNeuronMap_ : bool*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="137.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4222" y="143.8433">currentEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="150.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4222" y="156.6479">height_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="163.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4222" y="169.4526">maxEdgesPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="176.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4222" y="182.2573">maxFiringRate_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="188.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4222" y="195.062">numEpochs_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="201.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4222" y="207.8667">totalNeurons_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="214.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="4222" y="220.6714">width_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="227.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4222" y="233.4761">consoleLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="240.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4222" y="246.2808">edgeLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="252.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4222" y="259.0854">fileLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="265.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4222" y="271.8901">initRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="278.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4222" y="284.6948">noiseRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="291.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4222" y="297.4995">model_ : shared_ptr&lt;Model&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="304.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4222" y="310.3042">configFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="316.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4222" y="323.1089">deserializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="329.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4222" y="335.9136">serializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="342.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4222" y="348.7183">stimulusFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="355.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="4222" y="361.5229">rgNeuronTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4203" x2="4555" y1="368.1172" y2="368.1172"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="376.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4222" y="382.3276">Simulator()</text><ellipse cx="4213" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="4222" y="395.1323">~Simulator()</text><ellipse cx="4213" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4222" y="407.937">getDeltaT() : BGFLOAT {query}</text><ellipse cx="4213" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4222" y="420.7417">getEpochDuration() : BGFLOAT {query}</text><ellipse cx="4213" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4222" y="433.5464">getMaxRate() : BGFLOAT {query}</text><ellipse cx="4213" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="4222" y="446.3511">getPSummationMap() : BGFLOAT* {query}</text><ellipse cx="4213" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="4222" y="459.1558">getInstance() : Simulator&amp;</text><ellipse cx="4213" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4222" y="471.9604">getShort_timer() : Timer</text><ellipse cx="4213" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4222" y="484.7651">getTimer() : Timer</text><ellipse cx="4213" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4222" y="497.5698">instantiateSimulatorObjects() : bool</text><ellipse cx="4213" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="4222" y="510.3745">getRgEndogenouslyActiveNeuronMap() : bool* {query}</text><ellipse cx="4213" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4222" y="523.1792">getCurrentStep() : int {query}</text><ellipse cx="4213" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4222" y="535.9839">getHeight() : int {query}</text><ellipse cx="4213" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4222" y="548.7886">getMaxEdgesPerVertex() : int {query}</text><ellipse cx="4213" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4222" y="561.5933">getMaxFiringRate() : int {query}</text><ellipse cx="4213" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4222" y="574.3979">getNumEpochs() : int {query}</text><ellipse cx="4213" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4222" y="587.2026">getTotalVertices() : int {query}</text><ellipse cx="4213" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4222" y="600.0073">getWidth() : int {query}</text><ellipse cx="4213" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4222" y="612.812">getInitRngSeed() : long {query}</text><ellipse cx="4213" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4222" y="625.6167">getNoiseRngSeed() : long {query}</text><ellipse cx="4213" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="4222" y="638.4214">getModel() : shared_ptr&lt;Model&gt; {query}</text><ellipse cx="4213" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4222" y="651.2261">getConfigFileName() : string {query}</text><ellipse cx="4213" cy="660.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4222" y="664.0308">getDeserializationFileName() : string {query}</text><ellipse cx="4213" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4222" y="676.8354">getSerializationFileName() : string {query}</text><ellipse cx="4213" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4222" y="689.6401">getStimulusFileName() : string {query}</text><ellipse cx="4213" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4222" y="702.4448">getRgNeuronTypeMap() : vertexType* {query}</text><ellipse cx="4213" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4222" y="715.2495">advanceEpoch(const int&amp; currentEpoch) : void {query}</text><ellipse cx="4213" cy="724.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4222" y="728.0542">copyCPUSynapseToGPU() : void</text><ellipse cx="4213" cy="737.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4222" y="740.8589">copyGPUSynapseToCPU() : void</text><ellipse cx="4213" cy="750.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4222" y="753.6636">finish() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4210" y="760.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4222" y="766.4683">freeResources() : void</text><ellipse cx="4213" cy="776.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4222" y="779.2729">loadParameters() : void</text><ellipse cx="4213" cy="788.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4222" y="792.0776">printParameters() : void {query}</text><ellipse cx="4213" cy="801.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4222" y="804.8823">reset() : void</text><ellipse cx="4213" cy="814.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4222" y="817.687">saveResults() : void {query}</text><ellipse cx="4213" cy="827.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4222" y="830.4917">setConfigFileName(const string&amp; fileName) : void</text><ellipse cx="4213" cy="840.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4222" y="843.2964">setDeserializationFileName(const string&amp; fileName) : void</text><ellipse cx="4213" cy="852.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4222" y="856.1011">setPSummationMap(BGFLOAT* summationMap) : void</text><ellipse cx="4213" cy="865.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="4222" y="868.9058">setSerializationFileName(const string&amp; fileName) : void</text><ellipse cx="4213" cy="878.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4222" y="881.7104">setStimulusFileName(const string&amp; fileName) : void</text><ellipse cx="4213" cy="891.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="4222" y="894.5151">setup() : void</text><ellipse cx="4213" cy="904.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="4222" y="907.3198">simulate() : void</text><!--MD5=[cc1c410fe2850b6da0ea695abfcea755]
class VerticesFactory--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="VerticesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="5581.5" y="1447"/><ellipse cx="5745.25" cy="1463" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5748.2188,1468.6406 Q5747.6406,1468.9375 5747,1469.0781 Q5746.3594,1469.2344 5745.6563,1469.2344 Q5743.1563,1469.2344 5741.8281,1467.5938 Q5740.5156,1465.9375 5740.5156,1462.8125 Q5740.5156,1459.6875 5741.8281,1458.0313 Q5743.1563,1456.375 5745.6563,1456.375 Q5746.3594,1456.375 5747,1456.5313 Q5747.6563,1456.6875 5748.2188,1456.9844 L5748.2188,1459.7031 Q5747.5938,1459.125 5747,1458.8594 Q5746.4063,1458.5781 5745.7813,1458.5781 Q5744.4375,1458.5781 5743.75,1459.6563 Q5743.0625,1460.7188 5743.0625,1462.8125 Q5743.0625,1464.9063 5743.75,1465.9844 Q5744.4375,1467.0469 5745.7813,1467.0469 Q5746.4063,1467.0469 5747,1466.7813 Q5747.5938,1466.5 5748.2188,1465.9219 L5748.2188,1468.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="5765.75" y="1467.1543">VerticesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5582.5" x2="6013.5" y1="1479" y2="1479"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5601.5" y="1493.2104">createFunctions : VerticesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1499.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="5601.5" y="1506.0151">verticesInstance : shared_ptr&lt;AllVertices&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5582.5" x2="6013.5" y1="1512.6094" y2="1512.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1520.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5601.5" y="1526.8198">VerticesFactory()</text><ellipse cx="5592.5" cy="1536.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5601.5" y="1539.6245">~VerticesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1546.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="5601.5" y="1552.4292">invokeCreateFunction(const string&amp; className) : AllVertices*</text><ellipse cx="5592.5" cy="1562.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="5601.5" y="1565.2339">getInstance() : VerticesFactory*</text><ellipse cx="5592.5" cy="1574.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="5601.5" y="1578.0386">createVertices(const string&amp; className) : shared_ptr&lt;AllVertices&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1584.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="5601.5" y="1590.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[70954963b39295522525212df8952a0c]
class XmlGrowthRecorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="201.6563" id="XmlGrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="4144.5" y="2463"/><ellipse cx="4309.75" cy="2479" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4312.7188,2484.6406 Q4312.1406,2484.9375 4311.5,2485.0781 Q4310.8594,2485.2344 4310.1563,2485.2344 Q4307.6563,2485.2344 4306.3281,2483.5938 Q4305.0156,2481.9375 4305.0156,2478.8125 Q4305.0156,2475.6875 4306.3281,2474.0313 Q4307.6563,2472.375 4310.1563,2472.375 Q4310.8594,2472.375 4311.5,2472.5313 Q4312.1563,2472.6875 4312.7188,2472.9844 L4312.7188,2475.7031 Q4312.0938,2475.125 4311.5,2474.8594 Q4310.9063,2474.5781 4310.2813,2474.5781 Q4308.9375,2474.5781 4308.25,2475.6563 Q4307.5625,2476.7188 4307.5625,2478.8125 Q4307.5625,2480.9063 4308.25,2481.9844 Q4308.9375,2483.0469 4310.2813,2483.0469 Q4310.9063,2483.0469 4311.5,2482.7813 Q4312.0938,2482.5 4312.7188,2481.9219 L4312.7188,2484.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="4330.25" y="2483.1543">XmlGrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4145.5" x2="4604.5" y1="2495" y2="2495"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4152.5" y="2503"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4164.5" y="2509.2104">radiiHistory_ : CompleteMatrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4152.5" y="2515.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4164.5" y="2522.0151">ratesHistory_ : CompleteMatrix</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4145.5" x2="4604.5" y1="2528.6094" y2="2528.6094"/><ellipse cx="4155.5" cy="2539.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4164.5" y="2542.8198">XmlGrowthRecorder()</text><ellipse cx="4155.5" cy="2552.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4164.5" y="2555.6245">~XmlGrowthRecorder()</text><ellipse cx="4155.5" cy="2565.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="4164.5" y="2568.4292">Create() : IRecorder*</text><ellipse cx="4155.5" cy="2578.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4164.5" y="2581.2339">compileHistories(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4152.5" y="2587.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="4164.5" y="2594.0386">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4155.5" cy="2603.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4164.5" y="2606.8433">getValues() : void</text><ellipse cx="4155.5" cy="2616.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4164.5" y="2619.6479">initDefaultValues() : void</text><ellipse cx="4155.5" cy="2629.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4164.5" y="2632.4526">initValues() : void</text><ellipse cx="4155.5" cy="2642.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4164.5" y="2645.2573">printParameters() : void</text><ellipse cx="4155.5" cy="2654.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4164.5" y="2658.062">saveSimData(const AllVertices&amp; neurons) : void</text><!--MD5=[e2fde7c48d35c1cbf959be266268237c]
class XmlRecorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="214.4609" id="XmlRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="4383.5" y="1965"/><ellipse cx="4570.75" cy="1981" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4573.7188,1986.6406 Q4573.1406,1986.9375 4572.5,1987.0781 Q4571.8594,1987.2344 4571.1563,1987.2344 Q4568.6563,1987.2344 4567.3281,1985.5938 Q4566.0156,1983.9375 4566.0156,1980.8125 Q4566.0156,1977.6875 4567.3281,1976.0313 Q4568.6563,1974.375 4571.1563,1974.375 Q4571.8594,1974.375 4572.5,1974.5313 Q4573.1563,1974.6875 4573.7188,1974.9844 L4573.7188,1977.7031 Q4573.0938,1977.125 4572.5,1976.8594 Q4571.9063,1976.5781 4571.2813,1976.5781 Q4569.9375,1976.5781 4569.25,1977.6563 Q4568.5625,1978.7188 4568.5625,1980.8125 Q4568.5625,1982.9063 4569.25,1983.9844 Q4569.9375,1985.0469 4571.2813,1985.0469 Q4571.9063,1985.0469 4572.5,1984.7813 Q4573.0938,1984.5 4573.7188,1983.9219 L4573.7188,1986.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="4591.25" y="1985.1543">XmlRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4384.5" x2="4843.5" y1="1997" y2="1997"/><polygon fill="none" points="4394.5,2003,4398.5,2007,4394.5,2011,4390.5,2007" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4403.5" y="2011.2104">spikesHistory_ : VectorMatrix</text><polygon fill="none" points="4394.5,2015.8047,4398.5,2019.8047,4394.5,2023.8047,4390.5,2019.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4403.5" y="2024.0151">resultOut_ : ofstream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4384.5" x2="4843.5" y1="2030.6094" y2="2030.6094"/><ellipse cx="4394.5" cy="2041.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4403.5" y="2044.8198">XmlRecorder()</text><ellipse cx="4394.5" cy="2054.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="4403.5" y="2057.6245">Create() : IRecorder*</text><ellipse cx="4394.5" cy="2067.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4403.5" y="2070.4292">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="4394.5,2075.0234,4398.5,2079.0234,4394.5,2083.0234,4390.5,2079.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="4403.5" y="2083.2339">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4394.5" cy="2092.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4403.5" y="2096.0386">getValues() : void</text><ellipse cx="4394.5" cy="2105.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4403.5" y="2108.8433">init() : void</text><ellipse cx="4394.5" cy="2118.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4403.5" y="2121.6479">initDefaultValues() : void</text><ellipse cx="4394.5" cy="2131.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4403.5" y="2134.4526">initValues() : void</text><ellipse cx="4394.5" cy="2144.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4403.5" y="2147.2573">printParameters() : void</text><ellipse cx="4394.5" cy="2156.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="4403.5" y="2160.062">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="4394.5" cy="2169.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4403.5" y="2172.8667">term() : void</text><!--MD5=[e01fc12d2ca5b032aa39c4fc4bc72679]
class XmlSTDPRecorder--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="227.2656" id="XmlSTDPRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="477" x="4640.5" y="2450.5"/><ellipse cx="4819.75" cy="2466.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4822.7188,2472.1406 Q4822.1406,2472.4375 4821.5,2472.5781 Q4820.8594,2472.7344 4820.1563,2472.7344 Q4817.6563,2472.7344 4816.3281,2471.0938 Q4815.0156,2469.4375 4815.0156,2466.3125 Q4815.0156,2463.1875 4816.3281,2461.5313 Q4817.6563,2459.875 4820.1563,2459.875 Q4820.8594,2459.875 4821.5,2460.0313 Q4822.1563,2460.1875 4822.7188,2460.4844 L4822.7188,2463.2031 Q4822.0938,2462.625 4821.5,2462.3594 Q4820.9063,2462.0781 4820.2813,2462.0781 Q4818.9375,2462.0781 4818.25,2463.1563 Q4817.5625,2464.2188 4817.5625,2466.3125 Q4817.5625,2468.4063 4818.25,2469.4844 Q4818.9375,2470.5469 4820.2813,2470.5469 Q4820.9063,2470.5469 4821.5,2470.2813 Q4822.0938,2470 4822.7188,2469.4219 L4822.7188,2472.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="4840.25" y="2470.6543">XmlSTDPRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4641.5" x2="5116.5" y1="2482.5" y2="2482.5"/><polygon fill="none" points="4651.5,2488.5,4655.5,2492.5,4651.5,2496.5,4647.5,2492.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4660.5" y="2496.7104">weightsHistory_ : vector&lt;vector&lt;BGFLOAT&gt;&gt;</text><polygon fill="none" points="4651.5,2501.3047,4655.5,2505.3047,4651.5,2509.3047,4647.5,2505.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4660.5" y="2509.5151">destNeuronIndexHistory_ : vector&lt;vector&lt;int&gt;&gt;</text><polygon fill="none" points="4651.5,2514.1094,4655.5,2518.1094,4651.5,2522.1094,4647.5,2518.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="4660.5" y="2522.3198">sourceNeuronIndexHistory_ : vector&lt;vector&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4641.5" x2="5116.5" y1="2528.9141" y2="2528.9141"/><ellipse cx="4651.5" cy="2539.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4660.5" y="2543.1245">XmlSTDPRecorder()</text><ellipse cx="4651.5" cy="2552.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4660.5" y="2555.9292">~XmlSTDPRecorder()</text><ellipse cx="4651.5" cy="2565.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="118" x="4660.5" y="2568.7339">Create() : IRecorder*</text><ellipse cx="4651.5" cy="2578.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="4660.5" y="2581.5386">toXML(string name, vector&lt;vector&lt;BGFLOAT&gt;&gt; MatrixToWrite) : string {query}</text><ellipse cx="4651.5" cy="2591.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="4660.5" y="2594.3433">toXML(string name, vector&lt;vector&lt;int&gt;&gt; MatrixToWrite) : string {query}</text><ellipse cx="4651.5" cy="2603.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4660.5" y="2607.1479">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="4651.5" cy="2616.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4660.5" y="2619.9526">getValues() : void</text><ellipse cx="4651.5" cy="2629.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4660.5" y="2632.7573">initDefaultValues() : void</text><ellipse cx="4651.5" cy="2642.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4660.5" y="2645.562">initValues() : void</text><ellipse cx="4651.5" cy="2655.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4660.5" y="2658.3667">printParameters() : void</text><ellipse cx="4651.5" cy="2667.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4660.5" y="2671.1714">saveSimData(const AllVertices&amp; neurons) : void</text><!--MD5=[ee90c8bb66c047e800df5fa57f6b4f59]
class Operations::op--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="150.4375" id="Operations::op" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="7234.5" y="1997"/><ellipse cx="7255.8" cy="2013" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7259.9094,2019 L7252.1906,2019 L7252.1906,2006.6094 L7259.9094,2006.6094 L7259.9094,2008.7656 L7254.6438,2008.7656 L7254.6438,2011.4375 L7259.4094,2011.4375 L7259.4094,2013.5938 L7254.6438,2013.5938 L7254.6438,2016.8438 L7259.9094,2016.8438 L7259.9094,2019 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="7271.2" y="2017.1543">Operations::op</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7235.5" x2="7372.5" y1="2029" y2="2029"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="7240.5" y="2043.2104">copyFromGPU</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="7240.5" y="2056.0151">copyToGPU</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="7240.5" y="2068.8198">deallocateGPUMemory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="7240.5" y="2081.6245">deserialize</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="7240.5" y="2094.4292">loadParameters</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="7240.5" y="2107.2339">printParameters</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="7240.5" y="2120.0386">restoreToDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="7240.5" y="2132.8433">serialize</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7235.5" x2="7372.5" y1="2139.4375" y2="2139.4375"/><!--MD5=[2c8a843ca32eecec980159abf8666d97]
class enumClassSynapses--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="112.0234" id="enumClassSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7568.5" y="405"/><ellipse cx="7596.55" cy="421" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7600.6594,427 L7592.9406,427 L7592.9406,414.6094 L7600.6594,414.6094 L7600.6594,416.7656 L7595.3938,416.7656 L7595.3938,419.4375 L7600.1594,419.4375 L7600.1594,421.5938 L7595.3938,421.5938 L7595.3938,424.8438 L7600.6594,424.8438 L7600.6594,427 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="7613.45" y="425.1543">enumClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7569.5" x2="7756.5" y1="437" y2="437"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="7574.5" y="451.2104">classAllDSSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="7574.5" y="464.0151">classAllDynamicSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="7574.5" y="476.8198">classAllSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="7574.5" y="489.6245">classAllSpikingSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7574.5" y="502.4292">undefClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7569.5" x2="7756.5" y1="509.0234" y2="509.0234"/><!--MD5=[12eed8bfdcfc08849f14b9c8d25e6e94]
class AllDSSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="124.8281" id="AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="3600.5" y="2501.5"/><ellipse cx="3615.5" cy="2517.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3618.4688,2523.1406 Q3617.8906,2523.4375 3617.25,2523.5781 Q3616.6094,2523.7344 3615.9063,2523.7344 Q3613.4063,2523.7344 3612.0781,2522.0938 Q3610.7656,2520.4375 3610.7656,2517.3125 Q3610.7656,2514.1875 3612.0781,2512.5313 Q3613.4063,2510.875 3615.9063,2510.875 Q3616.6094,2510.875 3617.25,2511.0313 Q3617.9063,2511.1875 3618.4688,2511.4844 L3618.4688,2514.2031 Q3617.8438,2513.625 3617.25,2513.3594 Q3616.6563,2513.0781 3616.0313,2513.0781 Q3614.6875,2513.0781 3614,2514.1563 Q3613.3125,2515.2188 3613.3125,2517.3125 Q3613.3125,2519.4063 3614,2520.4844 Q3614.6875,2521.5469 3616.0313,2521.5469 Q3616.6563,2521.5469 3617.25,2521.2813 Q3617.8438,2521 3618.4688,2520.4219 L3618.4688,2523.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="3629.5" y="2521.6543">AllDSSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3601.5" x2="3828.5" y1="2533.5" y2="2533.5"/><ellipse cx="3611.5" cy="2544.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3620.5" y="2547.7104">D_ : BGFLOAT*</text><ellipse cx="3611.5" cy="2557.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3620.5" y="2560.5151">F_ : BGFLOAT*</text><ellipse cx="3611.5" cy="2570.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3620.5" y="2573.3198">U_ : BGFLOAT*</text><ellipse cx="3611.5" cy="2582.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3620.5" y="2586.1245">r_ : BGFLOAT*</text><ellipse cx="3611.5" cy="2595.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3620.5" y="2598.9292">u_ : BGFLOAT*</text><ellipse cx="3611.5" cy="2608.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3620.5" y="2611.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3601.5" x2="3828.5" y1="2618.3281" y2="2618.3281"/><!--MD5=[4b1be41c79a1ff75e3d6100484a928eb]
class AllDynamicSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="124.8281" id="AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="3839" y="3051"/><ellipse cx="3854" cy="3067" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3856.9688,3072.6406 Q3856.3906,3072.9375 3855.75,3073.0781 Q3855.1094,3073.2344 3854.4063,3073.2344 Q3851.9063,3073.2344 3850.5781,3071.5938 Q3849.2656,3069.9375 3849.2656,3066.8125 Q3849.2656,3063.6875 3850.5781,3062.0313 Q3851.9063,3060.375 3854.4063,3060.375 Q3855.1094,3060.375 3855.75,3060.5313 Q3856.4063,3060.6875 3856.9688,3060.9844 L3856.9688,3063.7031 Q3856.3438,3063.125 3855.75,3062.8594 Q3855.1563,3062.5781 3854.5313,3062.5781 Q3853.1875,3062.5781 3852.5,3063.6563 Q3851.8125,3064.7188 3851.8125,3066.8125 Q3851.8125,3068.9063 3852.5,3069.9844 Q3853.1875,3071.0469 3854.5313,3071.0469 Q3855.1563,3071.0469 3855.75,3070.7813 Q3856.3438,3070.5 3856.9688,3069.9219 L3856.9688,3072.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="264" x="3868" y="3071.1543">AllDynamicSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3840" x2="4134" y1="3083" y2="3083"/><ellipse cx="3850" cy="3094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3859" y="3097.2104">D_ : BGFLOAT*</text><ellipse cx="3850" cy="3106.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3859" y="3110.0151">F_ : BGFLOAT*</text><ellipse cx="3850" cy="3119.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3859" y="3122.8198">U_ : BGFLOAT*</text><ellipse cx="3850" cy="3132.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3859" y="3135.6245">r_ : BGFLOAT*</text><ellipse cx="3850" cy="3145.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3859" y="3148.4292">u_ : BGFLOAT*</text><ellipse cx="3850" cy="3158.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3859" y="3161.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3840" x2="4134" y1="3167.8281" y2="3167.8281"/><!--MD5=[017d3a10fe7408131050c5acc75b1a9b]
class AllEdgesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="176.0469" id="AllEdgesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="4503" y="1434"/><ellipse cx="4522.95" cy="1450" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4525.9188,1455.6406 Q4525.3406,1455.9375 4524.7,1456.0781 Q4524.0594,1456.2344 4523.3563,1456.2344 Q4520.8563,1456.2344 4519.5281,1454.5938 Q4518.2156,1452.9375 4518.2156,1449.8125 Q4518.2156,1446.6875 4519.5281,1445.0313 Q4520.8563,1443.375 4523.3563,1443.375 Q4524.0594,1443.375 4524.7,1443.5313 Q4525.3563,1443.6875 4525.9188,1443.9844 L4525.9188,1446.7031 Q4525.2938,1446.125 4524.7,1445.8594 Q4524.1063,1445.5781 4523.4813,1445.5781 Q4522.1375,1445.5781 4521.45,1446.6563 Q4520.7625,1447.7188 4520.7625,1449.8125 Q4520.7625,1451.9063 4521.45,1452.9844 Q4522.1375,1454.0469 4523.4813,1454.0469 Q4524.1063,1454.0469 4524.7,1453.7813 Q4525.2938,1453.5 4525.9188,1452.9219 L4525.9188,1455.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="4538.05" y="1454.1543">AllEdgesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4504" x2="4704" y1="1466" y2="1466"/><ellipse cx="4514" cy="1477" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4523" y="1480.2104">W_ : BGFLOAT*</text><ellipse cx="4514" cy="1489.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4523" y="1493.0151">psr_ : BGFLOAT*</text><ellipse cx="4514" cy="1502.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4523" y="1505.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="4514" cy="1515.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4523" y="1518.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="4514" cy="1528.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4523" y="1531.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="4514" cy="1541.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4523" y="1544.2339">inUse_ : bool*</text><ellipse cx="4514" cy="1553.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4523" y="1557.0386">type_ : edgeType*</text><ellipse cx="4514" cy="1566.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4523" y="1569.8433">countVertices_ : int</text><ellipse cx="4514" cy="1579.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4523" y="1582.6479">destVertexIndex_ : int*</text><ellipse cx="4514" cy="1592.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4523" y="1595.4526">sourceVertexIndex_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4504" x2="4704" y1="1602.0469" y2="1602.0469"/><!--MD5=[639115fe7f0fcce40793e2aa5cc37621]
class AllIFNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="252.875" id="AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="3339" y="2437.5"/><ellipse cx="3358.95" cy="2453.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3361.9188,2459.1406 Q3361.3406,2459.4375 3360.7,2459.5781 Q3360.0594,2459.7344 3359.3563,2459.7344 Q3356.8563,2459.7344 3355.5281,2458.0938 Q3354.2156,2456.4375 3354.2156,2453.3125 Q3354.2156,2450.1875 3355.5281,2448.5313 Q3356.8563,2446.875 3359.3563,2446.875 Q3360.0594,2446.875 3360.7,2447.0313 Q3361.3563,2447.1875 3361.9188,2447.4844 L3361.9188,2450.2031 Q3361.2938,2449.625 3360.7,2449.3594 Q3360.1063,2449.0781 3359.4813,2449.0781 Q3358.1375,2449.0781 3357.45,2450.1563 Q3356.7625,2451.2188 3356.7625,2453.3125 Q3356.7625,2455.4063 3357.45,2456.4844 Q3358.1375,2457.5469 3359.4813,2457.5469 Q3360.1063,2457.5469 3360.7,2457.2813 Q3361.2938,2457 3361.9188,2456.4219 L3361.9188,2459.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="183" x="3374.05" y="2457.6543">AllIFNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3564" y1="2469.5" y2="2469.5"/><ellipse cx="3350" cy="2480.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3359" y="2483.7104">C1_ : BGFLOAT*</text><ellipse cx="3350" cy="2493.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3359" y="2496.5151">C2_ : BGFLOAT*</text><ellipse cx="3350" cy="2506.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3359" y="2509.3198">Cm_ : BGFLOAT*</text><ellipse cx="3350" cy="2518.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3359" y="2522.1245">I0_ : BGFLOAT*</text><ellipse cx="3350" cy="2531.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3359" y="2534.9292">Iinject_ : BGFLOAT*</text><ellipse cx="3350" cy="2544.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3359" y="2547.7339">Inoise_ : BGFLOAT*</text><ellipse cx="3350" cy="2557.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3359" y="2560.5386">Isyn_ : BGFLOAT*</text><ellipse cx="3350" cy="2570.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3359" y="2573.3433">Rm_ : BGFLOAT*</text><ellipse cx="3350" cy="2582.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3359" y="2586.1479">Tau_ : BGFLOAT*</text><ellipse cx="3350" cy="2595.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3359" y="2598.9526">Trefract_ : BGFLOAT*</text><ellipse cx="3350" cy="2608.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3359" y="2611.7573">Vinit_ : BGFLOAT*</text><ellipse cx="3350" cy="2621.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3359" y="2624.562">Vm_ : BGFLOAT*</text><ellipse cx="3350" cy="2634.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3359" y="2637.3667">Vreset_ : BGFLOAT*</text><ellipse cx="3350" cy="2646.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="3359" y="2650.1714">Vrest_ : BGFLOAT*</text><ellipse cx="3350" cy="2659.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3359" y="2662.9761">Vthresh_ : BGFLOAT*</text><ellipse cx="3350" cy="2672.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3359" y="2675.7808">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3564" y1="2682.375" y2="2682.375"/><!--MD5=[bc6843495936d398fdad119946a0d209]
class AllIZHNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="124.8281" id="AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="3339" y="3051"/><ellipse cx="3354" cy="3067" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3356.9688,3072.6406 Q3356.3906,3072.9375 3355.75,3073.0781 Q3355.1094,3073.2344 3354.4063,3073.2344 Q3351.9063,3073.2344 3350.5781,3071.5938 Q3349.2656,3069.9375 3349.2656,3066.8125 Q3349.2656,3063.6875 3350.5781,3062.0313 Q3351.9063,3060.375 3354.4063,3060.375 Q3355.1094,3060.375 3355.75,3060.5313 Q3356.4063,3060.6875 3356.9688,3060.9844 L3356.9688,3063.7031 Q3356.3438,3063.125 3355.75,3062.8594 Q3355.1563,3062.5781 3354.5313,3062.5781 Q3353.1875,3062.5781 3352.5,3063.6563 Q3351.8125,3064.7188 3351.8125,3066.8125 Q3351.8125,3068.9063 3352.5,3069.9844 Q3353.1875,3071.0469 3354.5313,3071.0469 Q3355.1563,3071.0469 3355.75,3070.7813 Q3356.3438,3070.5 3356.9688,3069.9219 L3356.9688,3072.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="194" x="3368" y="3071.1543">AllIZHNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3564" y1="3083" y2="3083"/><ellipse cx="3350" cy="3094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="3359" y="3097.2104">Aconst_ : BGFLOAT*</text><ellipse cx="3350" cy="3106.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3359" y="3110.0151">Bconst_ : BGFLOAT*</text><ellipse cx="3350" cy="3119.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3359" y="3122.8198">C3_ : BGFLOAT*</text><ellipse cx="3350" cy="3132.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3359" y="3135.6245">Cconst_ : BGFLOAT*</text><ellipse cx="3350" cy="3145.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3359" y="3148.4292">Dconst_ : BGFLOAT*</text><ellipse cx="3350" cy="3158.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3359" y="3161.2339">u_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3564" y1="3167.8281" y2="3167.8281"/><!--MD5=[a7843438017f4a8113b6a979c3ec4039]
class AllSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="240.0703" id="AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="3865" y="2444"/><ellipse cx="3880" cy="2460" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3882.9688,2465.6406 Q3882.3906,2465.9375 3881.75,2466.0781 Q3881.1094,2466.2344 3880.4063,2466.2344 Q3877.9063,2466.2344 3876.5781,2464.5938 Q3875.2656,2462.9375 3875.2656,2459.8125 Q3875.2656,2456.6875 3876.5781,2455.0313 Q3877.9063,2453.375 3880.4063,2453.375 Q3881.1094,2453.375 3881.75,2453.5313 Q3882.4063,2453.6875 3882.9688,2453.9844 L3882.9688,2456.7031 Q3882.3438,2456.125 3881.75,2455.8594 Q3881.1563,2455.5781 3880.5313,2455.5781 Q3879.1875,2455.5781 3878.5,2456.6563 Q3877.8125,2457.7188 3877.8125,2459.8125 Q3877.8125,2461.9063 3878.5,2462.9844 Q3879.1875,2464.0469 3880.5313,2464.0469 Q3881.1563,2464.0469 3881.75,2463.7813 Q3882.3438,2463.5 3882.9688,2462.9219 L3882.9688,2465.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="212" x="3894" y="2464.1543">AllSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3866" x2="4108" y1="2476" y2="2476"/><ellipse cx="3876" cy="2487" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3885" y="2490.2104">Aneg_ : BGFLOAT*</text><ellipse cx="3876" cy="2499.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3885" y="2503.0151">Apos_ : BGFLOAT*</text><ellipse cx="3876" cy="2512.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3885" y="2515.8198">STDPgap_ : BGFLOAT*</text><ellipse cx="3876" cy="2525.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3885" y="2528.6245">Wex_ : BGFLOAT*</text><ellipse cx="3876" cy="2538.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3885" y="2541.4292">muneg_ : BGFLOAT*</text><ellipse cx="3876" cy="2551.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3885" y="2554.2339">mupos_ : BGFLOAT*</text><ellipse cx="3876" cy="2563.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3885" y="2567.0386">tauneg_ : BGFLOAT*</text><ellipse cx="3876" cy="2576.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3885" y="2579.8433">taupos_ : BGFLOAT*</text><ellipse cx="3876" cy="2589.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3885" y="2592.6479">tauspost_ : BGFLOAT*</text><ellipse cx="3876" cy="2602.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3885" y="2605.4526">tauspre_ : BGFLOAT*</text><ellipse cx="3876" cy="2615.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3885" y="2618.2573">useFroemkeDanSTDP_ : bool*</text><ellipse cx="3876" cy="2627.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3885" y="2631.062">delayIndexPost_ : int*</text><ellipse cx="3876" cy="2640.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3885" y="2643.8667">delayQueuePostLength_ : int*</text><ellipse cx="3876" cy="2653.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3885" y="2656.6714">totalDelayPost_ : int*</text><ellipse cx="3876" cy="2666.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3885" y="2669.4761">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3866" x2="4108" y1="2676.0703" y2="2676.0703"/><!--MD5=[4ac84e1680f309079c4f5159a2743064]
class AllSpikingNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="99.2188" id="AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="3466" y="2022.5"/><ellipse cx="3481" cy="2038.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3483.9688,2044.1406 Q3483.3906,2044.4375 3482.75,2044.5781 Q3482.1094,2044.7344 3481.4063,2044.7344 Q3478.9063,2044.7344 3477.5781,2043.0938 Q3476.2656,2041.4375 3476.2656,2038.3125 Q3476.2656,2035.1875 3477.5781,2033.5313 Q3478.9063,2031.875 3481.4063,2031.875 Q3482.1094,2031.875 3482.75,2032.0313 Q3483.4063,2032.1875 3483.9688,2032.4844 L3483.9688,2035.2031 Q3483.3438,2034.625 3482.75,2034.3594 Q3482.1563,2034.0781 3481.5313,2034.0781 Q3480.1875,2034.0781 3479.5,2035.1563 Q3478.8125,2036.2188 3478.8125,2038.3125 Q3478.8125,2040.4063 3479.5,2041.4844 Q3480.1875,2042.5469 3481.5313,2042.5469 Q3482.1563,2042.5469 3482.75,2042.2813 Q3483.3438,2042 3483.9688,2041.4219 L3483.9688,2044.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="3495" y="2042.6543">AllSpikingNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3467" x2="3715" y1="2054.5" y2="2054.5"/><ellipse cx="3477" cy="2065.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3486" y="2068.7104">hasFired_ : bool*</text><ellipse cx="3477" cy="2078.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3486" y="2081.5151">spikeCountOffset_ : int*</text><ellipse cx="3477" cy="2091.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3486" y="2094.3198">spikeCount_ : int*</text><ellipse cx="3477" cy="2103.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3486" y="2107.1245">spikeHistory_ : uint64_t**</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3467" x2="3715" y1="2113.7188" y2="2113.7188"/><!--MD5=[9207c363d1f0343d1c8507e42ff7f935]
class AllSpikingSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="124.8281" id="AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="3776.5" y="2009.5"/><ellipse cx="3791.5" cy="2025.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3794.4688,2031.1406 Q3793.8906,2031.4375 3793.25,2031.5781 Q3792.6094,2031.7344 3791.9063,2031.7344 Q3789.4063,2031.7344 3788.0781,2030.0938 Q3786.7656,2028.4375 3786.7656,2025.3125 Q3786.7656,2022.1875 3788.0781,2020.5313 Q3789.4063,2018.875 3791.9063,2018.875 Q3792.6094,2018.875 3793.25,2019.0313 Q3793.9063,2019.1875 3794.4688,2019.4844 L3794.4688,2022.2031 Q3793.8438,2021.625 3793.25,2021.3594 Q3792.6563,2021.0781 3792.0313,2021.0781 Q3790.6875,2021.0781 3790,2022.1563 Q3789.3125,2023.2188 3789.3125,2025.3125 Q3789.3125,2027.4063 3790,2028.4844 Q3790.6875,2029.5469 3792.0313,2029.5469 Q3792.6563,2029.5469 3793.25,2029.2813 Q3793.8438,2029 3794.4688,2028.4219 L3794.4688,2031.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="3805.5" y="2029.6543">AllSpikingSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3777.5" x2="4032.5" y1="2041.5" y2="2041.5"/><ellipse cx="3787.5" cy="2052.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3796.5" y="2055.7104">decay_ : BGFLOAT*</text><ellipse cx="3787.5" cy="2065.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3796.5" y="2068.5151">tau_ : BGFLOAT*</text><ellipse cx="3787.5" cy="2078.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3796.5" y="2081.3198">delayIndex_ : int*</text><ellipse cx="3787.5" cy="2090.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3796.5" y="2094.1245">delayQueueLength_ : int*</text><ellipse cx="3787.5" cy="2103.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3796.5" y="2106.9292">totalDelay_ : int*</text><ellipse cx="3787.5" cy="2116.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3796.5" y="2119.7339">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3777.5" x2="4032.5" y1="2126.3281" y2="2126.3281"/><!--MD5=[537ade6dbdfe6ef3b32240037651f8aa]
class AllVerticesDeviceProperties--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="60.8047" id="AllVerticesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="4051.5" y="1491.5"/><ellipse cx="4066.5" cy="1507.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4069.4688,1513.1406 Q4068.8906,1513.4375 4068.25,1513.5781 Q4067.6094,1513.7344 4066.9063,1513.7344 Q4064.4063,1513.7344 4063.0781,1512.0938 Q4061.7656,1510.4375 4061.7656,1507.3125 Q4061.7656,1504.1875 4063.0781,1502.5313 Q4064.4063,1500.875 4066.9063,1500.875 Q4067.6094,1500.875 4068.25,1501.0313 Q4068.9063,1501.1875 4069.4688,1501.4844 L4069.4688,1504.2031 Q4068.8438,1503.625 4068.25,1503.3594 Q4067.6563,1503.0781 4067.0313,1503.0781 Q4065.6875,1503.0781 4065,1504.1563 Q4064.3125,1505.2188 4064.3125,1507.3125 Q4064.3125,1509.4063 4065,1510.4844 Q4065.6875,1511.5469 4067.0313,1511.5469 Q4067.6563,1511.5469 4068.25,1511.2813 Q4068.8438,1511 4069.4688,1510.4219 L4069.4688,1513.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="4080.5" y="1511.6543">AllVerticesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4052.5" x2="4253.5" y1="1523.5" y2="1523.5"/><ellipse cx="4062.5" cy="1534.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4071.5" y="1537.7104">summationMap_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4052.5" x2="4253.5" y1="1544.3047" y2="1544.3047"/><!--MD5=[1ca6d9ba181062a9a4052698cf88a455]
class ConnGrowth::GrowthParams--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="137.6328" id="ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.5;" width="207" x="2356.5" y="2495"/><ellipse cx="2371.5" cy="2511" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2374.4688,2516.6406 Q2373.8906,2516.9375 2373.25,2517.0781 Q2372.6094,2517.2344 2371.9063,2517.2344 Q2369.4063,2517.2344 2368.0781,2515.5938 Q2366.7656,2513.9375 2366.7656,2510.8125 Q2366.7656,2507.6875 2368.0781,2506.0313 Q2369.4063,2504.375 2371.9063,2504.375 Q2372.6094,2504.375 2373.25,2504.5313 Q2373.9063,2504.6875 2374.4688,2504.9844 L2374.4688,2507.7031 Q2373.8438,2507.125 2373.25,2506.8594 Q2372.6563,2506.5781 2372.0313,2506.5781 Q2370.6875,2506.5781 2370,2507.6563 Q2369.3125,2508.7188 2369.3125,2510.8125 Q2369.3125,2512.9063 2370,2513.9844 Q2370.6875,2515.0469 2372.0313,2515.0469 Q2372.6563,2515.0469 2373.25,2514.7813 Q2373.8438,2514.5 2374.4688,2513.9219 L2374.4688,2516.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="175" x="2385.5" y="2515.1543">ConnGrowth::GrowthParams</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2357.5" x2="2562.5" y1="2527" y2="2527"/><ellipse cx="2367.5" cy="2538" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2376.5" y="2541.2104">beta : BGFLOAT</text><ellipse cx="2367.5" cy="2550.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2376.5" y="2554.0151">epsilon : BGFLOAT</text><ellipse cx="2367.5" cy="2563.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2376.5" y="2566.8198">maxRate : BGFLOAT</text><ellipse cx="2367.5" cy="2576.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2376.5" y="2579.6245">minRadius : BGFLOAT</text><ellipse cx="2367.5" cy="2589.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2376.5" y="2592.4292">rho : BGFLOAT</text><ellipse cx="2367.5" cy="2602.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2376.5" y="2605.2339">startRadius : BGFLOAT</text><ellipse cx="2367.5" cy="2614.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2376.5" y="2618.0386">targetRate : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2357.5" x2="2562.5" y1="2624.6328" y2="2624.6328"/><!--MD5=[0db2b2f8d15a42d02f46e8af06351a10]
class ConnStatic::DistDestVertex--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="86.4141" id="ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="1392" y="2521"/><ellipse cx="1451.25" cy="2537" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1454.2188,2542.6406 Q1453.6406,2542.9375 1453,2543.0781 Q1452.3594,2543.2344 1451.6563,2543.2344 Q1449.1563,2543.2344 1447.8281,2541.5938 Q1446.5156,2539.9375 1446.5156,2536.8125 Q1446.5156,2533.6875 1447.8281,2532.0313 Q1449.1563,2530.375 1451.6563,2530.375 Q1452.3594,2530.375 1453,2530.5313 Q1453.6563,2530.6875 1454.2188,2530.9844 L1454.2188,2533.7031 Q1453.5938,2533.125 1453,2532.8594 Q1452.4063,2532.5781 1451.7813,2532.5781 Q1450.4375,2532.5781 1449.75,2533.6563 Q1449.0625,2534.7188 1449.0625,2536.8125 Q1449.0625,2538.9063 1449.75,2539.9844 Q1450.4375,2541.0469 1451.7813,2541.0469 Q1452.4063,2541.0469 1453,2540.7813 Q1453.5938,2540.5 1454.2188,2539.9219 L1454.2188,2542.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="1471.75" y="2541.1543">ConnStatic::DistDestVertex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1393" x2="1687" y1="2553" y2="2553"/><ellipse cx="1403" cy="2564" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1412" y="2567.2104">dist : BGFLOAT</text><ellipse cx="1403" cy="2576.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1412" y="2580.0151">destVertex : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1393" x2="1687" y1="2586.6094" y2="2586.6094"/><ellipse cx="1403" cy="2597.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1412" y="2600.8198">operator&lt;(DistDestVertex other) : bool {query}</text><!--MD5=[0b11278c58281ab7c80e79be642856f2]
class EdgeIndexMap--><rect fill="#FEFECE" filter="url(#fmsewbgwf2zv0)" height="188.8516" id="EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3143" y="1977.5"/><ellipse cx="3237.25" cy="1993.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3240.2188,1999.1406 Q3239.6406,1999.4375 3239,1999.5781 Q3238.3594,1999.7344 3237.6563,1999.7344 Q3235.1563,1999.7344 3233.8281,1998.0938 Q3232.5156,1996.4375 3232.5156,1993.3125 Q3232.5156,1990.1875 3233.8281,1988.5313 Q3235.1563,1986.875 3237.6563,1986.875 Q3238.3594,1986.875 3239,1987.0313 Q3239.6563,1987.1875 3240.2188,1987.4844 L3240.2188,1990.2031 Q3239.5938,1989.625 3239,1989.3594 Q3238.4063,1989.0781 3237.7813,1989.0781 Q3236.4375,1989.0781 3235.75,1990.1563 Q3235.0625,1991.2188 3235.0625,1993.3125 Q3235.0625,1995.4063 3235.75,1996.4844 Q3236.4375,1997.5469 3237.7813,1997.5469 Q3238.4063,1997.5469 3239,1997.2813 Q3239.5938,1997 3240.2188,1996.4219 L3240.2188,1999.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="3257.75" y="1997.6543">EdgeIndexMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144" x2="3430" y1="2009.5" y2="2009.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3151" y="2017.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3163" y="2023.7104">numOfEdges_ : BGSIZE</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3151" y="2030.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3163" y="2036.5151">numOfVertices_ : BGSIZE</text><ellipse cx="3154" cy="2046.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3163" y="2049.3198">incomingEdgeBegin_ : BGSIZE*</text><ellipse cx="3154" cy="2058.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3163" y="2062.1245">incomingEdgeCount_ : BGSIZE*</text><ellipse cx="3154" cy="2071.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3163" y="2074.9292">incomingEdgeIndexMap_ : BGSIZE*</text><ellipse cx="3154" cy="2084.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3163" y="2087.7339">outgoingEdgeBegin_ : BGSIZE*</text><ellipse cx="3154" cy="2097.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3163" y="2100.5386">outgoingEdgeCount_ : BGSIZE*</text><ellipse cx="3154" cy="2110.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3163" y="2113.3433">outgoingEdgeIndexMap_ : BGSIZE*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144" x2="3430" y1="2119.9375" y2="2119.9375"/><ellipse cx="3154" cy="2130.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3163" y="2134.1479">EdgeIndexMap()</text><ellipse cx="3154" cy="2143.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="3163" y="2146.9526">EdgeIndexMap(int vertexCount, int edgeCount)</text><ellipse cx="3154" cy="2156.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3163" y="2159.7573">~EdgeIndexMap()</text><!--MD5=[36cebae4583ca589f8881f15eca879f1]
reverse link AllEdges to AllNeuroEdges--><path d="M875,2385.16 C875,2415.38 875,2444.12 875,2469.34 " fill="none" id="AllEdges&lt;-AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,2385.11,875,2365.11,882,2385.11,868,2385.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d895029eba7154c6905399e7eb5aaaea]
reverse link AllEdgesDeviceProperties to AllSpikingSynapsesDeviceProperties--><path d="M4554.91,1627.68 C4536.28,1659.78 4512.75,1693.35 4485,1719 C4441.5,1759.2 4417.52,1749.78 4366,1779 C4234.76,1853.42 4088.41,1948.24 3996.53,2009.29 " fill="none" id="AllEdgesDeviceProperties&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4548.88,1624.11,4564.75,1610.06,4561.11,1630.93,4548.88,1624.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b299d6e53b6ac4d2a1701b68b9dc7554]
reverse link AllIFNeurons to AllIZHNeurons--><path d="M5902.14,3475.3 C5875,3525.55 5847.28,3576.87 5820.61,3626.25 " fill="none" id="AllIFNeurons&lt;-AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5896.05,3471.85,5911.71,3457.58,5908.36,3478.5,5896.05,3471.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d41fa10eee7108bf615579dc16f66c4]
reverse link AllIFNeurons to AllLIFNeurons--><path d="M6291.53,3475.49 C6373.02,3626.7 6459.73,3787.62 6507.35,3875.99 " fill="none" id="AllIFNeurons&lt;-AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6285.2,3478.5,6281.88,3457.58,6297.53,3471.86,6285.2,3478.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17cadfdde82fbd78aaa7ab65342c0454]
reverse link AllIFNeuronsDeviceProperties to AllIZHNeuronsDeviceProperties--><path d="M3452,2710.89 C3452,2821.89 3452,2969.06 3452,3050.9 " fill="none" id="AllIFNeuronsDeviceProperties&lt;-AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3445,2710.61,3452,2690.61,3459,2710.61,3445,2710.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d383143b8365dcb1c00482aec0d8f87]
reverse link AllNeuroEdges to AllSpikingSynapses--><path d="M875,2679.11 C875,2704.66 875,2733.06 875,2762.76 " fill="none" id="AllNeuroEdges&lt;-AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,2678.81,875,2658.81,882,2678.81,868,2678.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5445f169f2d896f0fc54fbb0dd17c8d5]
reverse link AllSTDPSynapses to AllDynamicSTDPSynapses--><path d="M1320,4386.53 C1320,4399.84 1320,4412.95 1320,4425.8 " fill="none" id="AllSTDPSynapses&lt;-AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1313,4386.22,1320,4366.22,1327,4386.22,1313,4386.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[539a086fdc8dbc8028ce1b9c0d3cb21a]
reverse link AllSTDPSynapsesDeviceProperties to AllDynamicSTDPSynapsesDeviceProperties--><path d="M3987,2704.15 C3987,2815.85 3987,2967.34 3987,3050.86 " fill="none" id="AllSTDPSynapsesDeviceProperties&lt;-AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3980,2704.14,3987,2684.14,3994,2704.14,3980,2704.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8724fdcf162cd93143062af7a28861a5]
reverse link AllSpikingNeurons to AllIFNeurons--><path d="M5883.12,2720.86 C5891.66,2736.5 5900.54,2752.77 5909.63,2769.4 " fill="none" id="AllSpikingNeurons&lt;-AllIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5876.89,2724.07,5873.45,2703.16,5889.18,2717.36,5876.89,2724.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcb689111a9832bf7543527f372e607]
reverse link AllSpikingNeuronsDeviceProperties to AllIFNeuronsDeviceProperties--><path d="M3571.57,2141.5 C3549.89,2217.93 3514.35,2343.19 3487.65,2437.34 " fill="none" id="AllSpikingNeuronsDeviceProperties&lt;-AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3564.97,2139.1,3577.16,2121.77,3578.44,2142.93,3564.97,2139.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f221506eaa2e129ebcab2e085332c1be]
reverse link AllSpikingSynapses to AllDSSynapses--><path d="M677.9,3481.9 C633.94,3563.85 588.63,3648.31 548.97,3722.24 " fill="none" id="AllSpikingSynapses&lt;-AllDSSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="671.79,3478.49,687.41,3464.18,684.12,3485.11,671.79,3478.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[587b9d07fbc4fdda6579551662042140]
reverse link AllSpikingSynapses to AllSTDPSynapses--><path d="M1072.28,3482.23 C1079.66,3496 1087.09,3509.84 1094.52,3523.69 " fill="none" id="AllSpikingSynapses&lt;-AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1065.88,3485.11,1062.59,3464.18,1078.21,3478.49,1065.88,3485.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23aac5e482fb680cc0cec1f0f0dd59a6]
reverse link AllSpikingSynapsesDeviceProperties to AllDSSynapsesDeviceProperties--><path d="M3873.8,2153.46 C3835.99,2250.96 3773.12,2413.12 3738.92,2501.3 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3867.37,2150.68,3881.13,2134.56,3880.42,2155.74,3867.37,2150.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9a3e383543838c874b32001a8709207]
reverse link AllSpikingSynapsesDeviceProperties to AllSTDPSynapsesDeviceProperties--><path d="M3918.62,2154.42 C3931.83,2233.31 3952,2353.87 3967.02,2443.62 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3911.7,2155.44,3915.3,2134.56,3925.51,2153.13,3911.7,2155.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f591e114573ccd2409f159b73ea72911]
reverse link AllVertices to AllSpikingNeurons--><path d="M5798,2231.45 C5798,2293.72 5798,2364.55 5798,2424.72 " fill="none" id="AllVertices&lt;-AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5791,2231.12,5798,2211.12,5805,2231.12,5791,2231.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fcd28df228b50666b72099cd983e7d22]
reverse link AllVerticesDeviceProperties to AllSpikingNeuronsDeviceProperties--><path d="M4136.31,1571.7 C4118.23,1616.93 4084.97,1682.61 4034,1719 C3932.18,1791.68 3859.95,1705.12 3759,1779 C3675.34,1840.22 3626.99,1956.65 3605.16,2022.49 " fill="none" id="AllVerticesDeviceProperties&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4129.82,1569.06,4143.44,1552.83,4142.91,1574.01,4129.82,1569.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[10477add2578806cc5f98b33b8db5e65]
reverse link Connections to ConnGrowth--><path d="M2355.64,1668.26 C2373.1,1735.63 2394.04,1816.44 2412.56,1887.93 " fill="none" id="Connections&lt;-ConnGrowth" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2348.82,1669.84,2350.58,1648.72,2362.37,1666.33,2348.82,1669.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[513ec0388948448dab3ce17eb36460f7]
reverse link Connections to ConnStatic--><path d="M1991.52,1657.84 C1923.56,1692.63 1854.56,1733.34 1795,1779 C1745.19,1817.19 1697.84,1866.3 1657.75,1913.31 " fill="none" id="Connections&lt;-ConnStatic" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1988.7,1651.43,2009.7,1648.66,1995.01,1663.92,1988.7,1651.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[19d836ace92e712b0d8c405f49d503c3]
reverse link Hdf5Recorder to Hdf5GrowthRecorder--><path d="M5188.86,2281.87 C5209.77,2337.26 5231.64,2395.17 5250.05,2443.94 " fill="none" id="Hdf5Recorder&lt;-Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5182.17,2283.98,5181.66,2262.8,5195.27,2279.04,5182.17,2283.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd8f9de4d0029903f75705d233ca28a]
reverse link IFunctionNode to GenericFunctionNode--><path d="M7197.64,1177.05 C7121.76,1255.98 6985.36,1397.87 6913.77,1472.34 " fill="none" id="IFunctionNode&lt;-GenericFunctionNode" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7192.62,1172.17,7211.53,1162.6,7202.71,1181.87,7192.62,1172.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9f6fa59aebac9bc7112aaf284395847c]
reverse link IRecorder to Hdf5Recorder--><path d="M5001.39,1642.79 C5019.09,1712.6 5041.82,1802.2 5061.91,1881.39 " fill="none" id="IRecorder&lt;-Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4994.55,1644.3,4996.41,1623.19,5008.12,1640.86,4994.55,1644.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7186e99c451d736dd7b9f0c726ab5277]
reverse link IRecorder to XmlRecorder--><path d="M4894.71,1640.1 C4831.96,1736.42 4743.8,1871.75 4683.1,1964.92 " fill="none" id="IRecorder&lt;-XmlRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4888.95,1636.13,4905.73,1623.19,4900.68,1643.77,4888.95,1636.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7269b632a17f4028eba21f1bd63939ed]
reverse link Layout to DynamicLayout--><path d="M6548.05,1717.52 C6548.7,1718.02 6549.35,1718.51 6550,1719 C6591.7,1750.43 6612.62,1743.6 6651,1779 C6715.63,1838.62 6772.06,1921.54 6809.6,1983.79 " fill="none" id="Layout&lt;-DynamicLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6543.63,1722.95,6532.14,1705.15,6552.22,1711.9,6543.63,1722.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[891067ebdc7a855417ab5d2553f427ef]
reverse link Layout to FixedLayout--><path d="M6382.64,1739.22 C6399.79,1830.46 6418.62,1930.66 6431.06,1996.81 " fill="none" id="Layout&lt;-FixedLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6375.71,1740.24,6378.89,1719.29,6389.47,1737.66,6375.71,1740.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2a96d1a257e41c08a9c3a3f8aadcb29]
reverse link Model to CPUModel--><path d="M4379,1285.22 C4379,1343.92 4379,1406.83 4379,1452.89 " fill="none" id="Model&lt;-CPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4372,1285.09,4379,1265.09,4386,1285.09,4372,1285.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8342ff62b1882cdc2aad46dd54e535e9]
reverse link Model to GPUModel--><path d="M4193.49,1205.8 C4101.72,1248 3987.56,1300.49 3878.88,1350.46 " fill="none" id="Model&lt;-GPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4190.74,1199.36,4211.84,1197.36,4196.59,1212.08,4190.74,1199.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8e79f27ee7b582c0f30a64eceb9600c6]
reverse link XmlRecorder to XmlGrowthRecorder--><path d="M4553.41,2197.23 C4513.32,2279.42 4461.44,2385.79 4423.96,2462.61 " fill="none" id="XmlRecorder&lt;-XmlGrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4547.23,2193.93,4562.29,2179.02,4559.81,2200.07,4547.23,2193.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7b176ba4d3de823aebcc641ddd35342b]
reverse link XmlRecorder to XmlSTDPRecorder--><path d="M4680.96,2196.82 C4723.13,2274.78 4777.12,2374.63 4818.08,2450.36 " fill="none" id="XmlRecorder&lt;-XmlSTDPRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4674.69,2199.94,4671.34,2179.02,4687.01,2193.28,4674.69,2199.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7b242bc45f077880469141c87516fa7]
reverse link AllSpikingNeurons to EventBuffer--><path d="M5679.97,2714.13 C5668.96,2730.27 5658.42,2746.74 5649,2763 C5603.72,2841.12 5564.02,2935.51 5536.85,3006.5 " fill="none" id="AllSpikingNeurons&lt;-EventBuffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5687.66,2703.02,5680.9573,2705.6796,5680.8343,2712.8896,5687.537,2710.2301,5687.66,2703.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25007e0d6d2bc2691ed586569b6b25e2]
reverse link Connections to AllEdges--><path d="M1658.82,1646.97 C1531.8,1681.76 1401.98,1725.23 1285,1779 C1279.24,1781.65 1273.48,1784.38 1267.73,1787.18 " fill="none" id="Connections&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1671.5,1643.53,1664.6607,1641.2444,1659.9204,1646.6785,1666.7597,1648.9641,1671.5,1643.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[82859cdc4fc284e53b85be6b34e88627]
reverse link Connections to EdgeIndexMap--><path d="M2748.81,1652.39 C2932.11,1708.73 3108.06,1765.14 3125,1779 C3187.93,1830.49 3230.53,1913.2 3256.19,1977.47 " fill="none" id="Connections&lt;-EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2736.17,1648.5,2740.7324,1654.0843,2747.6419,1652.0207,2743.0795,1646.4364,2736.17,1648.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbf6625826c2ccd9ab80e1a9e4bec40a]
reverse link ConnectionsFactory to Connections--><path d="M2318,1208.11 C2318,1262.99 2318,1334.59 2318,1395.45 " fill="none" id="ConnectionsFactory&lt;-Connections" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2318,1194.89,2314,1200.89,2318,1206.89,2322,1200.89,2318,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[324f5d3a776c0915160172bb3bb1f68c]
reverse link EdgesFactory to AllEdges--><path d="M875,1610.28 C875,1656.92 875,1717.33 875,1778.96 " fill="none" id="EdgesFactory&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="875,1597.19,871,1603.19,875,1609.19,879,1603.19,875,1597.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2b5495829f9173c044fb8801621d6187]
reverse link GPUModel to AllSpikingNeuronsDeviceProperties--><path d="M3535.85,1706.89 C3552.73,1818.33 3573,1952.14 3583.64,2022.42 " fill="none" id="GPUModel&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3533.86,1693.76,3530.8085,1700.2936,3535.6659,1705.6233,3538.7174,1699.0897,3533.86,1693.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f6129bcb9c73284e17b33b28d9016c76]
reverse link GPUModel to AllSpikingSynapsesDeviceProperties--><path d="M3674.2,1703.71 C3694.73,1728.43 3714.85,1753.94 3733,1779 C3787.78,1854.65 3840.76,1948.77 3873.11,2009.35 " fill="none" id="GPUModel&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3665.69,1693.54,3666.4723,1700.7085,3673.3904,1702.7435,3672.608,1695.575,3665.69,1693.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aeaf2a6bd64d076c9a29b9ba5666847]
reverse link GPUModel to EdgeIndexMap--><path d="M3434.23,1705.93 C3397.51,1796.97 3354.7,1903.14 3324.73,1977.44 " fill="none" id="GPUModel&lt;-EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3439.13,1693.76,3433.1778,1697.8307,3434.646,1704.8908,3440.5983,1700.82,3439.13,1693.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[147440af9da7b06bb1c25492ebb2b6fc]
reverse link IFunctionNode to Operations--><path d="M7252,1175.88 C7252,1264.76 7252,1435.56 7252,1497.68 " fill="none" id="IFunctionNode&lt;-Operations" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7252,1162.6,7248,1168.6,7252,1174.6,7256,1168.6,7252,1162.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ced99db6c97f860d3e6f1f558ceb823]
reverse link IFunctionNode to Operations::op--><path d="M7275.4,1174.86 C7291.52,1215.39 7311.51,1272.56 7320,1325 C7359.39,1568.29 7331.4,1861.98 7314.42,1996.79 " fill="none" id="IFunctionNode&lt;-Operations::op" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7270.43,1162.58,7268.9761,1169.643,7274.9366,1173.7016,7276.3905,1166.6386,7270.43,1162.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[efb7ef13657b6fc949565044919673f3]
reverse link Layout to AllVertices--><path d="M6142.49,1723.98 C6073.52,1793.45 5997.85,1869.68 5935.04,1932.95 " fill="none" id="Layout&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6151.74,1714.66,6144.6734,1716.0962,6143.2811,1723.1716,6150.3478,1721.7354,6151.74,1714.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[95ba44a0b3c69ce18700dade6dfd248d]
reverse link LayoutFactory to Layout--><path d="M6342,1208.28 C6342,1242.8 6342,1283.93 6342,1324.83 " fill="none" id="LayoutFactory&lt;-Layout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6342,1194.89,6338,1200.89,6342,1206.89,6346,1200.89,6342,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0e5738770afdb953f3cb9465cb228f84]
reverse link Model to Connections--><path d="M4198.82,1138.61 C3931.29,1167.37 3414.1,1230.1 2982,1325 C2893.07,1344.53 2798.63,1369.66 2709.73,1395.37 " fill="none" id="Model&lt;-Connections" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4211.77,1137.23,4205.3779,1133.8922,4199.8383,1138.5089,4206.2305,1141.8467,4211.77,1137.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[68c77613e519ddb3f64ca187dac87597]
reverse link Model to IRecorder--><path d="M4557.54,1221.04 C4611.31,1252.88 4669.86,1289.16 4722,1325 C4764.96,1354.53 4810.22,1389.05 4850.21,1420.82 " fill="none" id="Model&lt;-IRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4546.14,1214.31,4549.2785,1220.8023,4556.4785,1220.4023,4553.34,1213.91,4546.14,1214.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a911b337811af7fd7ce810fac5ac8c54]
reverse link Model to Layout--><path d="M4558.64,1206.76 C4614.54,1229.82 4677.21,1251.95 4737,1265 C5018.46,1326.45 5757.21,1238.48 6032,1325 C6073,1337.91 6113.92,1357.64 6151.97,1379.69 " fill="none" id="Model&lt;-Layout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4546.44,1201.67,4550.44,1207.67,4557.5169,1206.2854,4553.5169,1200.2854,4546.44,1201.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da4e37961616ea89232dc94550b7be3e]
reverse link OperationManager to IFunctionNode--><path d="M7252,549.43 C7252,692.32 7252,970.57 7252,1076.33 " fill="none" id="OperationManager&lt;-IFunctionNode" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7252,536.03,7248,542.03,7252,548.03,7256,542.03,7252,536.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79989c5c612cd705f8c6af7a6267fbc0]
reverse link RecorderFactory to IRecorder--><path d="M4971,1207.94 C4971,1270.72 4971,1355.46 4971,1420.95 " fill="none" id="RecorderFactory&lt;-IRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4971,1194.89,4967,1200.89,4971,1206.89,4975,1200.89,4971,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[263ae887246c1ce3b32534d14bc96b50]
reverse link Simulator to Model--><path d="M4379,927.41 C4379,943.52 4379,959.1 4379,973.94 " fill="none" id="Simulator&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4379,914.38,4375,920.38,4379,926.38,4383,920.38,4379,914.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[420839a3a3a413a1278c95e345e5584e]
reverse link VerticesFactory to AllVertices--><path d="M5798,1610.44 C5798,1697.26 5798,1831.69 5798,1932.94 " fill="none" id="VerticesFactory&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5798,1597.19,5794,1603.19,5798,1609.19,5802,1603.19,5798,1597.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1c85b8207771a3600805682c49a79883]
reverse link ConnGrowth to ConnGrowth::GrowthParams--><path d="M2460,2271.42 C2460,2350.84 2460,2437.03 2460,2494.95 " fill="none" id="ConnGrowth&lt;-ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2460" cy="2264.15" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2460" x2="2460" y1="2272.15" y2="2256.15"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2452" x2="2468" y1="2264.15" y2="2264.15"/><!--MD5=[7436606c18ecdbda5eaebb84cf9adb19]
reverse link ConnStatic to ConnStatic::DistDestVertex--><path d="M1540,2245.77 C1540,2344.31 1540,2459.98 1540,2520.76 " fill="none" id="ConnStatic&lt;-ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1540" cy="2238.74" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1540" x2="1540" y1="2246.74" y2="2230.74"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1532" x2="1548" y1="2238.74" y2="2238.74"/><!--MD5=[5a8d3fbc42f80913afa6dc1778a071da]
reverse link Operations to Operations::op--><path d="M7255.64,1561.4 C7264.21,1651.67 7285.74,1878.59 7296.96,1996.8 " fill="none" id="Operations&lt;-Operations::op" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7254.9621" cy="1554.1636" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7255.7241" x2="7254.2" y1="1562.1272" y2="1546.2"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7246.9984" x2="7262.9257" y1="1554.9257" y2="1553.4016"/><!--MD5=[7eb4ce3f57948858fa43e9a97dbd66b6]
@startuml GraphittiClassDiagram






class AllDSSynapses {
	+AllDSSynapses()
	+AllDSSynapses(const int numVertices, const int maxEdges)
	+~AllDSSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDSSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllDynamicSTDPSynapses {
	+AllDynamicSTDPSynapses()
	+AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllDynamicSTDPSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllEdges {
	+AllEdges()
	+AllEdges(const int numVertices, const int maxEdges)
	+~AllEdges()
	+W_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	#edgeOrdinalToType(const int typeOrdinal) : edgeType
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	+addEdge(BGSIZE& iEdg, edgeType type, const int srcVertex, const int destVertex, const BGFLOAT deltaT) : void
	+{abstract} advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	+advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+{abstract} copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	+createEdgeIndexMap(shared_ptr<EdgeIndexMap> edgeIndexMap) : void
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void
	+load(Archive& archive) : void
	+loadParameters() : void
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+save(Archive& archive) : void {query}
	+{abstract} setAdvanceEdgesDeviceParams() : void
	+{abstract} setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllIFNeurons {
	+AllIFNeurons()
	+~AllIFNeurons()
	-IinjectRange_ : BGFLOAT
	-InoiseRange_ : BGFLOAT
	-VinitRange_ : BGFLOAT
	-VresetRange_ : BGFLOAT
	-VrestingRange_ : BGFLOAT
	-VthreshRange_ : BGFLOAT
	-starterVresetRange_ : BGFLOAT
	-starterVthreshRange_ : BGFLOAT
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
	+toString(const int index) : string {query}
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+loadParameters() : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int i) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int i) : void {query}
}


class AllIZHNeurons {
	+AllIZHNeurons()
	+~AllIZHNeurons()
	+{static} Create() : AllVertices*
	-excAconst_ : BGFLOAT
	-excBconst_ : BGFLOAT
	-excCconst_ : BGFLOAT
	-excDconst_ : BGFLOAT
	-inhAconst_ : BGFLOAT
	-inhBconst_ : BGFLOAT
	-inhCconst_ : BGFLOAT
	-inhDconst_ : BGFLOAT
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
	-{static} DEFAULT_a : static constexpr BGFLOAT
	-{static} DEFAULT_b : static constexpr BGFLOAT
	-{static} DEFAULT_c : static constexpr BGFLOAT
	-{static} DEFAULT_d : static constexpr BGFLOAT
	+toString(const int index) : string {query}
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#fire(const int index) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int index) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int index) : void {query}
}


class AllLIFNeurons {
	+AllLIFNeurons()
	+~AllLIFNeurons()
	+{static} Create() : AllVertices*
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#fire(const int index) : void
	+printParameters() : void {query}
}


class AllNeuroEdges {
	+AllNeuroEdges()
	+~AllNeuroEdges()
	+psr_ : BGFLOAT*
	+edgSign(const edgeType type) : int
	+{static} SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSTDPSynapses {
	+AllSTDPSynapses()
	+AllSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllSTDPSynapses()
	+{static} Create() : AllEdges*
	+Aneg_E_ : BGFLOAT
	+Aneg_I_ : BGFLOAT
	+Apos_E_ : BGFLOAT
	+Apos_I_ : BGFLOAT
	+Wex_E_ : BGFLOAT
	+Wex_I_ : BGFLOAT
	+defaultSTDPgap_ : BGFLOAT
	#synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT
	+tauneg_E_ : BGFLOAT
	+tauneg_I_ : BGFLOAT
	+taupos_E_ : BGFLOAT
	+taupos_I_ : BGFLOAT
	+tauspost_E_ : BGFLOAT
	+tauspost_I_ : BGFLOAT
	+tauspre_E_ : BGFLOAT
	+tauspre_I_ : BGFLOAT
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueuePost(const BGSIZE iEdg) : bool
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	-stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllSpikingNeurons {
	+AllSpikingNeurons()
	+~AllSpikingNeurons()
	#fAllowBackPropagation_ : bool
	+getSpikeHistory(int index, int offIndex) : uint64_t
	+vertexEvents_ : vector<EventBuffer>
	+hasFired_ : vector<bool>
	#{abstract} advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, const EdgeIndexMap* edgeIndexMap) : void
	#clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} clearNeuronSpikeCounts(void* allVerticesDevice) : void
	+clearSpikeCounts() : void
	#copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	#copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	#fire(const int index) : void
	+setAdvanceVerticesDeviceParams(AllEdges& synapses) : void
	+setupVertices() : void
}


class AllSpikingSynapses {
	+AllSpikingSynapses()
	+AllSpikingSynapses(const int numVertices, const int maxEdges)
	+~AllSpikingSynapses()
	+{static} Create() : AllEdges*
	+delay_EE_ : BGFLOAT
	+delay_EI_ : BGFLOAT
	+delay_IE_ : BGFLOAT
	+delay_II_ : BGFLOAT
	+tau_EE_ : BGFLOAT
	+tau_EI_ : BGFLOAT
	+tau_IE_ : BGFLOAT
	+tau_II_ : BGFLOAT
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueue(const BGSIZE iEdg) : bool
	#updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	#copyDeviceToHost(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+preSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setAdvanceEdgesDeviceParams() : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllVertices {
	+AllVertices()
	+~AllVertices()
	+summationMap_ : BGFLOAT*
	#size_ : int
	#fileLogger_ : log4cplus::Logger
	#vertexLogger_ : log4cplus::Logger
	+{abstract} toString(const int i) : string {query}
	+{abstract} advanceVertices(AllEdges& edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	+{abstract} advanceVertices(AllEdges& edges, const EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+{abstract} copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronHostToDevice(void* allVerticesDevice) : void
	+{abstract} createAllVertices(Layout* layout) : void
	+{abstract} deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+{abstract} setAdvanceVerticesDeviceParams(AllEdges& edges) : void
	+setupVertices() : void
}


class CPUModel {
	+CPUModel()
	+~CPUModel()
	+advance() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+finish() : void
	+updateConnections() : void
}


class ConnGrowth {
	+ConnGrowth()
	+~ConnGrowth()
	+W_ : CompleteMatrix*
	+area_ : CompleteMatrix*
	+delta_ : CompleteMatrix*
	+{static} Create() : Connections*
	+growthParams_ : GrowthParams
	+deltaR_ : VectorMatrix*
	+outgrowth_ : VectorMatrix*
	+radii_ : VectorMatrix*
	+rates_ : VectorMatrix*
	+updateConnections(AllVertices& neurons, Layout* layout) : bool
	+radiiSize_ : int
	+spikeCounts_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+printRadii() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void
	-updateConns(AllVertices& neurons) : void
	-updateFrontiers(const int numVertices, Layout* layout) : void
	-updateOverlap(BGFLOAT numVertices, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& neurons, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnStatic {
	+ConnStatic()
	+~ConnStatic()
	-excWeight_ : BGFLOAT
	+getConnsRadiusThresh() : BGFLOAT {query}
	-inhWeight_ : BGFLOAT
	-rewiringProbability_ : BGFLOAT
	-threshConnsRadius_ : BGFLOAT
	-WCurrentEpoch_ : BGFLOAT*
	+getWCurrentEpoch() : BGFLOAT* {query}
	+{static} Create() : Connections*
	-connsPerVertex_ : int
	-radiiSize_ : int
	-destVertexIndexCurrentEpoch_ : int*
	+getDestVertexIndexCurrentEpoch() : int* {query}
	+getSourceVertexIndexCurrentEpoch() : int* {query}
	-sourceVertexIndexCurrentEpoch_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void
}


abstract class Connections {
	+Connections()
	+~Connections()
	+updateConnections(AllVertices& vertices, Layout* layout) : bool
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	#edges_ : shared_ptr<AllEdges>
	+getEdges() : shared_ptr<AllEdges> {query}
	+getEdgeIndexMap() : shared_ptr<EdgeIndexMap> {query}
	#synapseIndexMap_ : shared_ptr<EdgeIndexMap>
	+createEdgeIndexMap() : void
	+createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices& vertices, AllEdges& synapses) : void
	+{abstract} loadParameters() : void
	+{abstract} printParameters() : void {query}
	+{abstract} setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnectionsFactory {
	-ConnectionsFactory()
	+~ConnectionsFactory()
	-invokeCreateFunction(const string& className) : Connections*
	+{static} getInstance() : ConnectionsFactory*
	-createFunctions : ConnectionsFunctionMap
	-connectionsInstance : shared_ptr<Connections>
	+createConnections(const string& className) : shared_ptr<Connections>
	-registerClass(const string& className, CreateFunction function) : void
}


class DynamicLayout {
	+DynamicLayout()
	+~DynamicLayout()
	-fractionEndogenouslyActive_ : BGFLOAT
	-fractionExcitatory_ : BGFLOAT
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


class EdgesFactory {
	-EdgesFactory()
	+~EdgesFactory()
	-invokeCreateFunction(const string& className) : AllEdges*
	+{static} getInstance() : EdgesFactory*
	-createFunctions : EdgesFunctionMap
	+createEdges(const string& className) : shared_ptr<AllEdges>
	-edgesInstance_ : shared_ptr<AllEdges>
	-registerClass(const string& className, CreateFunction function) : void
}


class EventBuffer {
	+EventBuffer(int maxEvents)
	-epochStart_ : int
	+getNumEventsInEpoch() : int {query}
	-numEventsInEpoch_ : int
	-queueEnd_ : int
	-queueFront_ : int
	+getPastEvent(int offset) : uint64_t {query}
	+operator[](int i) : uint64_t {query}
	-eventTimeSteps_ : vector<uint64_t>
	+clear() : void
	+insertEvent(uint64_t timeStep) : void
	+resize(int maxEvents) : void
	+startNewEpoch() : void
}


class FixedLayout {
	+FixedLayout()
	+~FixedLayout()
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


class GPUModel {
	+GPUModel()
	+~GPUModel()
	#allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*
	#allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*
	#synapseIndexMapDevice_ : EdgeIndexMap*
	#randNoise_d : float*
	-addEdge(AllEdges& synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate& source, Coordinate& dest, BGFLOAT deltaT) : void
	+advance() : void
	#allocDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-allocSynapseImap(int count) : void
	#calcSummationMap() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+copySynapseIndexMapHostToDevice(EdgeIndexMap& synapseIndexMapHost, int numVertices) : void
	-createEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-deleteSynapseImap() : void
	-eraseEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex) : void
	+finish() : void
	+printGPUSynapsesPropsModel() : void {query}
	+setupSim() : void
	+updateConnections() : void
	-updateHistory() : void
}


class GenericFunctionNode {
	+GenericFunctionNode(const Operations::op& operationType, const std::function<void ( )>& function)
	-function<void()
	+~GenericFunctionNode()
	+invokeFunction(const Operations::op& operation) : bool {query}
}


class Hdf5GrowthRecorder {
	+Hdf5GrowthRecorder()
	+~Hdf5GrowthRecorder()
	#radiiHistory_ : BGFLOAT*
	#ratesHistory_ : BGFLOAT*
	#dataSetRadiiHist_ : DataSet
	#dataSetRatesHist_ : DataSet
	+{static} Create() : IRecorder*
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+term() : void
	#writeRadiiRates() : void
}


class Hdf5Recorder {
	+Hdf5Recorder()
	#dataSetNeuronThresh_ : DataSet*
	#dataSetNeuronTypes_ : DataSet*
	#dataSetProbedNeurons_ : DataSet*
	#dataSetSimulationEndTime_ : DataSet*
	#dataSetSpikesHist_ : DataSet*
	#dataSetSpikesProbedNeurons_ : DataSet*
	#dataSetStarterNeurons_ : DataSet*
	#dataSetTsim_ : DataSet*
	#dataSetXloc_ : DataSet*
	#dataSetYloc_ : DataSet*
	#resultOut_ : H5File*
	+{static} Create() : IRecorder*
	#offsetSpikesProbedNeurons_ : hsize_t*
	#spikesHistory_ : int*
	#spikesProbedNeurons_ : vector<uint64_t>*
	+compileHistories(AllVertices& neurons) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
	+term() : void
}


abstract class IFunctionNode {
	+~IFunctionNode()
	#operationType_ : Operations::op
	+{abstract} invokeFunction(const Operations::op& operation) : bool {query}
}


abstract class IRecorder {
	+~IRecorder()
	#fileLogger_ : log4cplus::Logger
	#resultFileName_ : string
	+{abstract} compileHistories(AllVertices& vertices) : void
	#{abstract} getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+{abstract} getValues() : void
	+{abstract} init() : void
	+{abstract} initDefaultValues() : void
	+{abstract} initValues() : void
	+{abstract} printParameters() : void
	+{abstract} saveSimData(const AllVertices& vertices) : void
	+{abstract} term() : void
}


abstract class Layout {
	+Layout()
	+~Layout()
	+numCallerVertices_ : BGSIZE
	+numEndogenouslyActiveNeurons_ : BGSIZE
	+dist2_ : CompleteMatrix*
	+dist_ : CompleteMatrix*
	+xloc_ : VectorMatrix*
	+yloc_ : VectorMatrix*
	-gridLayout_ : bool
	+starterMap_ : bool*
	+{abstract} edgType(const int srcVertex, const int destVertex) : edgeType
	#fileLogger_ : log4cplus::Logger
	+getVertices() : shared_ptr<AllVertices> {query}
	#vertices_ : shared_ptr<AllVertices>
	#callerVertexList_ : vector<int>
	#endogenouslyActiveNeuronList_ : vector<int>
	#inhibitoryNeuronLayout_ : vector<int>
	+probedNeuronList_ : vector<int>
	#psapVertexList_ : vector<int>
	#responderVertexList_ : vector<int>
	+vertexTypeMap_ : vertexType*
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	-initVerticesLocs() : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+setupLayout() : void
}


class LayoutFactory {
	-LayoutFactory()
	+~LayoutFactory()
	-invokeCreateFunction(const string& className) : Layout*
	+{static} getInstance() : LayoutFactory*
	-createFunctions : LayoutFunctionMap
	+createLayout(const string& className) : shared_ptr<Layout>
	-layoutInstance : shared_ptr<Layout>
	-registerClass(const string& className, CreateFunction function) : void
}


abstract class Model {
	+Model()
	+~Model()
	#fileLogger_ : log4cplus::Logger
	#connections_ : shared_ptr<Connections>
	+getConnections() : shared_ptr<Connections> {query}
	+getRecorder() : shared_ptr<IRecorder> {query}
	#recorder_ : shared_ptr<IRecorder>
	+getLayout() : shared_ptr<Layout> {query}
	#layout_ : shared_ptr<Layout>
	+{abstract} advance() : void
	#{abstract} copyCPUtoGPU() : void
	#{abstract} copyGPUtoCPU() : void
	#createAllVertices() : void
	+{abstract} finish() : void
	#logSimStep() : void {query}
	+saveResults() : void
	+setupSim() : void
	+{abstract} updateConnections() : void
	+updateHistory() : void
}


class OperationManager {
	-OperationManager()
	+~OperationManager()
	+{static} getInstance() : OperationManager&
	-functionList_ : list<unique_ptr<IFunctionNode>>
	-logger_ : log4cplus::Logger
	+operationToString(const Operations::op& operation) : string {query}
	+executeOperation(const Operations::op& operation) : void {query}
	+registerOperation(const Operations::op& operation, const function<void ( )>& function) : void
}


class Operations {
}


class RecorderFactory {
	-RecorderFactory()
	+~RecorderFactory()
	-invokeCreateFunction(const string& className) : IRecorder*
	+{static} getInstance() : RecorderFactory*
	-createFunctions : RecorderFunctionMap
	+createRecorder(const string& className) : shared_ptr<IRecorder>
	-recorderInstance : shared_ptr<IRecorder>
	-registerClass(const string& className, CreateFunction function) : void
}


class Simulator {
	-Simulator()
	+~Simulator()
	-deltaT_ : BGFLOAT
	-epochDuration_ : BGFLOAT
	+getDeltaT() : BGFLOAT {query}
	+getEpochDuration() : BGFLOAT {query}
	+getMaxRate() : BGFLOAT {query}
	-maxRate_ : BGFLOAT
	+getPSummationMap() : BGFLOAT* {query}
	-pSummationMap_ : BGFLOAT*
	+{static} getInstance() : Simulator&
	+getShort_timer() : Timer
	+getTimer() : Timer
	-short_timer : Timer
	-timer : Timer
	+instantiateSimulatorObjects() : bool
	+getRgEndogenouslyActiveNeuronMap() : bool* {query}
	-rgEndogenouslyActiveNeuronMap_ : bool*
	-currentEpoch_ : int
	+getCurrentStep() : int {query}
	+getHeight() : int {query}
	+getMaxEdgesPerVertex() : int {query}
	+getMaxFiringRate() : int {query}
	+getNumEpochs() : int {query}
	+getTotalVertices() : int {query}
	+getWidth() : int {query}
	-height_ : int
	-maxEdgesPerVertex_ : int
	-maxFiringRate_ : int
	-numEpochs_ : int
	-totalNeurons_ : int
	-width_ : int
	-consoleLogger_ : log4cplus::Logger
	-edgeLogger_ : log4cplus::Logger
	-fileLogger_ : log4cplus::Logger
	+getInitRngSeed() : long {query}
	+getNoiseRngSeed() : long {query}
	-initRngSeed_ : long
	-noiseRngSeed_ : long
	+getModel() : shared_ptr<Model> {query}
	-model_ : shared_ptr<Model>
	-configFileName_ : string
	-deserializationFileName_ : string
	+getConfigFileName() : string {query}
	+getDeserializationFileName() : string {query}
	+getSerializationFileName() : string {query}
	+getStimulusFileName() : string {query}
	-serializationFileName_ : string
	-stimulusFileName_ : string
	+getRgNeuronTypeMap() : vertexType* {query}
	-rgNeuronTypeMap_ : vertexType*
	+advanceEpoch(const int& currentEpoch) : void {query}
	+copyCPUSynapseToGPU() : void
	+copyGPUSynapseToCPU() : void
	+finish() : void
	-freeResources() : void
	+loadParameters() : void
	+printParameters() : void {query}
	+reset() : void
	+saveResults() : void {query}
	+setConfigFileName(const string& fileName) : void
	+setDeserializationFileName(const string& fileName) : void
	+setPSummationMap(BGFLOAT* summationMap) : void
	+setSerializationFileName(const string& fileName) : void
	+setStimulusFileName(const string& fileName) : void
	+setup() : void
	+simulate() : void
}


class VerticesFactory {
	-VerticesFactory()
	+~VerticesFactory()
	-invokeCreateFunction(const string& className) : AllVertices*
	+{static} getInstance() : VerticesFactory*
	-createFunctions : VerticesFunctionMap
	+createVertices(const string& className) : shared_ptr<AllVertices>
	-verticesInstance : shared_ptr<AllVertices>
	-registerClass(const string& className, CreateFunction function) : void
}


class XmlGrowthRecorder {
	+XmlGrowthRecorder()
	+~XmlGrowthRecorder()
	-radiiHistory_ : CompleteMatrix
	-ratesHistory_ : CompleteMatrix
	+{static} Create() : IRecorder*
	+compileHistories(AllVertices& neurons) : void
	-getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
}


class XmlRecorder {
	+XmlRecorder()
	+{static} Create() : IRecorder*
	#spikesHistory_ : VectorMatrix
	#resultOut_ : ofstream
	+compileHistories(AllVertices& vertices) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& vertices) : void
	+term() : void
}


class XmlSTDPRecorder {
	+XmlSTDPRecorder()
	+~XmlSTDPRecorder()
	+{static} Create() : IRecorder*
	+toXML(string name, vector<vector<BGFLOAT>> MatrixToWrite) : string {query}
	+toXML(string name, vector<vector<int>> MatrixToWrite) : string {query}
	#weightsHistory_ : vector<vector<BGFLOAT>>
	#destNeuronIndexHistory_ : vector<vector<int>>
	#sourceNeuronIndexHistory_ : vector<vector<int>>
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
}


enum Operations::op {
	copyFromGPU
	copyToGPU
	deallocateGPUMemory
	deserialize
	loadParameters
	printParameters
	restoreToDefault
	serialize
}


enum enumClassSynapses {
	classAllDSSynapses
	classAllDynamicSTDPSynapses
	classAllSTDPSynapses
	classAllSpikingSynapses
	undefClassSynapses
}


class AllDSSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllDynamicSTDPSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllEdgesDeviceProperties {
	+W_ : BGFLOAT*
	+psr_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
}


class AllIFNeuronsDeviceProperties {
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
}


class AllIZHNeuronsDeviceProperties {
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
}


class AllSTDPSynapsesDeviceProperties {
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+useFroemkeDanSTDP_ : bool*
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
}


class AllSpikingNeuronsDeviceProperties {
	+hasFired_ : bool*
	+spikeCountOffset_ : int*
	+spikeCount_ : int*
	+spikeHistory_ : uint64_t**
}


class AllSpikingSynapsesDeviceProperties {
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
}


class AllVerticesDeviceProperties {
	+summationMap_ : BGFLOAT*
}


class ConnGrowth::GrowthParams {
	+beta : BGFLOAT
	+epsilon : BGFLOAT
	+maxRate : BGFLOAT
	+minRadius : BGFLOAT
	+rho : BGFLOAT
	+startRadius : BGFLOAT
	+targetRate : BGFLOAT
}


class ConnStatic::DistDestVertex {
	+dist : BGFLOAT
	+operator<(DistDestVertex other) : bool {query}
	+destVertex : int
}


class EdgeIndexMap {
	+EdgeIndexMap()
	+EdgeIndexMap(int vertexCount, int edgeCount)
	+~EdgeIndexMap()
	-numOfEdges_ : BGSIZE
	-numOfVertices_ : BGSIZE
	+incomingEdgeBegin_ : BGSIZE*
	+incomingEdgeCount_ : BGSIZE*
	+incomingEdgeIndexMap_ : BGSIZE*
	+outgoingEdgeBegin_ : BGSIZE*
	+outgoingEdgeCount_ : BGSIZE*
	+outgoingEdgeIndexMap_ : BGSIZE*
}






.AllEdges <|- - .AllNeuroEdges


.AllEdgesDeviceProperties <|- - .AllSpikingSynapsesDeviceProperties


.AllIFNeurons <|- - .AllIZHNeurons


.AllIFNeurons <|- - .AllLIFNeurons


.AllIFNeuronsDeviceProperties <|- - .AllIZHNeuronsDeviceProperties


.AllNeuroEdges <|- - .AllSpikingSynapses


.AllSTDPSynapses <|- - .AllDynamicSTDPSynapses


.AllSTDPSynapsesDeviceProperties <|- - .AllDynamicSTDPSynapsesDeviceProperties


.AllSpikingNeurons <|- - .AllIFNeurons


.AllSpikingNeuronsDeviceProperties <|- - .AllIFNeuronsDeviceProperties


.AllSpikingSynapses <|- - .AllDSSynapses


.AllSpikingSynapses <|- - .AllSTDPSynapses


.AllSpikingSynapsesDeviceProperties <|- - .AllDSSynapsesDeviceProperties


.AllSpikingSynapsesDeviceProperties <|- - .AllSTDPSynapsesDeviceProperties


.AllVertices <|- - .AllSpikingNeurons


.AllVerticesDeviceProperties <|- - .AllSpikingNeuronsDeviceProperties


.Connections <|- - .ConnGrowth


.Connections <|- - .ConnStatic


.Hdf5Recorder <|- - .Hdf5GrowthRecorder


.IFunctionNode <|- - .GenericFunctionNode


.IRecorder <|- - .Hdf5Recorder


.IRecorder <|- - .XmlRecorder


.Layout <|- - .DynamicLayout


.Layout <|- - .FixedLayout


.Model <|- - .CPUModel


.Model <|- - .GPUModel


.XmlRecorder <|- - .XmlGrowthRecorder


.XmlRecorder <|- - .XmlSTDPRecorder






.AllSpikingNeurons *- - .EventBuffer


.Connections *- - .AllEdges


.Connections *- - .EdgeIndexMap


.ConnectionsFactory *- - .Connections


.EdgesFactory *- - .AllEdges


.GPUModel o- - .AllSpikingNeuronsDeviceProperties


.GPUModel o- - .AllSpikingSynapsesDeviceProperties


.GPUModel o- - .EdgeIndexMap


.IFunctionNode *- - .Operations


.IFunctionNode *- - .Operations::op


.Layout *- - .AllVertices


.LayoutFactory *- - .Layout


.Model *- - .Connections


.Model *- - .IRecorder


.Model *- - .Layout


.OperationManager *- - .IFunctionNode


.RecorderFactory *- - .IRecorder


.Simulator *- - .Model


.VerticesFactory *- - .AllVertices







.ConnGrowth +- - .ConnGrowth::GrowthParams


.ConnStatic +- - .ConnStatic::DistDestVertex


.Operations +- - .Operations::op




@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>