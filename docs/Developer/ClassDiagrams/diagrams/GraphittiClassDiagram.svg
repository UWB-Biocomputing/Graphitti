<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4881px" preserveAspectRatio="none" style="width:7428px;height:4881px;" version="1.1" viewBox="0 0 7428 4881" width="7428px" zoomAndPan="magnify"><defs><filter height="300%" id="f1961s1atp25iz" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[935a686a552498c9fe3db149d943753f]
class AllDSSynapses--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="444.9453" id="AllDSSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="848" x="6" y="3722.5"/><ellipse cx="380.25" cy="3738.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.2188,3744.1406 Q382.6406,3744.4375 382,3744.5781 Q381.3594,3744.7344 380.6563,3744.7344 Q378.1563,3744.7344 376.8281,3743.0938 Q375.5156,3741.4375 375.5156,3738.3125 Q375.5156,3735.1875 376.8281,3733.5313 Q378.1563,3731.875 380.6563,3731.875 Q381.3594,3731.875 382,3732.0313 Q382.6563,3732.1875 383.2188,3732.4844 L383.2188,3735.2031 Q382.5938,3734.625 382,3734.3594 Q381.4063,3734.0781 380.7813,3734.0781 Q379.4375,3734.0781 378.75,3735.1563 Q378.0625,3736.2188 378.0625,3738.3125 Q378.0625,3740.4063 378.75,3741.4844 Q379.4375,3742.5469 380.7813,3742.5469 Q381.4063,3742.5469 382,3742.2813 Q382.5938,3742 383.2188,3741.4219 L383.2188,3744.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="400.75" y="3742.6543">AllDSSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="3754.5" y2="3754.5"/><ellipse cx="17" cy="3765.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="3768.7104">D_ : BGFLOAT*</text><ellipse cx="17" cy="3778.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="3781.5151">F_ : BGFLOAT*</text><ellipse cx="17" cy="3791.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="26" y="3794.3198">U_ : BGFLOAT*</text><ellipse cx="17" cy="3803.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="3807.1245">r_ : BGFLOAT*</text><ellipse cx="17" cy="3816.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="3819.9292">u_ : BGFLOAT*</text><ellipse cx="17" cy="3829.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="3832.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="853" y1="3839.3281" y2="3839.3281"/><ellipse cx="17" cy="3850.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="3853.5386">AllDSSynapses()</text><ellipse cx="17" cy="3863.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="26" y="3866.3433">AllDSSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="17" cy="3875.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="3879.1479">~AllDSSynapses()</text><ellipse cx="17" cy="3888.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="26" y="3891.9526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="17,3896.5469,21,3900.5469,17,3904.5469,13,3900.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="26" y="3904.7573">allocDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="3914.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3917.562">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="17" cy="3927.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="3930.3667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,3934.9609,21,3938.9609,17,3942.9609,13,3938.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="3943.1714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="17,3947.7656,21,3951.7656,17,3955.7656,13,3951.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="26" y="3955.9761">copyDeviceToHost(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="3965.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3968.7808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="17" cy="3978.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="26" y="3981.5854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="17" cy="3991.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="26" y="3994.3901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="17,3998.9844,21,4002.9844,17,4006.9844,13,4002.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="822" x="26" y="4007.1948">copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="17" cy="4016.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="26" y="4019.9995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="17,4024.5938,21,4028.5938,17,4032.5938,13,4028.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="462" x="26" y="4032.8042">deleteDeviceStruct(AllDSSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="17" cy="4042.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="26" y="4045.6089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="17" cy="4055.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="4058.4136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="17" cy="4068.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="4071.2183">printParameters() : void {query}</text><ellipse cx="17" cy="4080.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="4084.0229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="17,4088.6172,21,4092.6172,17,4096.6172,13,4092.6172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="26" y="4096.8276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="17" cy="4106.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="4109.6323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="4119.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="4122.437">setEdgeClassID() : void</text><ellipse cx="17" cy="4132.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="4135.2417">setupEdges() : void</text><polygon fill="#FFFF44" points="17,4139.8359,21,4143.8359,17,4147.8359,13,4143.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="26" y="4148.0464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="17,4152.6406,21,4156.6406,17,4160.6406,13,4156.6406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="26" y="4160.8511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[09c0093d34d85daed484b6b6f446313a]
class AllDynamicSTDPSynapses--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="444.9453" id="AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="910" x="865" y="4426"/><ellipse cx="1236.75" cy="4442" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1239.7188,4447.6406 Q1239.1406,4447.9375 1238.5,4448.0781 Q1237.8594,4448.2344 1237.1563,4448.2344 Q1234.6563,4448.2344 1233.3281,4446.5938 Q1232.0156,4444.9375 1232.0156,4441.8125 Q1232.0156,4438.6875 1233.3281,4437.0313 Q1234.6563,4435.375 1237.1563,4435.375 Q1237.8594,4435.375 1238.5,4435.5313 Q1239.1563,4435.6875 1239.7188,4435.9844 L1239.7188,4438.7031 Q1239.0938,4438.125 1238.5,4437.8594 Q1237.9063,4437.5781 1237.2813,4437.5781 Q1235.9375,4437.5781 1235.25,4438.6563 Q1234.5625,4439.7188 1234.5625,4441.8125 Q1234.5625,4443.9063 1235.25,4444.9844 Q1235.9375,4446.0469 1237.2813,4446.0469 Q1237.9063,4446.0469 1238.5,4445.7813 Q1239.0938,4445.5 1239.7188,4444.9219 L1239.7188,4447.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1257.25" y="4446.1543">AllDynamicSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="4458" y2="4458"/><ellipse cx="876" cy="4469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="4472.2104">D_ : BGFLOAT*</text><ellipse cx="876" cy="4481.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="885" y="4485.0151">F_ : BGFLOAT*</text><ellipse cx="876" cy="4494.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="885" y="4497.8198">U_ : BGFLOAT*</text><ellipse cx="876" cy="4507.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="885" y="4510.6245">r_ : BGFLOAT*</text><ellipse cx="876" cy="4520.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="885" y="4523.4292">u_ : BGFLOAT*</text><ellipse cx="876" cy="4533.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="885" y="4536.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1774" y1="4542.8281" y2="4542.8281"/><ellipse cx="876" cy="4553.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="885" y="4557.0386">AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="4566.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="885" y="4569.8433">AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="876" cy="4579.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="885" y="4582.6479">~AllDynamicSTDPSynapses()</text><ellipse cx="876" cy="4592.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="885" y="4595.4526">Create() : AllEdges*</text><polygon fill="#FFFF44" points="876,4600.0469,880,4604.0469,876,4608.0469,872,4604.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="885" y="4608.2573">allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdges, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="4617.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4621.062">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="876" cy="4630.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="4633.8667">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,4638.4609,880,4642.4609,876,4646.4609,872,4642.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="885" y="4646.6714">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><polygon fill="#FFFF44" points="876,4651.2656,880,4655.2656,876,4659.2656,872,4655.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="885" y="4659.4761">copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="4669.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4672.2808">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4681.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="885" y="4685.0854">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4694.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="885" y="4697.8901">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="876,4702.4844,880,4706.4844,876,4710.4844,872,4706.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="884" x="885" y="4710.6948">copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="876" cy="4720.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="885" y="4723.4995">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="876,4728.0938,880,4732.0938,876,4736.0938,872,4732.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="885" y="4736.3042">deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps) : void</text><ellipse cx="876" cy="4745.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="885" y="4749.1089">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="876" cy="4758.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="4761.9136">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="876" cy="4771.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="885" y="4774.7183">printParameters() : void {query}</text><ellipse cx="876" cy="4784.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="885" y="4787.5229">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="876,4792.1172,880,4796.1172,876,4800.1172,872,4796.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="885" y="4800.3276">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="876" cy="4809.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="885" y="4813.1323">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="876" cy="4822.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="885" y="4825.937">setEdgeClassID() : void</text><ellipse cx="876" cy="4835.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="885" y="4838.7417">setupEdges() : void</text><polygon fill="#FFFF44" points="876,4843.3359,880,4847.3359,876,4851.3359,872,4847.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="885" y="4851.5464">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="876,4856.1406,880,4860.1406,876,4864.1406,872,4860.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="885" y="4864.3511">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[06f12ec46b87224fd0e1c514fed4a6e4]
class AllEdges--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="585.7969" id="AllEdges" style="stroke: #A80036; stroke-width: 1.5;" width="785" x="482.5" y="1779"/><ellipse cx="844.75" cy="1795" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M844.8594,1790.3438 L843.7031,1795.4219 L846.0313,1795.4219 L844.8594,1790.3438 Z M843.375,1788.1094 L846.3594,1788.1094 L849.7188,1800.5 L847.2656,1800.5 L846.5,1797.4375 L843.2188,1797.4375 L842.4688,1800.5 L840.0313,1800.5 L843.375,1788.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="865.25" y="1799.1543">AllEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="1811" y2="1811"/><ellipse cx="493.5" cy="1822" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="502.5" y="1825.2104">W_ : BGFLOAT*</text><ellipse cx="493.5" cy="1834.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="502.5" y="1838.0151">summationPoint_ : BGFLOAT**</text><ellipse cx="493.5" cy="1847.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="502.5" y="1850.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="493.5" cy="1860.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="502.5" y="1863.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="493.5" cy="1873.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="502.5" y="1876.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="493.5" cy="1886.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="502.5" y="1889.2339">inUse_ : bool*</text><ellipse cx="493.5" cy="1898.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="502.5" y="1902.0386">type_ : edgeType*</text><ellipse cx="493.5" cy="1911.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="502.5" y="1914.8433">countVertices_ : int</text><ellipse cx="493.5" cy="1924.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="502.5" y="1927.6479">destVertexIndex_ : int*</text><ellipse cx="493.5" cy="1937.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="502.5" y="1940.4526">sourceVertexIndex_ : int*</text><polygon fill="none" points="493.5,1945.0469,497.5,1949.0469,493.5,1953.0469,489.5,1949.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="1953.2573">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="493.5,1957.8516,497.5,1961.8516,493.5,1965.8516,489.5,1961.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="502.5" y="1966.062">fileLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="483.5" x2="1266.5" y1="1972.6563" y2="1972.6563"/><ellipse cx="493.5" cy="1983.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="502.5" y="1986.8667">AllEdges()</text><ellipse cx="493.5" cy="1996.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="502.5" y="1999.6714">AllEdges(const int numVertices, const int maxEdges)</text><ellipse cx="493.5" cy="2009.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="502.5" y="2012.4761">~AllEdges()</text><polygon fill="#FFFF44" points="493.5,2017.0703,497.5,2021.0703,493.5,2025.0703,489.5,2021.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="502.5" y="2025.2808">edgeOrdinalToType(const int typeOrdinal) : edgeType</text><ellipse cx="493.5" cy="2034.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="502.5" y="2038.0854">addEdge(BGSIZE&amp; iEdg, edgeType type, const int srcVertex, const int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT) : void</text><ellipse cx="493.5" cy="2047.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="502.5" y="2050.8901">advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void</text><ellipse cx="493.5" cy="2060.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="502.5" y="2063.6948">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><ellipse cx="493.5" cy="2073.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="502.5" y="2076.4995">advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="493.5" cy="2086.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="502.5" y="2089.3042">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="493.5" cy="2098.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="502.5" y="2102.1089">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="2111.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="502.5" y="2114.9136">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2124.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="502.5" y="2127.7183">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2137.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="2140.5229">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2150.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="502.5" y="2153.3276">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2162.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="502.5" y="2166.1323">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="493.5" cy="2175.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="731" x="502.5" y="2178.937">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><ellipse cx="493.5" cy="2188.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="502.5" y="2191.7417">createEdgeIndexMap(shared_ptr&lt;EdgeIndexMap&gt; edgeIndexMap) : void</text><ellipse cx="493.5" cy="2201.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="297" x="502.5" y="2204.5464">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><ellipse cx="493.5" cy="2214.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="502.5" y="2217.3511">eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="2226.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="502.5" y="2230.1558">load(Archive&amp; archive) : void</text><ellipse cx="493.5" cy="2239.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="502.5" y="2242.9604">loadParameters() : void</text><ellipse cx="493.5" cy="2252.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="2255.7651">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="493.5" cy="2265.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="502.5" y="2268.5698">printParameters() : void {query}</text><polygon fill="#FFFF44" points="493.5,2273.1641,497.5,2277.1641,493.5,2281.1641,489.5,2277.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="502.5" y="2281.3745">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="493.5" cy="2290.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="502.5" y="2294.1792">save(Archive&amp; archive) : void {query}</text><ellipse cx="493.5" cy="2303.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="502.5" y="2306.9839">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="493.5" cy="2316.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="502.5" y="2319.7886">setEdgeClassID() : void</text><ellipse cx="493.5" cy="2329.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="502.5" y="2332.5933">setupEdges() : void</text><polygon fill="#FFFF44" points="493.5,2337.1875,497.5,2341.1875,493.5,2345.1875,489.5,2341.1875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="502.5" y="2345.3979">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="493.5,2349.9922,497.5,2353.9922,493.5,2357.9922,489.5,2353.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="502.5" y="2358.2026">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[cf80cca85261d84eda43dbc026d5d8d1]
class AllIFNeurons--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="688.2344" id="AllIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="5327" y="2769.5"/><ellipse cx="5714.25" cy="2785.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5717.2188,2791.1406 Q5716.6406,2791.4375 5716,2791.5781 Q5715.3594,2791.7344 5714.6563,2791.7344 Q5712.1563,2791.7344 5710.8281,2790.0938 Q5709.5156,2788.4375 5709.5156,2785.3125 Q5709.5156,2782.1875 5710.8281,2780.5313 Q5712.1563,2778.875 5714.6563,2778.875 Q5715.3594,2778.875 5716,2779.0313 Q5716.6563,2779.1875 5717.2188,2779.4844 L5717.2188,2782.2031 Q5716.5938,2781.625 5716,2781.3594 Q5715.4063,2781.0781 5714.7813,2781.0781 Q5713.4375,2781.0781 5712.75,2782.1563 Q5712.0625,2783.2188 5712.0625,2785.3125 Q5712.0625,2787.4063 5712.75,2788.4844 Q5713.4375,2789.5469 5714.7813,2789.5469 Q5715.4063,2789.5469 5716,2789.2813 Q5716.5938,2789 5717.2188,2788.4219 L5717.2188,2791.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="5734.75" y="2789.6543">AllIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5328" x2="6186" y1="2801.5" y2="2801.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2809.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5347" y="2815.7104">IinjectRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2822.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5347" y="2828.5151">InoiseRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2835.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5347" y="2841.3198">VinitRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2847.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5347" y="2854.1245">VresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2860.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5347" y="2866.9292">VrestingRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2873.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5347" y="2879.7339">VthreshRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2886.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5347" y="2892.5386">starterVresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335" y="2899.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="5347" y="2905.3433">starterVthreshRange_ : BGFLOAT</text><ellipse cx="5338" cy="2914.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5347" y="2918.1479">C1_ : BGFLOAT*</text><ellipse cx="5338" cy="2927.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5347" y="2930.9526">C2_ : BGFLOAT*</text><ellipse cx="5338" cy="2940.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5347" y="2943.7573">Cm_ : BGFLOAT*</text><ellipse cx="5338" cy="2953.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5347" y="2956.562">I0_ : BGFLOAT*</text><ellipse cx="5338" cy="2966.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5347" y="2969.3667">Iinject_ : BGFLOAT*</text><ellipse cx="5338" cy="2978.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5347" y="2982.1714">Inoise_ : BGFLOAT*</text><ellipse cx="5338" cy="2991.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5347" y="2994.9761">Isyn_ : BGFLOAT*</text><ellipse cx="5338" cy="3004.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5347" y="3007.7808">Rm_ : BGFLOAT*</text><ellipse cx="5338" cy="3017.375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5347" y="3020.5854">Tau_ : BGFLOAT*</text><ellipse cx="5338" cy="3030.1797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5347" y="3033.3901">Trefract_ : BGFLOAT*</text><ellipse cx="5338" cy="3042.9844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5347" y="3046.1948">Vinit_ : BGFLOAT*</text><ellipse cx="5338" cy="3055.7891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5347" y="3058.9995">Vm_ : BGFLOAT*</text><ellipse cx="5338" cy="3068.5938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="5347" y="3071.8042">Vreset_ : BGFLOAT*</text><ellipse cx="5338" cy="3081.3984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5347" y="3084.6089">Vrest_ : BGFLOAT*</text><ellipse cx="5338" cy="3094.2031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5347" y="3097.4136">Vthresh_ : BGFLOAT*</text><ellipse cx="5338" cy="3107.0078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5347" y="3110.2183">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5328" x2="6186" y1="3116.8125" y2="3116.8125"/><ellipse cx="5338" cy="3127.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5347" y="3131.0229">AllIFNeurons()</text><ellipse cx="5338" cy="3140.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5347" y="3143.8276">~AllIFNeurons()</text><ellipse cx="5338" cy="3153.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5347" y="3156.6323">toString(const int index) : string {query}</text><ellipse cx="5338" cy="3166.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="5347" y="3169.437">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="5338,3174.0313,5342,3178.0313,5338,3182.0313,5334,3178.0313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="5347" y="3182.2417">allocDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5338" cy="3191.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5347" y="3195.0464">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="5338" cy="3204.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5347" y="3207.8511">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5338,3212.4453,5342,3216.4453,5338,3220.4453,5334,3216.4453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="5347" y="3220.6558">copyDeviceToHost(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5338,3225.25,5342,3229.25,5338,3233.25,5334,3229.25" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="5347" y="3233.4604">copyHostToDevice(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5338" cy="3243.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5347" y="3246.2651">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="5338" cy="3255.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5347" y="3259.0698">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="5338" cy="3268.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5347" y="3271.8745">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="5338" cy="3281.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5347" y="3284.6792">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="5338" cy="3294.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5347" y="3297.4839">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="5338,3302.0781,5342,3306.0781,5338,3310.0781,5334,3306.0781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5347" y="3310.2886">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="5338,3314.8828,5342,3318.8828,5338,3322.8828,5334,3318.8828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="5347" y="3323.0933">deleteDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5338" cy="3332.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="5347" y="3335.8979">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="5338" cy="3345.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5347" y="3348.7026">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="5338,3353.2969,5342,3357.2969,5338,3361.2969,5334,3357.2969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5347" y="3361.5073">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="5338" cy="3371.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5347" y="3374.312">loadParameters() : void</text><ellipse cx="5338" cy="3383.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5347" y="3387.1167">printParameters() : void {query}</text><polygon fill="#FFFF44" points="5338,3391.7109,5342,3395.7109,5338,3399.7109,5334,3395.7109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5347" y="3399.9214">readNeuron(istream&amp; input, int i) : void</text><ellipse cx="5338" cy="3409.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5347" y="3412.7261">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="5338,3417.3203,5342,3421.3203,5338,3425.3203,5334,3421.3203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5347" y="3425.5308">setNeuronDefaults(const int index) : void</text><ellipse cx="5338" cy="3435.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5347" y="3438.3354">setupVertices() : void</text><polygon fill="#FFFF44" points="5338,3442.9297,5342,3446.9297,5338,3450.9297,5334,3446.9297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="5347" y="3451.1401">writeNeuron(ostream&amp; output, int i) : void {query}</text><!--MD5=[a4e35ff6c4fc9c7a26a0ff69acb0e23b]
class AllIZHNeurons--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="637.0156" id="AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="4879" y="3626.5"/><ellipse cx="5260.75" cy="3642.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5263.7188,3648.1406 Q5263.1406,3648.4375 5262.5,3648.5781 Q5261.8594,3648.7344 5261.1563,3648.7344 Q5258.6563,3648.7344 5257.3281,3647.0938 Q5256.0156,3645.4375 5256.0156,3642.3125 Q5256.0156,3639.1875 5257.3281,3637.5313 Q5258.6563,3635.875 5261.1563,3635.875 Q5261.8594,3635.875 5262.5,3636.0313 Q5263.1563,3636.1875 5263.7188,3636.4844 L5263.7188,3639.2031 Q5263.0938,3638.625 5262.5,3638.3594 Q5261.9063,3638.0781 5261.2813,3638.0781 Q5259.9375,3638.0781 5259.25,3639.1563 Q5258.5625,3640.2188 5258.5625,3642.3125 Q5258.5625,3644.4063 5259.25,3645.4844 Q5259.9375,3646.5469 5261.2813,3646.5469 Q5261.9063,3646.5469 5262.5,3646.2813 Q5263.0938,3646 5263.7188,3645.4219 L5263.7188,3648.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="5281.25" y="3646.6543">AllIZHNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4880" x2="5738" y1="3658.5" y2="3658.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3666.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4899" y="3672.7104">excAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3679.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4899" y="3685.5151">excBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3692.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4899" y="3698.3198">excCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3704.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4899" y="3711.1245">excDconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3717.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4899" y="3723.9292">inhAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3730.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4899" y="3736.7339">inhBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3743.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4899" y="3749.5386">inhCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3756.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4899" y="3762.3433">inhDconst_ : BGFLOAT</text><ellipse cx="4890" cy="3771.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4899" y="3775.1479">Aconst_ : BGFLOAT*</text><ellipse cx="4890" cy="3784.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4899" y="3787.9526">Bconst_ : BGFLOAT*</text><ellipse cx="4890" cy="3797.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4899" y="3800.7573">C3_ : BGFLOAT*</text><ellipse cx="4890" cy="3810.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4899" y="3813.562">Cconst_ : BGFLOAT*</text><ellipse cx="4890" cy="3823.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4899" y="3826.3667">Dconst_ : BGFLOAT*</text><ellipse cx="4890" cy="3835.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4899" y="3839.1714">u_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3845.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="4899" y="3851.9761">DEFAULT_a : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3858.5703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="4899" y="3864.7808">DEFAULT_b : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3871.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="4899" y="3877.5854">DEFAULT_c : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="3884.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="4899" y="3890.3901">DEFAULT_d : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4880" x2="5738" y1="3896.9844" y2="3896.9844"/><ellipse cx="4890" cy="3907.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="4899" y="3911.1948">AllIZHNeurons()</text><ellipse cx="4890" cy="3920.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4899" y="3923.9995">~AllIZHNeurons()</text><ellipse cx="4890" cy="3933.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="4899" y="3936.8042">Create() : AllVertices*</text><ellipse cx="4890" cy="3946.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4899" y="3949.6089">toString(const int index) : string {query}</text><polygon fill="#FFFF44" points="4890,3954.2031,4894,3958.2031,4890,3962.2031,4886,3958.2031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4899" y="3962.4136">advanceNeuron(const int index) : void</text><ellipse cx="4890" cy="3972.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="4899" y="3975.2183">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="4890,3979.8125,4894,3983.8125,4890,3987.8125,4886,3983.8125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="4899" y="3988.0229">allocDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="4890" cy="3997.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4899" y="4000.8276">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="4890" cy="4010.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4899" y="4013.6323">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="4890,4018.2266,4894,4022.2266,4890,4026.2266,4886,4022.2266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="4899" y="4026.437">copyDeviceToHost(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="4890,4031.0313,4894,4035.0313,4890,4039.0313,4886,4035.0313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="4899" y="4039.2417">copyHostToDevice(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="4890" cy="4048.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="4899" y="4052.0464">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="4890" cy="4061.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="4899" y="4064.8511">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="4890" cy="4074.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4899" y="4077.6558">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="4890" cy="4087.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4899" y="4090.4604">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="4890" cy="4100.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4899" y="4103.2651">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="4890,4107.8594,4894,4111.8594,4890,4115.8594,4886,4111.8594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4899" y="4116.0698">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="4890,4120.6641,4894,4124.6641,4890,4128.6641,4886,4124.6641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="4899" y="4128.8745">deleteDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="4890" cy="4138.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="4899" y="4141.6792">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="4890" cy="4151.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4899" y="4154.4839">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="4890,4159.0781,4894,4163.0781,4890,4167.0781,4886,4163.0781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4899" y="4167.2886">fire(const int index) : void</text><polygon fill="#FFFF44" points="4890,4171.8828,4894,4175.8828,4890,4179.8828,4886,4175.8828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="4899" y="4180.0933">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="4890" cy="4189.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4899" y="4192.8979">printParameters() : void {query}</text><polygon fill="#FFFF44" points="4890,4197.4922,4894,4201.4922,4890,4205.4922,4886,4201.4922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4899" y="4205.7026">readNeuron(istream&amp; input, int index) : void</text><ellipse cx="4890" cy="4215.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4899" y="4218.5073">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="4890,4223.1016,4894,4227.1016,4890,4231.1016,4886,4227.1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="4899" y="4231.312">setNeuronDefaults(const int index) : void</text><ellipse cx="4890" cy="4240.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4899" y="4244.1167">setupVertices() : void</text><polygon fill="#FFFF44" points="4890,4248.7109,4894,4252.7109,4890,4256.7109,4886,4252.7109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="4899" y="4256.9214">writeNeuron(ostream&amp; output, int index) : void {query}</text><!--MD5=[17306769ffb707adf94de37859054409]
class AllLIFNeurons--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="137.6328" id="AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="5774" y="3876"/><ellipse cx="6158.25" cy="3892" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6161.2188,3897.6406 Q6160.6406,3897.9375 6160,3898.0781 Q6159.3594,3898.2344 6158.6563,3898.2344 Q6156.1563,3898.2344 6154.8281,3896.5938 Q6153.5156,3894.9375 6153.5156,3891.8125 Q6153.5156,3888.6875 6154.8281,3887.0313 Q6156.1563,3885.375 6158.6563,3885.375 Q6159.3594,3885.375 6160,3885.5313 Q6160.6563,3885.6875 6161.2188,3885.9844 L6161.2188,3888.7031 Q6160.5938,3888.125 6160,3887.8594 Q6159.4063,3887.5781 6158.7813,3887.5781 Q6157.4375,3887.5781 6156.75,3888.6563 Q6156.0625,3889.7188 6156.0625,3891.8125 Q6156.0625,3893.9063 6156.75,3894.9844 Q6157.4375,3896.0469 6158.7813,3896.0469 Q6159.4063,3896.0469 6160,3895.7813 Q6160.5938,3895.5 6161.2188,3894.9219 L6161.2188,3897.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="6178.75" y="3896.1543">AllLIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5775" x2="6633" y1="3908" y2="3908"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5775" x2="6633" y1="3916" y2="3916"/><ellipse cx="5785" cy="3927" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5794" y="3930.2104">AllLIFNeurons()</text><ellipse cx="5785" cy="3939.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5794" y="3943.0151">~AllLIFNeurons()</text><ellipse cx="5785" cy="3952.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="5794" y="3955.8198">Create() : AllVertices*</text><polygon fill="#FFFF44" points="5785,3960.4141,5789,3964.4141,5785,3968.4141,5781,3964.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="5794" y="3968.6245">advanceNeuron(const int index) : void</text><ellipse cx="5785" cy="3978.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="5794" y="3981.4292">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="5785,3986.0234,5789,3990.0234,5785,3994.0234,5781,3990.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5794" y="3994.2339">fire(const int index) : void</text><ellipse cx="5785" cy="4003.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5794" y="4007.0386">printParameters() : void {query}</text><!--MD5=[96f31d00847e9628d93d2720c47b9604]
class AllNeuroEdges--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="188.8516" id="AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="681" y="2469.5"/><ellipse cx="825.25" cy="2485.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M828.2188,2491.1406 Q827.6406,2491.4375 827,2491.5781 Q826.3594,2491.7344 825.6563,2491.7344 Q823.1563,2491.7344 821.8281,2490.0938 Q820.5156,2488.4375 820.5156,2485.3125 Q820.5156,2482.1875 821.8281,2480.5313 Q823.1563,2478.875 825.6563,2478.875 Q826.3594,2478.875 827,2479.0313 Q827.6563,2479.1875 828.2188,2479.4844 L828.2188,2482.2031 Q827.5938,2481.625 827,2481.3594 Q826.4063,2481.0781 825.7813,2481.0781 Q824.4375,2481.0781 823.75,2482.1563 Q823.0625,2483.2188 823.0625,2485.3125 Q823.0625,2487.4063 823.75,2488.4844 Q824.4375,2489.5469 825.7813,2489.5469 Q826.4063,2489.5469 827,2489.2813 Q827.5938,2489 828.2188,2488.4219 L828.2188,2491.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="845.75" y="2489.6543">AllNeuroEdges</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="2501.5" y2="2501.5"/><ellipse cx="692" cy="2512.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="701" y="2515.7104">psr_ : BGFLOAT*</text><ellipse cx="692" cy="2525.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="356" x="701" y="2528.5151">SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682" x2="1068" y1="2535.1094" y2="2535.1094"/><ellipse cx="692" cy="2546.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="701" y="2549.3198">AllNeuroEdges()</text><ellipse cx="692" cy="2558.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="701" y="2562.1245">~AllNeuroEdges()</text><ellipse cx="692" cy="2571.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="701" y="2574.9292">edgSign(const edgeType type) : int</text><ellipse cx="692" cy="2584.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="701" y="2587.7339">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="692,2592.3281,696,2596.3281,692,2600.3281,688,2596.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="701" y="2600.5386">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="692" cy="2610.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="701" y="2613.3433">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="692" cy="2622.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="701" y="2626.1479">setupEdges() : void</text><polygon fill="#FFFF44" points="692,2630.7422,696,2634.7422,692,2638.7422,688,2634.7422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="701" y="2638.9526">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="692,2643.5469,696,2647.5469,692,2651.5469,688,2647.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="701" y="2651.7573">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[635988d62f36dba7a8b9baa086d12f03]
class AllSTDPSynapses--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="841.8906" id="AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="862" x="889" y="3524"/><ellipse cx="1262.75" cy="3540" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1265.7188,3545.6406 Q1265.1406,3545.9375 1264.5,3546.0781 Q1263.8594,3546.2344 1263.1563,3546.2344 Q1260.6563,3546.2344 1259.3281,3544.5938 Q1258.0156,3542.9375 1258.0156,3539.8125 Q1258.0156,3536.6875 1259.3281,3535.0313 Q1260.6563,3533.375 1263.1563,3533.375 Q1263.8594,3533.375 1264.5,3533.5313 Q1265.1563,3533.6875 1265.7188,3533.9844 L1265.7188,3536.7031 Q1265.0938,3536.125 1264.5,3535.8594 Q1263.9063,3535.5781 1263.2813,3535.5781 Q1261.9375,3535.5781 1261.25,3536.6563 Q1260.5625,3537.7188 1260.5625,3539.8125 Q1260.5625,3541.9063 1261.25,3542.9844 Q1261.9375,3544.0469 1263.2813,3544.0469 Q1263.9063,3544.0469 1264.5,3543.7813 Q1265.0938,3543.5 1265.7188,3542.9219 L1265.7188,3545.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="1283.25" y="3544.1543">AllSTDPSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="3556" y2="3556"/><ellipse cx="900" cy="3567" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="3570.2104">Aneg_E_ : BGFLOAT</text><ellipse cx="900" cy="3579.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3583.0151">Aneg_I_ : BGFLOAT</text><ellipse cx="900" cy="3592.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="909" y="3595.8198">Apos_E_ : BGFLOAT</text><ellipse cx="900" cy="3605.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3608.6245">Apos_I_ : BGFLOAT</text><ellipse cx="900" cy="3618.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="909" y="3621.4292">Wex_E_ : BGFLOAT</text><ellipse cx="900" cy="3631.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="909" y="3634.2339">Wex_I_ : BGFLOAT</text><ellipse cx="900" cy="3643.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="909" y="3647.0386">defaultSTDPgap_ : BGFLOAT</text><ellipse cx="900" cy="3656.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="3659.8433">tauneg_E_ : BGFLOAT</text><ellipse cx="900" cy="3669.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="3672.6479">tauneg_I_ : BGFLOAT</text><ellipse cx="900" cy="3682.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="909" y="3685.4526">taupos_E_ : BGFLOAT</text><ellipse cx="900" cy="3695.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="909" y="3698.2573">taupos_I_ : BGFLOAT</text><ellipse cx="900" cy="3707.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="909" y="3711.062">tauspost_E_ : BGFLOAT</text><ellipse cx="900" cy="3720.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="909" y="3723.8667">tauspost_I_ : BGFLOAT</text><ellipse cx="900" cy="3733.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="3736.6714">tauspre_E_ : BGFLOAT</text><ellipse cx="900" cy="3746.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="3749.4761">tauspre_I_ : BGFLOAT</text><ellipse cx="900" cy="3759.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="3762.2808">Aneg_ : BGFLOAT*</text><ellipse cx="900" cy="3771.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="909" y="3775.0854">Apos_ : BGFLOAT*</text><ellipse cx="900" cy="3784.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="909" y="3787.8901">STDPgap_ : BGFLOAT*</text><ellipse cx="900" cy="3797.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="909" y="3800.6948">Wex_ : BGFLOAT*</text><ellipse cx="900" cy="3810.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3813.4995">muneg_ : BGFLOAT*</text><ellipse cx="900" cy="3823.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3826.3042">mupos_ : BGFLOAT*</text><ellipse cx="900" cy="3835.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3839.1089">tauneg_ : BGFLOAT*</text><ellipse cx="900" cy="3848.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="909" y="3851.9136">taupos_ : BGFLOAT*</text><ellipse cx="900" cy="3861.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="909" y="3864.7183">tauspost_ : BGFLOAT*</text><ellipse cx="900" cy="3874.3125" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="909" y="3877.5229">tauspre_ : BGFLOAT*</text><ellipse cx="900" cy="3887.1172" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="909" y="3890.3276">delayIndexPost_ : int*</text><ellipse cx="900" cy="3899.9219" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="3903.1323">delayQueuePostLength_ : int*</text><ellipse cx="900" cy="3912.7266" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="909" y="3915.937">totalDelayPost_ : int*</text><ellipse cx="900" cy="3925.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="909" y="3928.7417">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1750" y1="3935.3359" y2="3935.3359"/><ellipse cx="900" cy="3946.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="909" y="3949.5464">AllSTDPSynapses()</text><ellipse cx="900" cy="3959.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="909" y="3962.3511">AllSTDPSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="900" cy="3971.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="909" y="3975.1558">~AllSTDPSynapses()</text><ellipse cx="900" cy="3984.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="909" y="3987.9604">Create() : AllEdges*</text><polygon fill="#FFFF44" points="900,3992.5547,904,3996.5547,900,4000.5547,896,3996.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="909" y="4000.7651">synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT</text><ellipse cx="900" cy="4010.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="909" y="4013.5698">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="900,4018.1641,904,4022.1641,900,4026.1641,896,4022.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="909" y="4026.3745">isSpikeQueuePost(const BGSIZE iEdg) : bool</text><ellipse cx="900" cy="4035.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="909" y="4039.1792">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="900" cy="4048.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="909" y="4051.9839">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="900,4056.5781,904,4060.5781,900,4064.5781,896,4060.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="909" y="4064.7886">allocDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="4074.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4077.5933">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="900" cy="4087.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="4090.3979">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,4094.9922,904,4098.9922,900,4102.9922,896,4098.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="909" y="4103.2026">copyDeviceToHost(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="4112.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4116.0073">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="900" cy="4125.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="909" y="4128.812">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="900" cy="4138.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="909" y="4141.6167">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="900,4146.2109,904,4150.2109,900,4154.2109,896,4150.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="836" x="909" y="4154.4214">copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="900" cy="4164.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="909" y="4167.2261">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="900,4171.8203,904,4175.8203,900,4179.8203,896,4175.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="909" y="4180.0308">deleteDeviceStruct(AllSTDPSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="900" cy="4189.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="909" y="4192.8354">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="900,4197.4297,904,4201.4297,900,4205.4297,896,4201.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="909" y="4205.6401">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4215.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="909" y="4218.4448">loadParameters() : void</text><ellipse cx="900" cy="4228.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="909" y="4231.2495">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4240.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="4244.0542">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="900" cy="4253.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="909" y="4256.8589">printParameters() : void {query}</text><ellipse cx="900" cy="4266.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="909" y="4269.6636">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="900,4274.2578,904,4278.2578,900,4282.2578,896,4278.2578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="909" y="4282.4683">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="900" cy="4292.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="909" y="4295.2729">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="900" cy="4304.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="909" y="4308.0776">setEdgeClassID() : void</text><ellipse cx="900" cy="4317.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="909" y="4320.8823">setupEdges() : void</text><polygon fill="#FFFF44" points="900,4325.4766,904,4329.4766,900,4333.4766,896,4329.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="909" y="4333.687">setupEdges(const int numVertices, const int maxEdges) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897" y="4340.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="909" y="4346.4917">stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void</text><polygon fill="#FFFF44" points="900,4351.0859,904,4355.0859,900,4359.0859,896,4355.0859" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="909" y="4359.2964">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[00675e18512933602d55f5e0e2b1ab32]
class AllSpikingNeurons--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="278.4844" id="AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="5182.5" y="2425"/><ellipse cx="5398.25" cy="2441" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5398.3594,2436.3438 L5397.2031,2441.4219 L5399.5313,2441.4219 L5398.3594,2436.3438 Z M5396.875,2434.1094 L5399.8594,2434.1094 L5403.2188,2446.5 L5400.7656,2446.5 L5400,2443.4375 L5396.7188,2443.4375 L5395.9688,2446.5 L5393.5313,2446.5 L5396.875,2434.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="5418.75" y="2445.1543">AllSpikingNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5183.5" x2="5732.5" y1="2457" y2="2457"/><polygon fill="none" points="5193.5,2463,5197.5,2467,5193.5,2471,5189.5,2467" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5202.5" y="2471.2104">fAllowBackPropagation_ : bool</text><ellipse cx="5193.5" cy="2480.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5202.5" y="2484.0151">vertexEvents_ : vector&lt;EventBuffer&gt;</text><ellipse cx="5193.5" cy="2493.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5202.5" y="2496.8198">hasFired_ : vector&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5183.5" x2="5732.5" y1="2503.4141" y2="2503.4141"/><ellipse cx="5193.5" cy="2514.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5202.5" y="2517.6245">AllSpikingNeurons()</text><ellipse cx="5193.5" cy="2527.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5202.5" y="2530.4292">~AllSpikingNeurons()</text><ellipse cx="5193.5" cy="2540.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5202.5" y="2543.2339">getSpikeHistory(int index, int offIndex) : uint64_t</text><polygon fill="#FFFF44" points="5193.5,2547.8281,5197.5,2551.8281,5193.5,2555.8281,5189.5,2551.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="5202.5" y="2556.0386">advanceNeuron(const int index) : void</text><ellipse cx="5193.5" cy="2565.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="5202.5" y="2568.8433">advanceVertices(AllEdges&amp; synapses, const EdgeIndexMap* edgeIndexMap) : void</text><polygon fill="#FFFF44" points="5193.5,2573.4375,5197.5,2577.4375,5193.5,2581.4375,5189.5,2577.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="5202.5" y="2581.6479">clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5193.5" cy="2591.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="5202.5" y="2594.4526">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><ellipse cx="5193.5" cy="2604.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5202.5" y="2607.2573">clearSpikeCounts() : void</text><polygon fill="#FFFF44" points="5193.5,2611.8516,5197.5,2615.8516,5193.5,2619.8516,5189.5,2615.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="5202.5" y="2620.062">copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5193.5,2624.6563,5197.5,2628.6563,5193.5,2632.6563,5189.5,2628.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="5202.5" y="2632.8667">copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="5193.5" cy="2642.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5202.5" y="2645.6714">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="5193.5" cy="2655.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="5202.5" y="2658.4761">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="5193.5,2663.0703,5197.5,2667.0703,5193.5,2671.0703,5189.5,2667.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5202.5" y="2671.2808">fire(const int index) : void</text><ellipse cx="5193.5" cy="2680.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5202.5" y="2684.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; synapses) : void</text><ellipse cx="5193.5" cy="2693.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5202.5" y="2696.8901">setupVertices() : void</text><!--MD5=[cfe37ad1a50a7dcaaf80645f5fb9fa69]
class AllSpikingSynapses--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="701.0391" id="AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="873" x="438.5" y="2763"/><ellipse cx="811.25" cy="2779" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M814.2188,2784.6406 Q813.6406,2784.9375 813,2785.0781 Q812.3594,2785.2344 811.6563,2785.2344 Q809.1563,2785.2344 807.8281,2783.5938 Q806.5156,2781.9375 806.5156,2778.8125 Q806.5156,2775.6875 807.8281,2774.0313 Q809.1563,2772.375 811.6563,2772.375 Q812.3594,2772.375 813,2772.5313 Q813.6563,2772.6875 814.2188,2772.9844 L814.2188,2775.7031 Q813.5938,2775.125 813,2774.8594 Q812.4063,2774.5781 811.7813,2774.5781 Q810.4375,2774.5781 809.75,2775.6563 Q809.0625,2776.7188 809.0625,2778.8125 Q809.0625,2780.9063 809.75,2781.9844 Q810.4375,2783.0469 811.7813,2783.0469 Q812.4063,2783.0469 813,2782.7813 Q813.5938,2782.5 814.2188,2781.9219 L814.2188,2784.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="831.75" y="2783.1543">AllSpikingSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="2795" y2="2795"/><ellipse cx="449.5" cy="2806" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="458.5" y="2809.2104">delay_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="2818.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="2822.0151">delay_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="2831.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="458.5" y="2834.8198">delay_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="2844.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="458.5" y="2847.6245">delay_II_ : BGFLOAT</text><ellipse cx="449.5" cy="2857.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="458.5" y="2860.4292">tau_EE_ : BGFLOAT</text><ellipse cx="449.5" cy="2870.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="2873.2339">tau_EI_ : BGFLOAT</text><ellipse cx="449.5" cy="2882.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="458.5" y="2886.0386">tau_IE_ : BGFLOAT</text><ellipse cx="449.5" cy="2895.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="458.5" y="2898.8433">tau_II_ : BGFLOAT</text><ellipse cx="449.5" cy="2908.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="458.5" y="2911.6479">decay_ : BGFLOAT*</text><ellipse cx="449.5" cy="2921.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="2924.4526">tau_ : BGFLOAT*</text><ellipse cx="449.5" cy="2934.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="458.5" y="2937.2573">delayIndex_ : int*</text><ellipse cx="449.5" cy="2946.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="458.5" y="2950.062">delayQueueLength_ : int*</text><ellipse cx="449.5" cy="2959.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="458.5" y="2962.8667">totalDelay_ : int*</text><ellipse cx="449.5" cy="2972.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="458.5" y="2975.6714">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="439.5" x2="1310.5" y1="2982.2656" y2="2982.2656"/><ellipse cx="449.5" cy="2993.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="458.5" y="2996.4761">AllSpikingSynapses()</text><ellipse cx="449.5" cy="3006.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3009.2808">AllSpikingSynapses(const int numVertices, const int maxEdges)</text><ellipse cx="449.5" cy="3018.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="458.5" y="3022.0854">~AllSpikingSynapses()</text><ellipse cx="449.5" cy="3031.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="112" x="458.5" y="3034.8901">Create() : AllEdges*</text><ellipse cx="449.5" cy="3044.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="458.5" y="3047.6948">allowBackPropagation() : bool</text><polygon fill="#FFFF44" points="449.5,3052.2891,453.5,3056.2891,449.5,3060.2891,445.5,3056.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="458.5" y="3060.4995">isSpikeQueue(const BGSIZE iEdg) : bool</text><polygon fill="#FFFF44" points="449.5,3065.0938,453.5,3069.0938,449.5,3073.0938,445.5,3069.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="458.5" y="3073.3042">updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool</text><ellipse cx="449.5" cy="3082.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="458.5" y="3086.1089">advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void</text><ellipse cx="449.5" cy="3095.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="458.5" y="3098.9136">advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="449.5,3103.5078,453.5,3107.5078,449.5,3111.5078,445.5,3107.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="458.5" y="3111.7183">allocDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="3121.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3124.5229">allocEdgeDeviceStruct(void** allEdgesDevice) : void</text><ellipse cx="449.5" cy="3134.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="3137.3276">allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,3141.9219,453.5,3145.9219,449.5,3149.9219,445.5,3145.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="458.5" y="3150.1323">changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="3159.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="458.5" y="3162.937">copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3172.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="458.5" y="3175.7417">copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,3180.3359,453.5,3184.3359,449.5,3188.3359,445.5,3184.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="458.5" y="3188.5464">copyDeviceToHost(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="3198.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3201.3511">copyEdgeDeviceToHost(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3210.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="458.5" y="3214.1558">copyEdgeHostToDevice(void* allEdgesDevice) : void</text><ellipse cx="449.5" cy="3223.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="458.5" y="3226.9604">copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void</text><polygon fill="#FFFF44" points="449.5,3231.5547,453.5,3235.5547,449.5,3239.5547,445.5,3235.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="847" x="458.5" y="3239.7651">copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties&amp; allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void</text><ellipse cx="449.5" cy="3249.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="729" x="458.5" y="3252.5698">createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="449.5,3257.1641,453.5,3261.1641,449.5,3265.1641,445.5,3261.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="458.5" y="3265.3745">deleteDeviceStruct(AllSpikingSynapsesDeviceProperties&amp; allEdgesDevice) : void</text><ellipse cx="449.5" cy="3274.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="458.5" y="3278.1792">deleteEdgeDeviceStruct(void* allEdgesDevice) : void</text><polygon fill="#FFFF44" points="449.5,3282.7734,453.5,3286.7734,449.5,3290.7734,445.5,3286.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="458.5" y="3290.9839">initSpikeQueue(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3300.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="458.5" y="3303.7886">loadParameters() : void</text><ellipse cx="449.5" cy="3313.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="458.5" y="3316.5933">postSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3326.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="458.5" y="3329.3979">preSpikeHit(const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3338.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3342.2026">printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}</text><ellipse cx="449.5" cy="3351.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="458.5" y="3355.0073">printParameters() : void {query}</text><ellipse cx="449.5" cy="3364.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="458.5" y="3367.812">printSynapsesProps() : void {query}</text><polygon fill="#FFFF44" points="449.5,3372.4063,453.5,3376.4063,449.5,3380.4063,445.5,3376.4063" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="458.5" y="3380.6167">readEdge(istream&amp; input, const BGSIZE iEdg) : void</text><ellipse cx="449.5" cy="3390.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="458.5" y="3393.4214">resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void</text><ellipse cx="449.5" cy="3403.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="458.5" y="3406.2261">setAdvanceEdgesDeviceParams() : void</text><ellipse cx="449.5" cy="3415.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="458.5" y="3419.0308">setEdgeClassID() : void</text><ellipse cx="449.5" cy="3428.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="458.5" y="3431.8354">setupEdges() : void</text><polygon fill="#FFFF44" points="449.5,3436.4297,453.5,3440.4297,449.5,3444.4297,445.5,3440.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="458.5" y="3444.6401">setupEdges(const int numVertices, const int maxEdges) : void</text><polygon fill="#FFFF44" points="449.5,3449.2344,453.5,3453.2344,449.5,3457.2344,445.5,3453.2344" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="458.5" y="3457.4448">writeEdge(ostream&amp; output, const BGSIZE iEdg) : void {query}</text><!--MD5=[34dee175ca2f1207a5c8be9520f72c2f]
class AllVertices--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="278.4844" id="AllVertices" style="stroke: #A80036; stroke-width: 1.5;" width="845" x="5035.5" y="1933"/><ellipse cx="5421.75" cy="1949" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5421.8594,1944.3438 L5420.7031,1949.4219 L5423.0313,1949.4219 L5421.8594,1944.3438 Z M5420.375,1942.1094 L5423.3594,1942.1094 L5426.7188,1954.5 L5424.2656,1954.5 L5423.5,1951.4375 L5420.2188,1951.4375 L5419.4688,1954.5 L5417.0313,1954.5 L5420.375,1942.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="5442.25" y="1953.1543">AllVertices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5036.5" x2="5879.5" y1="1965" y2="1965"/><ellipse cx="5046.5" cy="1976" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5055.5" y="1979.2104">summationMap_ : BGFLOAT*</text><polygon fill="none" points="5046.5,1983.8047,5050.5,1987.8047,5046.5,1991.8047,5042.5,1987.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="5055.5" y="1992.0151">size_ : int</text><polygon fill="none" points="5046.5,1996.6094,5050.5,2000.6094,5046.5,2004.6094,5042.5,2000.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5055.5" y="2004.8198">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="5046.5,2009.4141,5050.5,2013.4141,5046.5,2017.4141,5042.5,2013.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5055.5" y="2017.6245">vertexLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5036.5" x2="5879.5" y1="2024.2188" y2="2024.2188"/><ellipse cx="5046.5" cy="2035.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5055.5" y="2038.4292">AllVertices()</text><ellipse cx="5046.5" cy="2048.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5055.5" y="2051.2339">~AllVertices()</text><ellipse cx="5046.5" cy="2060.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="5055.5" y="2064.0386">toString(const int i) : string {query}</text><ellipse cx="5046.5" cy="2073.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="819" x="5055.5" y="2076.8433">advanceVertices(AllEdges&amp; edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><ellipse cx="5046.5" cy="2086.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="5055.5" y="2089.6479">advanceVertices(AllEdges&amp; edges, const EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="5046.5" cy="2099.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="5055.5" y="2102.4526">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="5046.5" cy="2112.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="5055.5" y="2115.2573">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="5046.5" cy="2124.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="5055.5" y="2128.062">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="5046.5" cy="2137.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="5055.5" y="2140.8667">createAllVertices(Layout* layout) : void</text><ellipse cx="5046.5" cy="2150.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="5055.5" y="2153.6714">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="5046.5" cy="2163.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="5055.5" y="2166.4761">loadParameters() : void</text><ellipse cx="5046.5" cy="2176.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5055.5" y="2179.2808">printParameters() : void {query}</text><ellipse cx="5046.5" cy="2188.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="5055.5" y="2192.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; edges) : void</text><ellipse cx="5046.5" cy="2201.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5055.5" y="2204.8901">setupVertices() : void</text><!--MD5=[d85fbbe7efff0e713ca3ebcdefdae521]
class CPUModel--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="137.6328" id="CPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="4079" y="1453"/><ellipse cx="4132.75" cy="1469" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4135.7188,1474.6406 Q4135.1406,1474.9375 4134.5,1475.0781 Q4133.8594,1475.2344 4133.1563,1475.2344 Q4130.6563,1475.2344 4129.3281,1473.5938 Q4128.0156,1471.9375 4128.0156,1468.8125 Q4128.0156,1465.6875 4129.3281,1464.0313 Q4130.6563,1462.375 4133.1563,1462.375 Q4133.8594,1462.375 4134.5,1462.5313 Q4135.1563,1462.6875 4135.7188,1462.9844 L4135.7188,1465.7031 Q4135.0938,1465.125 4134.5,1464.8594 Q4133.9063,1464.5781 4133.2813,1464.5781 Q4131.9375,1464.5781 4131.25,1465.6563 Q4130.5625,1466.7188 4130.5625,1468.8125 Q4130.5625,1470.9063 4131.25,1471.9844 Q4131.9375,1473.0469 4133.2813,1473.0469 Q4133.9063,1473.0469 4134.5,1472.7813 Q4135.0938,1472.5 4135.7188,1471.9219 L4135.7188,1474.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4153.25" y="1473.1543">CPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4080" x2="4256" y1="1485" y2="1485"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4080" x2="4256" y1="1493" y2="1493"/><ellipse cx="4090" cy="1504" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4099" y="1507.2104">CPUModel()</text><ellipse cx="4090" cy="1516.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4099" y="1520.0151">~CPUModel()</text><ellipse cx="4090" cy="1529.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4099" y="1532.8198">advance() : void</text><ellipse cx="4090" cy="1542.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4099" y="1545.6245">copyCPUtoGPU() : void</text><ellipse cx="4090" cy="1555.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4099" y="1558.4292">copyGPUtoCPU() : void</text><ellipse cx="4090" cy="1568.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4099" y="1571.2339">finish() : void</text><ellipse cx="4090" cy="1580.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4099" y="1584.0386">updateConnections() : void</text><!--MD5=[540eab1ed52846d003b47757435df453]
class ConnGrowth--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="368.1172" id="ConnGrowth" style="stroke: #A80036; stroke-width: 1.5;" width="1295" x="1812.5" y="1888"/><ellipse cx="2417.75" cy="1904" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2420.7188,1909.6406 Q2420.1406,1909.9375 2419.5,1910.0781 Q2418.8594,1910.2344 2418.1563,1910.2344 Q2415.6563,1910.2344 2414.3281,1908.5938 Q2413.0156,1906.9375 2413.0156,1903.8125 Q2413.0156,1900.6875 2414.3281,1899.0313 Q2415.6563,1897.375 2418.1563,1897.375 Q2418.8594,1897.375 2419.5,1897.5313 Q2420.1563,1897.6875 2420.7188,1897.9844 L2420.7188,1900.7031 Q2420.0938,1900.125 2419.5,1899.8594 Q2418.9063,1899.5781 2418.2813,1899.5781 Q2416.9375,1899.5781 2416.25,1900.6563 Q2415.5625,1901.7188 2415.5625,1903.8125 Q2415.5625,1905.9063 2416.25,1906.9844 Q2416.9375,1908.0469 2418.2813,1908.0469 Q2418.9063,1908.0469 2419.5,1907.7813 Q2420.0938,1907.5 2420.7188,1906.9219 L2420.7188,1909.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="2438.25" y="1908.1543">ConnGrowth</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1813.5" x2="3106.5" y1="1920" y2="1920"/><ellipse cx="1823.5" cy="1931" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1832.5" y="1934.2104">W_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1943.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1832.5" y="1947.0151">area_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1956.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1832.5" y="1959.8198">delta_ : CompleteMatrix*</text><ellipse cx="1823.5" cy="1969.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1832.5" y="1972.6245">growthParams_ : GrowthParams</text><ellipse cx="1823.5" cy="1982.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1832.5" y="1985.4292">deltaR_ : VectorMatrix*</text><ellipse cx="1823.5" cy="1995.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1832.5" y="1998.2339">outgrowth_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2007.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1832.5" y="2011.0386">radii_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2020.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1832.5" y="2023.8433">rates_ : VectorMatrix*</text><ellipse cx="1823.5" cy="2033.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1832.5" y="2036.6479">radiiSize_ : int</text><ellipse cx="1823.5" cy="2046.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1832.5" y="2049.4526">spikeCounts_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1813.5" x2="3106.5" y1="2056.0469" y2="2056.0469"/><ellipse cx="1823.5" cy="2067.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1832.5" y="2070.2573">ConnGrowth()</text><ellipse cx="1823.5" cy="2079.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1832.5" y="2083.062">~ConnGrowth()</text><ellipse cx="1823.5" cy="2092.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1832.5" y="2095.8667">Create() : Connections*</text><ellipse cx="1823.5" cy="2105.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1832.5" y="2108.6714">updateConnections(AllVertices&amp; neurons, Layout* layout) : bool</text><ellipse cx="1823.5" cy="2118.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1832.5" y="2121.4761">load(Archive&amp; archive) : void</text><ellipse cx="1823.5" cy="2131.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1832.5" y="2134.2808">loadParameters() : void</text><ellipse cx="1823.5" cy="2143.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1832.5" y="2147.0854">printParameters() : void {query}</text><ellipse cx="1823.5" cy="2156.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1832.5" y="2159.8901">printRadii() : void {query}</text><ellipse cx="1823.5" cy="2169.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1832.5" y="2172.6948">save(Archive&amp; archive) : void {query}</text><ellipse cx="1823.5" cy="2182.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="1832.5" y="2185.4995">setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2192.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1832.5" y="2198.3042">updateConns(AllVertices&amp; neurons) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2204.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="1832.5" y="2211.1089">updateFrontiers(const int numVertices, Layout* layout) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1820.5" y="2217.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1832.5" y="2223.9136">updateOverlap(BGFLOAT numVertices, Layout* layout) : void</text><ellipse cx="1823.5" cy="2233.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1269" x="1832.5" y="2236.7183">updateSynapsesWeights(const int numVertices, AllVertices&amp; neurons, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1823.5" cy="2246.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1832.5" y="2249.5229">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[b671e9144a70d5380b4364952f259167]
class ConnStatic--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="316.8984" id="ConnStatic" style="stroke: #A80036; stroke-width: 1.5;" width="475" x="1302.5" y="1913.5"/><ellipse cx="1501.75" cy="1929.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1504.7188,1935.1406 Q1504.1406,1935.4375 1503.5,1935.5781 Q1502.8594,1935.7344 1502.1563,1935.7344 Q1499.6563,1935.7344 1498.3281,1934.0938 Q1497.0156,1932.4375 1497.0156,1929.3125 Q1497.0156,1926.1875 1498.3281,1924.5313 Q1499.6563,1922.875 1502.1563,1922.875 Q1502.8594,1922.875 1503.5,1923.0313 Q1504.1563,1923.1875 1504.7188,1923.4844 L1504.7188,1926.2031 Q1504.0938,1925.625 1503.5,1925.3594 Q1502.9063,1925.0781 1502.2813,1925.0781 Q1500.9375,1925.0781 1500.25,1926.1563 Q1499.5625,1927.2188 1499.5625,1929.3125 Q1499.5625,1931.4063 1500.25,1932.4844 Q1500.9375,1933.5469 1502.2813,1933.5469 Q1502.9063,1933.5469 1503.5,1933.2813 Q1504.0938,1933 1504.7188,1932.4219 L1504.7188,1935.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1522.25" y="1933.6543">ConnStatic</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="1776.5" y1="1945.5" y2="1945.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1953.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1322.5" y="1959.7104">excWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1966.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1322.5" y="1972.5151">inhWeight_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1979.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1322.5" y="1985.3198">rewiringProbability_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="1991.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1322.5" y="1998.1245">threshConnsRadius_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2004.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1322.5" y="2010.9292">WCurrentEpoch_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2017.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1322.5" y="2023.7339">connsPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2030.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1322.5" y="2036.5386">radiiSize_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2043.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1322.5" y="2049.3433">destVertexIndexCurrentEpoch_ : int*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1310.5" y="2055.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1322.5" y="2062.1479">sourceVertexIndexCurrentEpoch_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1303.5" x2="1776.5" y1="2068.7422" y2="2068.7422"/><ellipse cx="1313.5" cy="2079.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1322.5" y="2082.9526">ConnStatic()</text><ellipse cx="1313.5" cy="2092.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1322.5" y="2095.7573">~ConnStatic()</text><ellipse cx="1313.5" cy="2105.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1322.5" y="2108.562">getConnsRadiusThresh() : BGFLOAT {query}</text><ellipse cx="1313.5" cy="2118.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1322.5" y="2121.3667">getWCurrentEpoch() : BGFLOAT* {query}</text><ellipse cx="1313.5" cy="2130.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1322.5" y="2134.1714">Create() : Connections*</text><ellipse cx="1313.5" cy="2143.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="1322.5" y="2146.9761">getDestVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="1313.5" cy="2156.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1322.5" y="2159.7808">getSourceVertexIndexCurrentEpoch() : int* {query}</text><ellipse cx="1313.5" cy="2169.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1322.5" y="2172.5854">load(Archive&amp; archive) : void</text><ellipse cx="1313.5" cy="2182.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1322.5" y="2185.3901">loadParameters() : void</text><ellipse cx="1313.5" cy="2194.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1322.5" y="2198.1948">printParameters() : void {query}</text><ellipse cx="1313.5" cy="2207.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1322.5" y="2210.9995">save(Archive&amp; archive) : void {query}</text><ellipse cx="1313.5" cy="2220.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="1322.5" y="2223.8042">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void</text><!--MD5=[24bb951fb6b9ac52df1580923e830244]
class Connections--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="252.875" id="Connections" style="stroke: #A80036; stroke-width: 1.5;" width="1293" x="1460.5" y="1395.5"/><ellipse cx="2064.25" cy="1411.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2064.3594,1406.8438 L2063.2031,1411.9219 L2065.5313,1411.9219 L2064.3594,1406.8438 Z M2062.875,1404.6094 L2065.8594,1404.6094 L2069.2188,1417 L2066.7656,1417 L2066,1413.9375 L2062.7188,1413.9375 L2061.9688,1417 L2059.5313,1417 L2062.875,1404.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="2084.75" y="1415.6543">Connections</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1461.5" x2="2752.5" y1="1427.5" y2="1427.5"/><polygon fill="none" points="1471.5,1433.5,1475.5,1437.5,1471.5,1441.5,1467.5,1437.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1480.5" y="1441.7104">edgeLogger_ : log4cplus::Logger</text><polygon fill="none" points="1471.5,1446.3047,1475.5,1450.3047,1471.5,1454.3047,1467.5,1450.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1480.5" y="1454.5151">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="1471.5,1459.1094,1475.5,1463.1094,1471.5,1467.1094,1467.5,1463.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1480.5" y="1467.3198">edges_ : shared_ptr&lt;AllEdges&gt;</text><polygon fill="none" points="1471.5,1471.9141,1475.5,1475.9141,1471.5,1479.9141,1467.5,1475.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1480.5" y="1480.1245">synapseIndexMap_ : shared_ptr&lt;EdgeIndexMap&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1461.5" x2="2752.5" y1="1486.7188" y2="1486.7188"/><ellipse cx="1471.5" cy="1497.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1480.5" y="1500.9292">Connections()</text><ellipse cx="1471.5" cy="1510.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1480.5" y="1513.7339">~Connections()</text><ellipse cx="1471.5" cy="1523.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1480.5" y="1526.5386">updateConnections(AllVertices&amp; vertices, Layout* layout) : bool</text><ellipse cx="1471.5" cy="1536.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="1480.5" y="1539.3433">getEdges() : shared_ptr&lt;AllEdges&gt; {query}</text><ellipse cx="1471.5" cy="1548.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="1480.5" y="1552.1479">getEdgeIndexMap() : shared_ptr&lt;EdgeIndexMap&gt; {query}</text><ellipse cx="1471.5" cy="1561.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1480.5" y="1564.9526">createEdgeIndexMap() : void</text><ellipse cx="1471.5" cy="1574.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="672" x="1480.5" y="1577.7573">createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices&amp; vertices, AllEdges&amp; synapses) : void</text><ellipse cx="1471.5" cy="1587.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="1480.5" y="1590.562">loadParameters() : void</text><ellipse cx="1471.5" cy="1600.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="187" x="1480.5" y="1603.3667">printParameters() : void {query}</text><ellipse cx="1471.5" cy="1612.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="469" x="1480.5" y="1616.1714">setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void</text><ellipse cx="1471.5" cy="1625.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1267" x="1480.5" y="1628.9761">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void</text><ellipse cx="1471.5" cy="1638.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="1480.5" y="1641.7808">updateSynapsesWeights(const int numVertices, AllVertices&amp; vertices, AllEdges&amp; synapses, Layout* layout) : void</text><!--MD5=[07560c205a8067cf69726ad645fec973]
class ConnectionsFactory--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="ConnectionsFactory" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="1883.5" y="1044.5"/><ellipse cx="2040.75" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2043.7188,1066.1406 Q2043.1406,1066.4375 2042.5,1066.5781 Q2041.8594,1066.7344 2041.1563,1066.7344 Q2038.6563,1066.7344 2037.3281,1065.0938 Q2036.0156,1063.4375 2036.0156,1060.3125 Q2036.0156,1057.1875 2037.3281,1055.5313 Q2038.6563,1053.875 2041.1563,1053.875 Q2041.8594,1053.875 2042.5,1054.0313 Q2043.1563,1054.1875 2043.7188,1054.4844 L2043.7188,1057.2031 Q2043.0938,1056.625 2042.5,1056.3594 Q2041.9063,1056.0781 2041.2813,1056.0781 Q2039.9375,1056.0781 2039.25,1057.1563 Q2038.5625,1058.2188 2038.5625,1060.3125 Q2038.5625,1062.4063 2039.25,1063.4844 Q2039.9375,1064.5469 2041.2813,1064.5469 Q2041.9063,1064.5469 2042.5,1064.2813 Q2043.0938,1064 2043.7188,1063.4219 L2043.7188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="2061.25" y="1064.6543">ConnectionsFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1884.5" x2="2329.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1891.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1903.5" y="1090.7104">createFunctions : ConnectionsFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1891.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1903.5" y="1103.5151">connectionsInstance : shared_ptr&lt;Connections&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1884.5" x2="2329.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1891.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1903.5" y="1124.3198">ConnectionsFactory()</text><ellipse cx="1894.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1903.5" y="1137.1245">~ConnectionsFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1891.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1903.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : Connections*</text><ellipse cx="1894.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="203" x="1903.5" y="1162.7339">getInstance() : ConnectionsFactory*</text><ellipse cx="1894.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="1903.5" y="1175.5386">createConnections(const string&amp; className) : shared_ptr&lt;Connections&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1891.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="1903.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[12f7f85e6a82a668bac37f73aa8a25f9]
class DynamicLayout--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="176.0469" id="DynamicLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="6329" y="1984"/><ellipse cx="6467.25" cy="2000" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6470.2188,2005.6406 Q6469.6406,2005.9375 6469,2006.0781 Q6468.3594,2006.2344 6467.6563,2006.2344 Q6465.1563,2006.2344 6463.8281,2004.5938 Q6462.5156,2002.9375 6462.5156,1999.8125 Q6462.5156,1996.6875 6463.8281,1995.0313 Q6465.1563,1993.375 6467.6563,1993.375 Q6468.3594,1993.375 6469,1993.5313 Q6469.6563,1993.6875 6470.2188,1993.9844 L6470.2188,1996.7031 Q6469.5938,1996.125 6469,1995.8594 Q6468.4063,1995.5781 6467.7813,1995.5781 Q6466.4375,1995.5781 6465.75,1996.6563 Q6465.0625,1997.7188 6465.0625,1999.8125 Q6465.0625,2001.9063 6465.75,2002.9844 Q6466.4375,2004.0469 6467.7813,2004.0469 Q6468.4063,2004.0469 6469,2003.7813 Q6469.5938,2003.5 6470.2188,2002.9219 L6470.2188,2005.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="6487.75" y="2004.1543">DynamicLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6330" x2="6706" y1="2016" y2="2016"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6337" y="2024"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="6349" y="2030.2104">fractionEndogenouslyActive_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6337" y="2036.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6349" y="2043.0151">fractionExcitatory_ : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6330" x2="6706" y1="2049.6094" y2="2049.6094"/><ellipse cx="6340" cy="2060.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6349" y="2063.8198">DynamicLayout()</text><ellipse cx="6340" cy="2073.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6349" y="2076.6245">~DynamicLayout()</text><ellipse cx="6340" cy="2086.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="6349" y="2089.4292">Create() : Layout*</text><ellipse cx="6340" cy="2099.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="6349" y="2102.2339">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="6340" cy="2111.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="6349" y="2115.0386">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="6340" cy="2124.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6349" y="2127.8433">initStarterMap(const int numVertices) : void</text><ellipse cx="6340" cy="2137.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6349" y="2140.6479">loadParameters() : void</text><ellipse cx="6340" cy="2150.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6349" y="2153.4526">printParameters() : void {query}</text><!--MD5=[2137c854024e09e8076c84fb007b1c3c]
class EdgesFactory--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="EdgesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="658.5" y="1447"/><ellipse cx="828.25" cy="1463" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M831.2188,1468.6406 Q830.6406,1468.9375 830,1469.0781 Q829.3594,1469.2344 828.6563,1469.2344 Q826.1563,1469.2344 824.8281,1467.5938 Q823.5156,1465.9375 823.5156,1462.8125 Q823.5156,1459.6875 824.8281,1458.0313 Q826.1563,1456.375 828.6563,1456.375 Q829.3594,1456.375 830,1456.5313 Q830.6563,1456.6875 831.2188,1456.9844 L831.2188,1459.7031 Q830.5938,1459.125 830,1458.8594 Q829.4063,1458.5781 828.7813,1458.5781 Q827.4375,1458.5781 826.75,1459.6563 Q826.0625,1460.7188 826.0625,1462.8125 Q826.0625,1464.9063 826.75,1465.9844 Q827.4375,1467.0469 828.7813,1467.0469 Q829.4063,1467.0469 830,1466.7813 Q830.5938,1466.5 831.2188,1465.9219 L831.2188,1468.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="848.75" y="1467.1543">EdgesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="1479" y2="1479"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="678.5" y="1493.2104">createFunctions : EdgesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1499.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="678.5" y="1506.0151">edgesInstance_ : shared_ptr&lt;AllEdges&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="659.5" x2="1090.5" y1="1512.6094" y2="1512.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1520.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="678.5" y="1526.8198">EdgesFactory()</text><ellipse cx="669.5" cy="1536.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="678.5" y="1539.6245">~EdgesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1546.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="678.5" y="1552.4292">invokeCreateFunction(const string&amp; className) : AllEdges*</text><ellipse cx="669.5" cy="1562.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="678.5" y="1565.2339">getInstance() : EdgesFactory*</text><ellipse cx="669.5" cy="1574.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="678.5" y="1578.0386">createEdges(const string&amp; className) : shared_ptr&lt;AllEdges&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="666.5" y="1584.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="678.5" y="1590.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[05f17831147ee39527b2431b4d22ccc3]
class EventBuffer--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="214.4609" id="EventBuffer" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="5026" y="3006.5"/><ellipse cx="5118.75" cy="3022.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5121.7188,3028.1406 Q5121.1406,3028.4375 5120.5,3028.5781 Q5119.8594,3028.7344 5119.1563,3028.7344 Q5116.6563,3028.7344 5115.3281,3027.0938 Q5114.0156,3025.4375 5114.0156,3022.3125 Q5114.0156,3019.1875 5115.3281,3017.5313 Q5116.6563,3015.875 5119.1563,3015.875 Q5119.8594,3015.875 5120.5,3016.0313 Q5121.1563,3016.1875 5121.7188,3016.4844 L5121.7188,3019.2031 Q5121.0938,3018.625 5120.5,3018.3594 Q5119.9063,3018.0781 5119.2813,3018.0781 Q5117.9375,3018.0781 5117.25,3019.1563 Q5116.5625,3020.2188 5116.5625,3022.3125 Q5116.5625,3024.4063 5117.25,3025.4844 Q5117.9375,3026.5469 5119.2813,3026.5469 Q5119.9063,3026.5469 5120.5,3026.2813 Q5121.0938,3026 5121.7188,3025.4219 L5121.7188,3028.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="5139.25" y="3026.6543">EventBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5027" x2="5291" y1="3038.5" y2="3038.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5034" y="3046.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5046" y="3052.7104">epochStart_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5034" y="3059.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5046" y="3065.5151">numEventsInEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5034" y="3072.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="5046" y="3078.3198">queueEnd_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5034" y="3084.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5046" y="3091.1245">queueFront_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5034" y="3097.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5046" y="3103.9292">eventTimeSteps_ : vector&lt;uint64_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5027" x2="5291" y1="3110.5234" y2="3110.5234"/><ellipse cx="5037" cy="3121.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5046" y="3124.7339">EventBuffer(int maxEvents)</text><ellipse cx="5037" cy="3134.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="5046" y="3137.5386">getNumEventsInEpoch() : int {query}</text><ellipse cx="5037" cy="3147.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="5046" y="3150.3433">getPastEvent(int offset) : uint64_t {query}</text><ellipse cx="5037" cy="3159.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5046" y="3163.1479">operator[](int i) : uint64_t {query}</text><ellipse cx="5037" cy="3172.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5046" y="3175.9526">clear() : void</text><ellipse cx="5037" cy="3185.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5046" y="3188.7573">insertEvent(uint64_t timeStep) : void</text><ellipse cx="5037" cy="3198.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5046" y="3201.562">resize(int maxEvents) : void</text><ellipse cx="5037" cy="3211.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5046" y="3214.3667">startNewEpoch() : void</text><!--MD5=[c01d281453c5d4cdc24a7f27a30cb7c5]
class FixedLayout--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="FixedLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="5916" y="1997"/><ellipse cx="6064.25" cy="2013" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6067.2188,2018.6406 Q6066.6406,2018.9375 6066,2019.0781 Q6065.3594,2019.2344 6064.6563,2019.2344 Q6062.1563,2019.2344 6060.8281,2017.5938 Q6059.5156,2015.9375 6059.5156,2012.8125 Q6059.5156,2009.6875 6060.8281,2008.0313 Q6062.1563,2006.375 6064.6563,2006.375 Q6065.3594,2006.375 6066,2006.5313 Q6066.6563,2006.6875 6067.2188,2006.9844 L6067.2188,2009.7031 Q6066.5938,2009.125 6066,2008.8594 Q6065.4063,2008.5781 6064.7813,2008.5781 Q6063.4375,2008.5781 6062.75,2009.6563 Q6062.0625,2010.7188 6062.0625,2012.8125 Q6062.0625,2014.9063 6062.75,2015.9844 Q6063.4375,2017.0469 6064.7813,2017.0469 Q6065.4063,2017.0469 6066,2016.7813 Q6066.5938,2016.5 6067.2188,2015.9219 L6067.2188,2018.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="6084.75" y="2017.1543">FixedLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5917" x2="6293" y1="2029" y2="2029"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5917" x2="6293" y1="2037" y2="2037"/><ellipse cx="5927" cy="2048" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5936" y="2051.2104">FixedLayout()</text><ellipse cx="5927" cy="2060.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="5936" y="2064.0151">~FixedLayout()</text><ellipse cx="5927" cy="2073.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="5936" y="2076.8198">Create() : Layout*</text><ellipse cx="5927" cy="2086.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5936" y="2089.6245">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="5927" cy="2099.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="5936" y="2102.4292">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="5927" cy="2112.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5936" y="2115.2339">initStarterMap(const int numVertices) : void</text><ellipse cx="5927" cy="2124.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5936" y="2128.0386">loadParameters() : void</text><ellipse cx="5927" cy="2137.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5936" y="2140.8433">printParameters() : void {query}</text><!--MD5=[124ec3daa98f7d6a805c6f5a48dde9c7]
class GPUModel--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="342.5078" id="GPUModel" style="stroke: #A80036; stroke-width: 1.5;" width="1017" x="2788.5" y="1350.5"/><ellipse cx="3261.25" cy="1366.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3264.2188,1372.1406 Q3263.6406,1372.4375 3263,1372.5781 Q3262.3594,1372.7344 3261.6563,1372.7344 Q3259.1563,1372.7344 3257.8281,1371.0938 Q3256.5156,1369.4375 3256.5156,1366.3125 Q3256.5156,1363.1875 3257.8281,1361.5313 Q3259.1563,1359.875 3261.6563,1359.875 Q3262.3594,1359.875 3263,1360.0313 Q3263.6563,1360.1875 3264.2188,1360.4844 L3264.2188,1363.2031 Q3263.5938,1362.625 3263,1362.3594 Q3262.4063,1362.0781 3261.7813,1362.0781 Q3260.4375,1362.0781 3259.75,1363.1563 Q3259.0625,1364.2188 3259.0625,1366.3125 Q3259.0625,1368.4063 3259.75,1369.4844 Q3260.4375,1370.5469 3261.7813,1370.5469 Q3262.4063,1370.5469 3263,1370.2813 Q3263.5938,1370 3264.2188,1369.4219 L3264.2188,1372.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="3281.75" y="1370.6543">GPUModel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2789.5" x2="3804.5" y1="1382.5" y2="1382.5"/><polygon fill="none" points="2799.5,1388.5,2803.5,1392.5,2799.5,1396.5,2795.5,1392.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="2808.5" y="1396.7104">allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*</text><polygon fill="none" points="2799.5,1401.3047,2803.5,1405.3047,2799.5,1409.3047,2795.5,1405.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2808.5" y="1409.5151">allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*</text><polygon fill="none" points="2799.5,1414.1094,2803.5,1418.1094,2799.5,1422.1094,2795.5,1418.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2808.5" y="1422.3198">synapseIndexMapDevice_ : EdgeIndexMap*</text><polygon fill="none" points="2799.5,1426.9141,2803.5,1430.9141,2799.5,1434.9141,2795.5,1430.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2808.5" y="1435.1245">randNoise_d : float*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2789.5" x2="3804.5" y1="1441.7188" y2="1441.7188"/><ellipse cx="2799.5" cy="1452.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2808.5" y="1455.9292">GPUModel()</text><ellipse cx="2799.5" cy="1465.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2808.5" y="1468.7339">~GPUModel()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1475.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="991" x="2808.5" y="1481.5386">addEdge(AllEdges&amp; synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate&amp; source, Coordinate&amp; dest, BGFLOAT* sumPoint, BGFLOAT deltaT) : void</text><ellipse cx="2799.5" cy="1491.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2808.5" y="1494.3433">advance() : void</text><polygon fill="#FFFF44" points="2799.5,1498.9375,2803.5,1502.9375,2799.5,1506.9375,2795.5,1502.9375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="2808.5" y="1507.1479">allocDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="2936.5" y="1507.1479">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3086.5" y="1507.1479">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1513.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2808.5" y="1519.9526">allocSynapseImap(int count) : void</text><polygon fill="#FFFF44" points="2799.5,1524.5469,2803.5,1528.5469,2799.5,1532.5469,2795.5,1528.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2808.5" y="1532.7573">calcSummationMap() : void</text><ellipse cx="2799.5" cy="1542.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2808.5" y="1545.562">copyCPUtoGPU() : void</text><ellipse cx="2799.5" cy="1555.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2808.5" y="1558.3667">copyGPUtoCPU() : void</text><ellipse cx="2799.5" cy="1567.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="2808.5" y="1571.1714">copySynapseIndexMapHostToDevice(EdgeIndexMap&amp; synapseIndexMapHost, int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1577.7656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="980" x="2808.5" y="1583.9761">createEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT* sp, BGFLOAT deltaT, edgeType type) : void</text><polygon fill="#FFFF44" points="2799.5,1588.5703,2803.5,1592.5703,2799.5,1596.5703,2795.5,1592.5703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="2808.5" y="1596.7808">deleteDeviceStruct(void</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="146" x="2945.5" y="1596.7808">allVerticesDevice, void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3095.5" y="1596.7808">allEdgesDevice) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1603.375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2808.5" y="1609.5854">deleteSynapseImap() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1616.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="2808.5" y="1622.3901">eraseEdge(AllEdges&amp; synapses, const int neuronIndex, const int synapseIndex) : void</text><ellipse cx="2799.5" cy="1631.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2808.5" y="1635.1948">finish() : void</text><ellipse cx="2799.5" cy="1644.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="2808.5" y="1647.9995">printGPUSynapsesPropsModel() : void {query}</text><ellipse cx="2799.5" cy="1657.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2808.5" y="1660.8042">setupSim() : void</text><ellipse cx="2799.5" cy="1670.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2808.5" y="1673.6089">updateConnections() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2796.5" y="1680.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2808.5" y="1686.4136">updateHistory() : void</text><!--MD5=[dd9a31495c85b5dc63c13c8cf57db1f9]
class GenericFunctionNode--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="99.2188" id="GenericFunctionNode" style="stroke: #A80036; stroke-width: 1.5;" width="599" x="6227.5" y="1472.5"/><ellipse cx="6455.25" cy="1488.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6458.2188,1494.1406 Q6457.6406,1494.4375 6457,1494.5781 Q6456.3594,1494.7344 6455.6563,1494.7344 Q6453.1563,1494.7344 6451.8281,1493.0938 Q6450.5156,1491.4375 6450.5156,1488.3125 Q6450.5156,1485.1875 6451.8281,1483.5313 Q6453.1563,1481.875 6455.6563,1481.875 Q6456.3594,1481.875 6457,1482.0313 Q6457.6563,1482.1875 6458.2188,1482.4844 L6458.2188,1485.2031 Q6457.5938,1484.625 6457,1484.3594 Q6456.4063,1484.0781 6455.7813,1484.0781 Q6454.4375,1484.0781 6453.75,1485.1563 Q6453.0625,1486.2188 6453.0625,1488.3125 Q6453.0625,1490.4063 6453.75,1491.4844 Q6454.4375,1492.5469 6455.7813,1492.5469 Q6456.4063,1492.5469 6457,1492.2813 Q6457.5938,1492 6458.2188,1491.4219 L6458.2188,1494.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="6475.75" y="1492.6543">GenericFunctionNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6228.5" x2="6825.5" y1="1504.5" y2="1504.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6228.5" x2="6825.5" y1="1512.5" y2="1512.5"/><ellipse cx="6238.5" cy="1523.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="573" x="6247.5" y="1526.7104">GenericFunctionNode(const Operations::op&amp; operationType, const std::function&lt;void ( )&gt;&amp; function)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6235.5" y="1533.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6247.5" y="1539.5151">function&lt;void()</text><ellipse cx="6238.5" cy="1549.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6247.5" y="1552.3198">~GenericFunctionNode()</text><ellipse cx="6238.5" cy="1561.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="6247.5" y="1565.1245">invokeFunction(const Operations::op&amp; operation) : bool {query}</text><!--MD5=[af68557a962a5f1f7548a7e590f8fd62]
class Hdf5GrowthRecorder--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="240.0703" id="Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="4628" y="2444"/><ellipse cx="4700.75" cy="2460" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4703.7188,2465.6406 Q4703.1406,2465.9375 4702.5,2466.0781 Q4701.8594,2466.2344 4701.1563,2466.2344 Q4698.6563,2466.2344 4697.3281,2464.5938 Q4696.0156,2462.9375 4696.0156,2459.8125 Q4696.0156,2456.6875 4697.3281,2455.0313 Q4698.6563,2453.375 4701.1563,2453.375 Q4701.8594,2453.375 4702.5,2453.5313 Q4703.1563,2453.6875 4703.7188,2453.9844 L4703.7188,2456.7031 Q4703.0938,2456.125 4702.5,2455.8594 Q4701.9063,2455.5781 4701.2813,2455.5781 Q4699.9375,2455.5781 4699.25,2456.6563 Q4698.5625,2457.7188 4698.5625,2459.8125 Q4698.5625,2461.9063 4699.25,2462.9844 Q4699.9375,2464.0469 4701.2813,2464.0469 Q4701.9063,2464.0469 4702.5,2463.7813 Q4703.0938,2463.5 4703.7188,2462.9219 L4703.7188,2465.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="130" x="4721.25" y="2464.1543">Hdf5GrowthRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4629" x2="4911" y1="2476" y2="2476"/><polygon fill="none" points="4639,2482,4643,2486,4639,2490,4635,2486" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4648" y="2490.2104">radiiHistory_ : BGFLOAT*</text><polygon fill="none" points="4639,2494.8047,4643,2498.8047,4639,2502.8047,4635,2498.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4648" y="2503.0151">ratesHistory_ : BGFLOAT*</text><polygon fill="none" points="4639,2507.6094,4643,2511.6094,4639,2515.6094,4635,2511.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4648" y="2515.8198">dataSetRadiiHist_ : DataSet</text><polygon fill="none" points="4639,2520.4141,4643,2524.4141,4639,2528.4141,4635,2524.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4648" y="2528.6245">dataSetRatesHist_ : DataSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4629" x2="4911" y1="2535.2188" y2="2535.2188"/><ellipse cx="4639" cy="2546.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4648" y="2549.4292">Hdf5GrowthRecorder()</text><ellipse cx="4639" cy="2559.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4648" y="2562.2339">~Hdf5GrowthRecorder()</text><ellipse cx="4639" cy="2571.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="4648" y="2575.0386">Create() : Recorder*</text><ellipse cx="4639" cy="2584.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4648" y="2587.8433">compileHistories(AllVertices&amp; neurons) : void</text><ellipse cx="4639" cy="2597.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4648" y="2600.6479">getValues() : void</text><polygon fill="#FFFF44" points="4639,2605.2422,4643,2609.2422,4639,2613.2422,4635,2609.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4648" y="2613.4526">initDataSet() : void</text><ellipse cx="4639" cy="2623.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4648" y="2626.2573">initDefaultValues() : void</text><ellipse cx="4639" cy="2635.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4648" y="2639.062">initValues() : void</text><ellipse cx="4639" cy="2648.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4648" y="2651.8667">printParameters() : void</text><ellipse cx="4639" cy="2661.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4648" y="2664.6714">term() : void</text><polygon fill="#FFFF44" points="4639,2669.2656,4643,2673.2656,4639,2677.2656,4635,2673.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4648" y="2677.4761">writeRadiiRates() : void</text><!--MD5=[2f81b0e77ba864956fe3cef8330f890e]
class Hdf5Recorder--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="380.9219" id="Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="4539.5" y="1881.5"/><ellipse cx="4722.75" cy="1897.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4725.7188,1903.1406 Q4725.1406,1903.4375 4724.5,1903.5781 Q4723.8594,1903.7344 4723.1563,1903.7344 Q4720.6563,1903.7344 4719.3281,1902.0938 Q4718.0156,1900.4375 4718.0156,1897.3125 Q4718.0156,1894.1875 4719.3281,1892.5313 Q4720.6563,1890.875 4723.1563,1890.875 Q4723.8594,1890.875 4724.5,1891.0313 Q4725.1563,1891.1875 4725.7188,1891.4844 L4725.7188,1894.2031 Q4725.0938,1893.625 4724.5,1893.3594 Q4723.9063,1893.0781 4723.2813,1893.0781 Q4721.9375,1893.0781 4721.25,1894.1563 Q4720.5625,1895.2188 4720.5625,1897.3125 Q4720.5625,1899.4063 4721.25,1900.4844 Q4721.9375,1901.5469 4723.2813,1901.5469 Q4723.9063,1901.5469 4724.5,1901.2813 Q4725.0938,1901 4725.7188,1900.4219 L4725.7188,1903.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="4743.25" y="1901.6543">Hdf5Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4540.5" x2="4999.5" y1="1913.5" y2="1913.5"/><polygon fill="none" points="4550.5,1919.5,4554.5,1923.5,4550.5,1927.5,4546.5,1923.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4559.5" y="1927.7104">dataSetNeuronThresh_ : DataSet*</text><polygon fill="none" points="4550.5,1932.3047,4554.5,1936.3047,4550.5,1940.3047,4546.5,1936.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4559.5" y="1940.5151">dataSetNeuronTypes_ : DataSet*</text><polygon fill="none" points="4550.5,1945.1094,4554.5,1949.1094,4550.5,1953.1094,4546.5,1949.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4559.5" y="1953.3198">dataSetProbedNeurons_ : DataSet*</text><polygon fill="none" points="4550.5,1957.9141,4554.5,1961.9141,4550.5,1965.9141,4546.5,1961.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4559.5" y="1966.1245">dataSetSimulationEndTime_ : DataSet*</text><polygon fill="none" points="4550.5,1970.7188,4554.5,1974.7188,4550.5,1978.7188,4546.5,1974.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4559.5" y="1978.9292">dataSetSpikesHist_ : DataSet*</text><polygon fill="none" points="4550.5,1983.5234,4554.5,1987.5234,4550.5,1991.5234,4546.5,1987.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4559.5" y="1991.7339">dataSetSpikesProbedNeurons_ : DataSet*</text><polygon fill="none" points="4550.5,1996.3281,4554.5,2000.3281,4550.5,2004.3281,4546.5,2000.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4559.5" y="2004.5386">dataSetStarterNeurons_ : DataSet*</text><polygon fill="none" points="4550.5,2009.1328,4554.5,2013.1328,4550.5,2017.1328,4546.5,2013.1328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4559.5" y="2017.3433">dataSetTsim_ : DataSet*</text><polygon fill="none" points="4550.5,2021.9375,4554.5,2025.9375,4550.5,2029.9375,4546.5,2025.9375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4559.5" y="2030.1479">dataSetXloc_ : DataSet*</text><polygon fill="none" points="4550.5,2034.7422,4554.5,2038.7422,4550.5,2042.7422,4546.5,2038.7422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4559.5" y="2042.9526">dataSetYloc_ : DataSet*</text><polygon fill="none" points="4550.5,2047.5469,4554.5,2051.5469,4550.5,2055.5469,4546.5,2051.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4559.5" y="2055.7573">resultOut_ : H5File*</text><polygon fill="none" points="4550.5,2060.3516,4554.5,2064.3516,4550.5,2068.3516,4546.5,2064.3516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4559.5" y="2068.562">offsetSpikesProbedNeurons_ : hsize_t*</text><polygon fill="none" points="4550.5,2073.1563,4554.5,2077.1563,4550.5,2081.1563,4546.5,2077.1563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4559.5" y="2081.3667">spikesHistory_ : int*</text><polygon fill="none" points="4550.5,2085.9609,4554.5,2089.9609,4550.5,2093.9609,4546.5,2089.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4559.5" y="2094.1714">spikesProbedNeurons_ : vector&lt;uint64_t&gt;*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4540.5" x2="4999.5" y1="2100.7656" y2="2100.7656"/><ellipse cx="4550.5" cy="2111.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4559.5" y="2114.9761">Hdf5Recorder()</text><ellipse cx="4550.5" cy="2124.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="4559.5" y="2127.7808">Create() : Recorder*</text><ellipse cx="4550.5" cy="2137.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4559.5" y="2140.5854">compileHistories(AllVertices&amp; neurons) : void</text><polygon fill="#FFFF44" points="4550.5,2145.1797,4554.5,2149.1797,4550.5,2153.1797,4546.5,2149.1797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="4559.5" y="2153.3901">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4550.5" cy="2162.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4559.5" y="2166.1948">getValues() : void</text><ellipse cx="4550.5" cy="2175.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4559.5" y="2178.9995">init() : void</text><polygon fill="#FFFF44" points="4550.5,2183.5938,4554.5,2187.5938,4550.5,2191.5938,4546.5,2187.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4559.5" y="2191.8042">initDataSet() : void</text><ellipse cx="4550.5" cy="2201.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4559.5" y="2204.6089">initDefaultValues() : void</text><ellipse cx="4550.5" cy="2214.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4559.5" y="2217.4136">initValues() : void</text><ellipse cx="4550.5" cy="2227.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4559.5" y="2230.2183">printParameters() : void</text><ellipse cx="4550.5" cy="2239.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4559.5" y="2243.0229">saveSimData(const AllVertices&amp; neurons) : void</text><ellipse cx="4550.5" cy="2252.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4559.5" y="2255.8276">term() : void</text><!--MD5=[99788c5c01261f19cd519066f428e9b5]
class IFunctionNode--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="86.4141" id="IFunctionNode" style="stroke: #A80036; stroke-width: 1.5;" width="390" x="6717" y="1076.5"/><ellipse cx="6862.25" cy="1092.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6862.3594,1087.8438 L6861.2031,1092.9219 L6863.5313,1092.9219 L6862.3594,1087.8438 Z M6860.875,1085.6094 L6863.8594,1085.6094 L6867.2188,1098 L6864.7656,1098 L6864,1094.9375 L6860.7188,1094.9375 L6859.9688,1098 L6857.5313,1098 L6860.875,1085.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="6882.75" y="1096.6543">IFunctionNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6718" x2="7106" y1="1108.5" y2="1108.5"/><polygon fill="none" points="6728,1114.5,6732,1118.5,6728,1122.5,6724,1118.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="6737" y="1122.7104">operationType_ : Operations::op</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6718" x2="7106" y1="1129.3047" y2="1129.3047"/><ellipse cx="6728" cy="1140.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6737" y="1143.5151">~IFunctionNode()</text><ellipse cx="6728" cy="1153.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="6737" y="1156.3198">invokeFunction(const Operations::op&amp; operation) : bool {query}</text><!--MD5=[da7fc25461f009319ada69721cf8c2d1]
class Recorder--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="201.6563" id="Recorder" style="stroke: #A80036; stroke-width: 1.5;" width="462" x="4529" y="1421"/><ellipse cx="4727.25" cy="1437" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4727.3594,1432.3438 L4726.2031,1437.4219 L4728.5313,1437.4219 L4727.3594,1432.3438 Z M4725.875,1430.1094 L4728.8594,1430.1094 L4732.2188,1442.5 L4729.7656,1442.5 L4729,1439.4375 L4725.7188,1439.4375 L4724.9688,1442.5 L4722.5313,1442.5 L4725.875,1430.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="4747.75" y="1441.1543">Recorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4530" x2="4990" y1="1453" y2="1453"/><polygon fill="none" points="4540,1459,4544,1463,4540,1467,4536,1463" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4549" y="1467.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="4540,1471.8047,4544,1475.8047,4540,1479.8047,4536,1475.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4549" y="1480.0151">resultFileName_ : string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4530" x2="4990" y1="1486.6094" y2="1486.6094"/><ellipse cx="4540" cy="1497.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="4549" y="1500.8198">~Recorder()</text><ellipse cx="4540" cy="1510.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="4549" y="1513.6245">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="4540,1518.2188,4544,1522.2188,4540,1526.2188,4536,1522.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="4549" y="1526.4292">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4540" cy="1536.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="4549" y="1539.2339">getValues() : void</text><ellipse cx="4540" cy="1548.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="4549" y="1552.0386">init() : void</text><ellipse cx="4540" cy="1561.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="4549" y="1564.8433">initDefaultValues() : void</text><ellipse cx="4540" cy="1574.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="4549" y="1577.6479">initValues() : void</text><ellipse cx="4540" cy="1587.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="4549" y="1590.4526">printParameters() : void</text><ellipse cx="4540" cy="1600.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="270" x="4549" y="1603.2573">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="4540" cy="1612.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="4549" y="1616.062">term() : void</text><!--MD5=[caebf2ddd0fe15aa1cd7c0f919e7d6a1]
class Layout--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="393.7266" id="Layout" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="5812" y="1325"/><ellipse cx="5976.25" cy="1341" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5976.3594,1336.3438 L5975.2031,1341.4219 L5977.5313,1341.4219 L5976.3594,1336.3438 Z M5974.875,1334.1094 L5977.8594,1334.1094 L5981.2188,1346.5 L5978.7656,1346.5 L5978,1343.4375 L5974.7188,1343.4375 L5973.9688,1346.5 L5971.5313,1346.5 L5974.875,1334.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="5996.75" y="1345.1543">Layout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5813" x2="6191" y1="1357" y2="1357"/><ellipse cx="5823" cy="1368" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5832" y="1371.2104">numCallerVertices_ : BGSIZE</text><ellipse cx="5823" cy="1380.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5832" y="1384.0151">numEndogenouslyActiveNeurons_ : BGSIZE</text><ellipse cx="5823" cy="1393.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5832" y="1396.8198">dist2_ : CompleteMatrix*</text><ellipse cx="5823" cy="1406.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5832" y="1409.6245">dist_ : CompleteMatrix*</text><ellipse cx="5823" cy="1419.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5832" y="1422.4292">xloc_ : VectorMatrix*</text><ellipse cx="5823" cy="1432.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5832" y="1435.2339">yloc_ : VectorMatrix*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5820" y="1441.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5832" y="1448.0386">gridLayout_ : bool</text><ellipse cx="5823" cy="1457.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5832" y="1460.8433">starterMap_ : bool*</text><polygon fill="none" points="5823,1465.4375,5827,1469.4375,5823,1473.4375,5819,1469.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5832" y="1473.6479">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="5823,1478.2422,5827,1482.2422,5823,1486.2422,5819,1482.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="5832" y="1486.4526">vertices_ : shared_ptr&lt;AllVertices&gt;</text><polygon fill="none" points="5823,1491.0469,5827,1495.0469,5823,1499.0469,5819,1495.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="5832" y="1499.2573">callerVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="5823,1503.8516,5827,1507.8516,5823,1511.8516,5819,1507.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="5832" y="1512.062">endogenouslyActiveNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="5823,1516.6563,5827,1520.6563,5823,1524.6563,5819,1520.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5832" y="1524.8667">inhibitoryNeuronLayout_ : vector&lt;int&gt;</text><ellipse cx="5823" cy="1534.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5832" y="1537.6714">probedNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="5823,1542.2656,5827,1546.2656,5823,1550.2656,5819,1546.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5832" y="1550.4761">psapVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="5823,1555.0703,5827,1559.0703,5823,1563.0703,5819,1559.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="5832" y="1563.2808">responderVertexList_ : vector&lt;int&gt;</text><ellipse cx="5823" cy="1572.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5832" y="1576.0854">vertexTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5813" x2="6191" y1="1582.6797" y2="1582.6797"/><ellipse cx="5823" cy="1593.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="5832" y="1596.8901">Layout()</text><ellipse cx="5823" cy="1606.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="5832" y="1609.6948">~Layout()</text><ellipse cx="5823" cy="1619.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="5832" y="1622.4995">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="5823" cy="1632.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5832" y="1635.3042">getVertices() : shared_ptr&lt;AllVertices&gt; {query}</text><ellipse cx="5823" cy="1644.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="5832" y="1648.1089">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="5823" cy="1657.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5832" y="1660.9136">initStarterMap(const int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5820" y="1667.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5832" y="1673.7183">initVerticesLocs() : void</text><ellipse cx="5823" cy="1683.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="5832" y="1686.5229">loadParameters() : void</text><ellipse cx="5823" cy="1696.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5832" y="1699.3276">printParameters() : void {query}</text><ellipse cx="5823" cy="1708.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5832" y="1712.1323">setupLayout() : void</text><!--MD5=[e2bec1e8f5041d1015728825611f3c9f]
class LayoutFactory--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="LayoutFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="5785.5" y="1044.5"/><ellipse cx="5954.25" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5957.2188,1066.1406 Q5956.6406,1066.4375 5956,1066.5781 Q5955.3594,1066.7344 5954.6563,1066.7344 Q5952.1563,1066.7344 5950.8281,1065.0938 Q5949.5156,1063.4375 5949.5156,1060.3125 Q5949.5156,1057.1875 5950.8281,1055.5313 Q5952.1563,1053.875 5954.6563,1053.875 Q5955.3594,1053.875 5956,1054.0313 Q5956.6563,1054.1875 5957.2188,1054.4844 L5957.2188,1057.2031 Q5956.5938,1056.625 5956,1056.3594 Q5955.4063,1056.0781 5954.7813,1056.0781 Q5953.4375,1056.0781 5952.75,1057.1563 Q5952.0625,1058.2188 5952.0625,1060.3125 Q5952.0625,1062.4063 5952.75,1063.4844 Q5953.4375,1064.5469 5954.7813,1064.5469 Q5955.4063,1064.5469 5956,1064.2813 Q5956.5938,1064 5957.2188,1063.4219 L5957.2188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="5974.75" y="1064.6543">LayoutFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5786.5" x2="6217.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5793.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5805.5" y="1090.7104">createFunctions : LayoutFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5793.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="5805.5" y="1103.5151">layoutInstance : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5786.5" x2="6217.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5793.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5805.5" y="1124.3198">LayoutFactory()</text><ellipse cx="5796.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5805.5" y="1137.1245">~LayoutFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5793.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="5805.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : Layout*</text><ellipse cx="5796.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="5805.5" y="1162.7339">getInstance() : LayoutFactory*</text><ellipse cx="5796.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5805.5" y="1175.5386">createLayout(const string&amp; className) : shared_ptr&lt;Layout&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5793.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="5805.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[7e20e022571e30ec1001cf6eabd7f3e2]
class Model--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="291.2891" id="Model" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="4001" y="974"/><ellipse cx="4145.25" cy="990" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4145.3594,985.3438 L4144.2031,990.4219 L4146.5313,990.4219 L4145.3594,985.3438 Z M4143.875,983.1094 L4146.8594,983.1094 L4150.2188,995.5 L4147.7656,995.5 L4147,992.4375 L4143.7188,992.4375 L4142.9688,995.5 L4140.5313,995.5 L4143.875,983.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="4165.75" y="994.1543">Model</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4002" x2="4334" y1="1006" y2="1006"/><polygon fill="none" points="4012,1012,4016,1016,4012,1020,4008,1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4021" y="1020.2104">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="4012,1024.8047,4016,1028.8047,4012,1032.8047,4008,1028.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4021" y="1033.0151">connections_ : shared_ptr&lt;Connections&gt;</text><polygon fill="none" points="4012,1037.6094,4016,1041.6094,4012,1045.6094,4008,1041.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4021" y="1045.8198">recorder_ : shared_ptr&lt;Recorder&gt;</text><polygon fill="none" points="4012,1050.4141,4016,1054.4141,4012,1058.4141,4008,1054.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4021" y="1058.6245">layout_ : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4002" x2="4334" y1="1065.2188" y2="1065.2188"/><ellipse cx="4012" cy="1076.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4021" y="1079.4292">Model()</text><ellipse cx="4012" cy="1089.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="4021" y="1092.2339">~Model()</text><ellipse cx="4012" cy="1101.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="4021" y="1105.0386">getConnections() : shared_ptr&lt;Connections&gt; {query}</text><ellipse cx="4012" cy="1114.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4021" y="1117.8433">getRecorder() : shared_ptr&lt;Recorder&gt; {query}</text><ellipse cx="4012" cy="1127.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4021" y="1130.6479">getLayout() : shared_ptr&lt;Layout&gt; {query}</text><ellipse cx="4012" cy="1140.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="4021" y="1143.4526">advance() : void</text><polygon fill="#FFFF44" points="4012,1148.0469,4016,1152.0469,4012,1156.0469,4008,1152.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="4021" y="1156.2573">copyCPUtoGPU() : void</text><polygon fill="#FFFF44" points="4012,1160.8516,4016,1164.8516,4012,1168.8516,4008,1164.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="4021" y="1169.062">copyGPUtoCPU() : void</text><polygon fill="#FFFF44" points="4012,1173.6563,4016,1177.6563,4012,1181.6563,4008,1177.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4021" y="1181.8667">createAllVertices() : void</text><ellipse cx="4012" cy="1191.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="4021" y="1194.6714">finish() : void</text><polygon fill="#FFFF44" points="4012,1199.2656,4016,1203.2656,4012,1207.2656,4008,1203.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4021" y="1207.4761">logSimStep() : void {query}</text><ellipse cx="4012" cy="1217.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4021" y="1220.2808">saveResults() : void</text><ellipse cx="4012" cy="1229.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4021" y="1233.0854">setupSim() : void</text><ellipse cx="4012" cy="1242.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="4021" y="1245.8901">updateConnections() : void</text><ellipse cx="4012" cy="1255.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4021" y="1258.6948">updateHistory() : void</text><!--MD5=[314e3b7c2db0a5a356d5ece57f37d58b]
class OperationManager--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="OperationManager" style="stroke: #A80036; stroke-width: 1.5;" width="562" x="6631" y="386"/><ellipse cx="6849.25" cy="402" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6852.2188,407.6406 Q6851.6406,407.9375 6851,408.0781 Q6850.3594,408.2344 6849.6563,408.2344 Q6847.1563,408.2344 6845.8281,406.5938 Q6844.5156,404.9375 6844.5156,401.8125 Q6844.5156,398.6875 6845.8281,397.0313 Q6847.1563,395.375 6849.6563,395.375 Q6850.3594,395.375 6851,395.5313 Q6851.6563,395.6875 6852.2188,395.9844 L6852.2188,398.7031 Q6851.5938,398.125 6851,397.8594 Q6850.4063,397.5781 6849.7813,397.5781 Q6848.4375,397.5781 6847.75,398.6563 Q6847.0625,399.7188 6847.0625,401.8125 Q6847.0625,403.9063 6847.75,404.9844 Q6848.4375,406.0469 6849.7813,406.0469 Q6850.4063,406.0469 6851,405.7813 Q6851.5938,405.5 6852.2188,404.9219 L6852.2188,407.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="6869.75" y="406.1543">OperationManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6632" x2="7192" y1="418" y2="418"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6639" y="426"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="6651" y="432.2104">functionList_ : list&lt;unique_ptr&lt;IFunctionNode&gt;&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6639" y="438.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6651" y="445.0151">logger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6632" x2="7192" y1="451.6094" y2="451.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6639" y="459.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6651" y="465.8198">OperationManager()</text><ellipse cx="6642" cy="475.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6651" y="478.6245">~OperationManager()</text><ellipse cx="6642" cy="488.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="6651" y="491.4292">getInstance() : OperationManager&amp;</text><ellipse cx="6642" cy="501.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="6651" y="504.2339">operationToString(const Operations::op&amp; operation) : string {query}</text><ellipse cx="6642" cy="513.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="6651" y="517.0386">executeOperation(const Operations::op&amp; operation) : void {query}</text><ellipse cx="6642" cy="526.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="536" x="6651" y="529.8433">registerOperation(const Operations::op&amp; operation, const function&lt;void ( )&gt;&amp; function) : void</text><!--MD5=[fdf81c1c7218c7a86b85d500a2db5e87]
class Operations--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="48" id="Operations" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="6861.5" y="1498"/><ellipse cx="6876.5" cy="1514" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6879.4688,1519.6406 Q6878.8906,1519.9375 6878.25,1520.0781 Q6877.6094,1520.2344 6876.9063,1520.2344 Q6874.4063,1520.2344 6873.0781,1518.5938 Q6871.7656,1516.9375 6871.7656,1513.8125 Q6871.7656,1510.6875 6873.0781,1509.0313 Q6874.4063,1507.375 6876.9063,1507.375 Q6877.6094,1507.375 6878.25,1507.5313 Q6878.9063,1507.6875 6879.4688,1507.9844 L6879.4688,1510.7031 Q6878.8438,1510.125 6878.25,1509.8594 Q6877.6563,1509.5781 6877.0313,1509.5781 Q6875.6875,1509.5781 6875,1510.6563 Q6874.3125,1511.7188 6874.3125,1513.8125 Q6874.3125,1515.9063 6875,1516.9844 Q6875.6875,1518.0469 6877.0313,1518.0469 Q6877.6563,1518.0469 6878.25,1517.7813 Q6878.8438,1517.5 6879.4688,1516.9219 L6879.4688,1519.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="6890.5" y="1518.1543">Operations</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6862.5" x2="6961.5" y1="1530" y2="1530"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6862.5" x2="6961.5" y1="1538" y2="1538"/><!--MD5=[2d167d26ebdee84d71997832bfe86c3e]
class RecorderFactory--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="RecorderFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="4543.5" y="1044.5"/><ellipse cx="4704.25" cy="1060.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4707.2188,1066.1406 Q4706.6406,1066.4375 4706,1066.5781 Q4705.3594,1066.7344 4704.6563,1066.7344 Q4702.1563,1066.7344 4700.8281,1065.0938 Q4699.5156,1063.4375 4699.5156,1060.3125 Q4699.5156,1057.1875 4700.8281,1055.5313 Q4702.1563,1053.875 4704.6563,1053.875 Q4705.3594,1053.875 4706,1054.0313 Q4706.6563,1054.1875 4707.2188,1054.4844 L4707.2188,1057.2031 Q4706.5938,1056.625 4706,1056.3594 Q4705.4063,1056.0781 4704.7813,1056.0781 Q4703.4375,1056.0781 4702.75,1057.1563 Q4702.0625,1058.2188 4702.0625,1060.3125 Q4702.0625,1062.4063 4702.75,1063.4844 Q4703.4375,1064.5469 4704.7813,1064.5469 Q4705.4063,1064.5469 4706,1064.2813 Q4706.5938,1064 4707.2188,1063.4219 L4707.2188,1066.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="4724.75" y="1064.6543">RecorderFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4544.5" x2="4975.5" y1="1076.5" y2="1076.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4551.5" y="1084.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4563.5" y="1090.7104">createFunctions : RecorderFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4551.5" y="1097.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="4563.5" y="1103.5151">recorderInstance : shared_ptr&lt;Recorder&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4544.5" x2="4975.5" y1="1110.1094" y2="1110.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4551.5" y="1118.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4563.5" y="1124.3198">RecorderFactory()</text><ellipse cx="4554.5" cy="1133.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4563.5" y="1137.1245">~RecorderFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4551.5" y="1143.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="4563.5" y="1149.9292">invokeCreateFunction(const string&amp; className) : Recorder*</text><ellipse cx="4554.5" cy="1159.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="184" x="4563.5" y="1162.7339">getInstance() : RecorderFactory*</text><ellipse cx="4554.5" cy="1172.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="4563.5" y="1175.5386">createRecorder(const string&amp; className) : shared_ptr&lt;Recorder&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4551.5" y="1182.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="4563.5" y="1188.3433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[e78d3bd29d68b8fbdb4aae8710e3db25]
class Simulator--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="905.9141" id="Simulator" style="stroke: #A80036; stroke-width: 1.5;" width="354" x="3991" y="8"/><ellipse cx="4134.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4137.2188,29.6406 Q4136.6406,29.9375 4136,30.0781 Q4135.3594,30.2344 4134.6563,30.2344 Q4132.1563,30.2344 4130.8281,28.5938 Q4129.5156,26.9375 4129.5156,23.8125 Q4129.5156,20.6875 4130.8281,19.0313 Q4132.1563,17.375 4134.6563,17.375 Q4135.3594,17.375 4136,17.5313 Q4136.6563,17.6875 4137.2188,17.9844 L4137.2188,20.7031 Q4136.5938,20.125 4136,19.8594 Q4135.4063,19.5781 4134.7813,19.5781 Q4133.4375,19.5781 4132.75,20.6563 Q4132.0625,21.7188 4132.0625,23.8125 Q4132.0625,25.9063 4132.75,26.9844 Q4133.4375,28.0469 4134.7813,28.0469 Q4135.4063,28.0469 4136,27.7813 Q4136.5938,27.5 4137.2188,26.9219 L4137.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="4154.75" y="28.1543">Simulator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3992" x2="4344" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4011" y="54.2104">deltaT_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4011" y="67.0151">epochDuration_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="73.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4011" y="79.8198">maxRate_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="86.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4011" y="92.6245">pSummationMap_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="99.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="4011" y="105.4292">short_timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="112.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="4011" y="118.2339">timer : Timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="124.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4011" y="131.0386">rgEndogenouslyActiveNeuronMap_ : bool*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="137.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4011" y="143.8433">currentEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="150.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4011" y="156.6479">height_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="163.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4011" y="169.4526">maxEdgesPerVertex_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="176.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4011" y="182.2573">maxFiringRate_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="188.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4011" y="195.062">numEpochs_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="201.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4011" y="207.8667">totalNeurons_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="214.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="4011" y="220.6714">width_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="227.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4011" y="233.4761">consoleLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="240.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4011" y="246.2808">edgeLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="252.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4011" y="259.0854">fileLogger_ : log4cplus::Logger</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="265.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4011" y="271.8901">initRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="278.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4011" y="284.6948">noiseRngSeed_ : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="291.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4011" y="297.4995">model_ : shared_ptr&lt;Model&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="304.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4011" y="310.3042">configFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="316.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4011" y="323.1089">deserializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="329.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4011" y="335.9136">serializationFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="342.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4011" y="348.7183">stimulusFileName_ : string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="355.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="4011" y="361.5229">rgNeuronTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3992" x2="4344" y1="368.1172" y2="368.1172"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="376.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4011" y="382.3276">Simulator()</text><ellipse cx="4002" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="4011" y="395.1323">~Simulator()</text><ellipse cx="4002" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4011" y="407.937">getDeltaT() : BGFLOAT {query}</text><ellipse cx="4002" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4011" y="420.7417">getEpochDuration() : BGFLOAT {query}</text><ellipse cx="4002" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4011" y="433.5464">getMaxRate() : BGFLOAT {query}</text><ellipse cx="4002" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="4011" y="446.3511">getPSummationMap() : BGFLOAT* {query}</text><ellipse cx="4002" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="4011" y="459.1558">getInstance() : Simulator&amp;</text><ellipse cx="4002" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4011" y="471.9604">getShort_timer() : Timer</text><ellipse cx="4002" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4011" y="484.7651">getTimer() : Timer</text><ellipse cx="4002" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4011" y="497.5698">instantiateSimulatorObjects() : bool</text><ellipse cx="4002" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="4011" y="510.3745">getRgEndogenouslyActiveNeuronMap() : bool* {query}</text><ellipse cx="4002" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4011" y="523.1792">getCurrentStep() : int {query}</text><ellipse cx="4002" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4011" y="535.9839">getHeight() : int {query}</text><ellipse cx="4002" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4011" y="548.7886">getMaxEdgesPerVertex() : int {query}</text><ellipse cx="4002" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4011" y="561.5933">getMaxFiringRate() : int {query}</text><ellipse cx="4002" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4011" y="574.3979">getNumEpochs() : int {query}</text><ellipse cx="4002" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4011" y="587.2026">getTotalVertices() : int {query}</text><ellipse cx="4002" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4011" y="600.0073">getWidth() : int {query}</text><ellipse cx="4002" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4011" y="612.812">getInitRngSeed() : long {query}</text><ellipse cx="4002" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="4011" y="625.6167">getNoiseRngSeed() : long {query}</text><ellipse cx="4002" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="4011" y="638.4214">getModel() : shared_ptr&lt;Model&gt; {query}</text><ellipse cx="4002" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4011" y="651.2261">getConfigFileName() : string {query}</text><ellipse cx="4002" cy="660.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4011" y="664.0308">getDeserializationFileName() : string {query}</text><ellipse cx="4002" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4011" y="676.8354">getSerializationFileName() : string {query}</text><ellipse cx="4002" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4011" y="689.6401">getStimulusFileName() : string {query}</text><ellipse cx="4002" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4011" y="702.4448">getRgNeuronTypeMap() : vertexType* {query}</text><ellipse cx="4002" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4011" y="715.2495">advanceEpoch(const int&amp; currentEpoch) : void {query}</text><ellipse cx="4002" cy="724.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4011" y="728.0542">copyCPUSynapseToGPU() : void</text><ellipse cx="4002" cy="737.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4011" y="740.8589">copyGPUSynapseToCPU() : void</text><ellipse cx="4002" cy="750.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4011" y="753.6636">finish() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3999" y="760.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4011" y="766.4683">freeResources() : void</text><ellipse cx="4002" cy="776.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4011" y="779.2729">loadParameters() : void</text><ellipse cx="4002" cy="788.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4011" y="792.0776">printParameters() : void {query}</text><ellipse cx="4002" cy="801.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4011" y="804.8823">reset() : void</text><ellipse cx="4002" cy="814.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4011" y="817.687">saveResults() : void {query}</text><ellipse cx="4002" cy="827.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4011" y="830.4917">setConfigFileName(const string&amp; fileName) : void</text><ellipse cx="4002" cy="840.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4011" y="843.2964">setDeserializationFileName(const string&amp; fileName) : void</text><ellipse cx="4002" cy="852.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4011" y="856.1011">setPSummationMap(BGFLOAT* summationMap) : void</text><ellipse cx="4002" cy="865.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="4011" y="868.9058">setSerializationFileName(const string&amp; fileName) : void</text><ellipse cx="4002" cy="878.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4011" y="881.7104">setStimulusFileName(const string&amp; fileName) : void</text><ellipse cx="4002" cy="891.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="4011" y="894.5151">setup() : void</text><ellipse cx="4002" cy="904.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="4011" y="907.3198">simulate() : void</text><!--MD5=[cc1c410fe2850b6da0ea695abfcea755]
class VerticesFactory--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="VerticesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="5241.5" y="1447"/><ellipse cx="5405.25" cy="1463" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5408.2188,1468.6406 Q5407.6406,1468.9375 5407,1469.0781 Q5406.3594,1469.2344 5405.6563,1469.2344 Q5403.1563,1469.2344 5401.8281,1467.5938 Q5400.5156,1465.9375 5400.5156,1462.8125 Q5400.5156,1459.6875 5401.8281,1458.0313 Q5403.1563,1456.375 5405.6563,1456.375 Q5406.3594,1456.375 5407,1456.5313 Q5407.6563,1456.6875 5408.2188,1456.9844 L5408.2188,1459.7031 Q5407.5938,1459.125 5407,1458.8594 Q5406.4063,1458.5781 5405.7813,1458.5781 Q5404.4375,1458.5781 5403.75,1459.6563 Q5403.0625,1460.7188 5403.0625,1462.8125 Q5403.0625,1464.9063 5403.75,1465.9844 Q5404.4375,1467.0469 5405.7813,1467.0469 Q5406.4063,1467.0469 5407,1466.7813 Q5407.5938,1466.5 5408.2188,1465.9219 L5408.2188,1468.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="5425.75" y="1467.1543">VerticesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5242.5" x2="5673.5" y1="1479" y2="1479"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5249.5" y="1487"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="5261.5" y="1493.2104">createFunctions : VerticesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5249.5" y="1499.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="5261.5" y="1506.0151">verticesInstance : shared_ptr&lt;AllVertices&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5242.5" x2="5673.5" y1="1512.6094" y2="1512.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5249.5" y="1520.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5261.5" y="1526.8198">VerticesFactory()</text><ellipse cx="5252.5" cy="1536.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5261.5" y="1539.6245">~VerticesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5249.5" y="1546.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="5261.5" y="1552.4292">invokeCreateFunction(const string&amp; className) : AllVertices*</text><ellipse cx="5252.5" cy="1562.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="5261.5" y="1565.2339">getInstance() : VerticesFactory*</text><ellipse cx="5252.5" cy="1574.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="5261.5" y="1578.0386">createVertices(const string&amp; className) : shared_ptr&lt;AllVertices&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5249.5" y="1584.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="5261.5" y="1590.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[e2fde7c48d35c1cbf959be266268237c]
class XmlRecorder--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="214.4609" id="XmlRecorder" style="stroke: #A80036; stroke-width: 1.5;" width="461" x="4043.5" y="1965"/><ellipse cx="4230.75" cy="1981" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4233.7188,1986.6406 Q4233.1406,1986.9375 4232.5,1987.0781 Q4231.8594,1987.2344 4231.1563,1987.2344 Q4228.6563,1987.2344 4227.3281,1985.5938 Q4226.0156,1983.9375 4226.0156,1980.8125 Q4226.0156,1977.6875 4227.3281,1976.0313 Q4228.6563,1974.375 4231.1563,1974.375 Q4231.8594,1974.375 4232.5,1974.5313 Q4233.1563,1974.6875 4233.7188,1974.9844 L4233.7188,1977.7031 Q4233.0938,1977.125 4232.5,1976.8594 Q4231.9063,1976.5781 4231.2813,1976.5781 Q4229.9375,1976.5781 4229.25,1977.6563 Q4228.5625,1978.7188 4228.5625,1980.8125 Q4228.5625,1982.9063 4229.25,1983.9844 Q4229.9375,1985.0469 4231.2813,1985.0469 Q4231.9063,1985.0469 4232.5,1984.7813 Q4233.0938,1984.5 4233.7188,1983.9219 L4233.7188,1986.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="4251.25" y="1985.1543">XmlRecorder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4044.5" x2="4503.5" y1="1997" y2="1997"/><polygon fill="none" points="4054.5,2003,4058.5,2007,4054.5,2011,4050.5,2007" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4063.5" y="2011.2104">spikesHistory_ : VectorMatrix</text><polygon fill="none" points="4054.5,2015.8047,4058.5,2019.8047,4054.5,2023.8047,4050.5,2019.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4063.5" y="2024.0151">resultOut_ : ofstream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4044.5" x2="4503.5" y1="2030.6094" y2="2030.6094"/><ellipse cx="4054.5" cy="2041.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4063.5" y="2044.8198">XmlRecorder()</text><ellipse cx="4054.5" cy="2054.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="115" x="4063.5" y="2057.6245">Create() : Recorder*</text><ellipse cx="4054.5" cy="2067.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4063.5" y="2070.4292">compileHistories(AllVertices&amp; vertices) : void</text><polygon fill="#FFFF44" points="4054.5,2075.0234,4058.5,2079.0234,4054.5,2083.0234,4050.5,2079.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="4063.5" y="2083.2339">getStarterNeuronMatrix(VectorMatrix&amp; matrix, const bool* starterMap) : void</text><ellipse cx="4054.5" cy="2092.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4063.5" y="2096.0386">getValues() : void</text><ellipse cx="4054.5" cy="2105.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4063.5" y="2108.8433">init() : void</text><ellipse cx="4054.5" cy="2118.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4063.5" y="2121.6479">initDefaultValues() : void</text><ellipse cx="4054.5" cy="2131.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4063.5" y="2134.4526">initValues() : void</text><ellipse cx="4054.5" cy="2144.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4063.5" y="2147.2573">printParameters() : void</text><ellipse cx="4054.5" cy="2156.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="4063.5" y="2160.062">saveSimData(const AllVertices&amp; vertices) : void</text><ellipse cx="4054.5" cy="2169.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4063.5" y="2172.8667">term() : void</text><!--MD5=[ee90c8bb66c047e800df5fa57f6b4f59]
class Operations::op--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="150.4375" id="Operations::op" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="6894.5" y="1997"/><ellipse cx="6915.8" cy="2013" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6919.9094,2019 L6912.1906,2019 L6912.1906,2006.6094 L6919.9094,2006.6094 L6919.9094,2008.7656 L6914.6438,2008.7656 L6914.6438,2011.4375 L6919.4094,2011.4375 L6919.4094,2013.5938 L6914.6438,2013.5938 L6914.6438,2016.8438 L6919.9094,2016.8438 L6919.9094,2019 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="6931.2" y="2017.1543">Operations::op</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6895.5" x2="7032.5" y1="2029" y2="2029"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="6900.5" y="2043.2104">copyFromGPU</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="6900.5" y="2056.0151">copyToGPU</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6900.5" y="2068.8198">deallocateGPUMemory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="6900.5" y="2081.6245">deserialize</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6900.5" y="2094.4292">loadParameters</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6900.5" y="2107.2339">printParameters</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6900.5" y="2120.0386">restoreToDefault</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="6900.5" y="2132.8433">serialize</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6895.5" x2="7032.5" y1="2139.4375" y2="2139.4375"/><!--MD5=[2c8a843ca32eecec980159abf8666d97]
class enumClassSynapses--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="112.0234" id="enumClassSynapses" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7228.5" y="405"/><ellipse cx="7256.55" cy="421" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7260.6594,427 L7252.9406,427 L7252.9406,414.6094 L7260.6594,414.6094 L7260.6594,416.7656 L7255.3938,416.7656 L7255.3938,419.4375 L7260.1594,419.4375 L7260.1594,421.5938 L7255.3938,421.5938 L7255.3938,424.8438 L7260.6594,424.8438 L7260.6594,427 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="7273.45" y="425.1543">enumClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7229.5" x2="7416.5" y1="437" y2="437"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="7234.5" y="451.2104">classAllDSSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="7234.5" y="464.0151">classAllDynamicSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="7234.5" y="476.8198">classAllSTDPSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="7234.5" y="489.6245">classAllSpikingSynapses</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7234.5" y="502.4292">undefClassSynapses</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7229.5" x2="7416.5" y1="509.0234" y2="509.0234"/><!--MD5=[12eed8bfdcfc08849f14b9c8d25e6e94]
class AllDSSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="124.8281" id="AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="3752.5" y="2501.5"/><ellipse cx="3767.5" cy="2517.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3770.4688,2523.1406 Q3769.8906,2523.4375 3769.25,2523.5781 Q3768.6094,2523.7344 3767.9063,2523.7344 Q3765.4063,2523.7344 3764.0781,2522.0938 Q3762.7656,2520.4375 3762.7656,2517.3125 Q3762.7656,2514.1875 3764.0781,2512.5313 Q3765.4063,2510.875 3767.9063,2510.875 Q3768.6094,2510.875 3769.25,2511.0313 Q3769.9063,2511.1875 3770.4688,2511.4844 L3770.4688,2514.2031 Q3769.8438,2513.625 3769.25,2513.3594 Q3768.6563,2513.0781 3768.0313,2513.0781 Q3766.6875,2513.0781 3766,2514.1563 Q3765.3125,2515.2188 3765.3125,2517.3125 Q3765.3125,2519.4063 3766,2520.4844 Q3766.6875,2521.5469 3768.0313,2521.5469 Q3768.6563,2521.5469 3769.25,2521.2813 Q3769.8438,2521 3770.4688,2520.4219 L3770.4688,2523.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="197" x="3781.5" y="2521.6543">AllDSSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3753.5" x2="3980.5" y1="2533.5" y2="2533.5"/><ellipse cx="3763.5" cy="2544.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3772.5" y="2547.7104">D_ : BGFLOAT*</text><ellipse cx="3763.5" cy="2557.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3772.5" y="2560.5151">F_ : BGFLOAT*</text><ellipse cx="3763.5" cy="2570.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3772.5" y="2573.3198">U_ : BGFLOAT*</text><ellipse cx="3763.5" cy="2582.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3772.5" y="2586.1245">r_ : BGFLOAT*</text><ellipse cx="3763.5" cy="2595.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3772.5" y="2598.9292">u_ : BGFLOAT*</text><ellipse cx="3763.5" cy="2608.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3772.5" y="2611.7339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3753.5" x2="3980.5" y1="2618.3281" y2="2618.3281"/><!--MD5=[4b1be41c79a1ff75e3d6100484a928eb]
class AllDynamicSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="124.8281" id="AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="3991" y="3051"/><ellipse cx="4006" cy="3067" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4008.9688,3072.6406 Q4008.3906,3072.9375 4007.75,3073.0781 Q4007.1094,3073.2344 4006.4063,3073.2344 Q4003.9063,3073.2344 4002.5781,3071.5938 Q4001.2656,3069.9375 4001.2656,3066.8125 Q4001.2656,3063.6875 4002.5781,3062.0313 Q4003.9063,3060.375 4006.4063,3060.375 Q4007.1094,3060.375 4007.75,3060.5313 Q4008.4063,3060.6875 4008.9688,3060.9844 L4008.9688,3063.7031 Q4008.3438,3063.125 4007.75,3062.8594 Q4007.1563,3062.5781 4006.5313,3062.5781 Q4005.1875,3062.5781 4004.5,3063.6563 Q4003.8125,3064.7188 4003.8125,3066.8125 Q4003.8125,3068.9063 4004.5,3069.9844 Q4005.1875,3071.0469 4006.5313,3071.0469 Q4007.1563,3071.0469 4007.75,3070.7813 Q4008.3438,3070.5 4008.9688,3069.9219 L4008.9688,3072.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="264" x="4020" y="3071.1543">AllDynamicSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3992" x2="4286" y1="3083" y2="3083"/><ellipse cx="4002" cy="3094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4011" y="3097.2104">D_ : BGFLOAT*</text><ellipse cx="4002" cy="3106.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4011" y="3110.0151">F_ : BGFLOAT*</text><ellipse cx="4002" cy="3119.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4011" y="3122.8198">U_ : BGFLOAT*</text><ellipse cx="4002" cy="3132.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4011" y="3135.6245">r_ : BGFLOAT*</text><ellipse cx="4002" cy="3145.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4011" y="3148.4292">u_ : BGFLOAT*</text><ellipse cx="4002" cy="3158.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4011" y="3161.2339">lastSpike_ : uint64_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3992" x2="4286" y1="3167.8281" y2="3167.8281"/><!--MD5=[017d3a10fe7408131050c5acc75b1a9b]
class AllEdgesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="176.0469" id="AllEdgesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="4292" y="1434"/><ellipse cx="4311.95" cy="1450" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4314.9188,1455.6406 Q4314.3406,1455.9375 4313.7,1456.0781 Q4313.0594,1456.2344 4312.3563,1456.2344 Q4309.8563,1456.2344 4308.5281,1454.5938 Q4307.2156,1452.9375 4307.2156,1449.8125 Q4307.2156,1446.6875 4308.5281,1445.0313 Q4309.8563,1443.375 4312.3563,1443.375 Q4313.0594,1443.375 4313.7,1443.5313 Q4314.3563,1443.6875 4314.9188,1443.9844 L4314.9188,1446.7031 Q4314.2938,1446.125 4313.7,1445.8594 Q4313.1063,1445.5781 4312.4813,1445.5781 Q4311.1375,1445.5781 4310.45,1446.6563 Q4309.7625,1447.7188 4309.7625,1449.8125 Q4309.7625,1451.9063 4310.45,1452.9844 Q4311.1375,1454.0469 4312.4813,1454.0469 Q4313.1063,1454.0469 4313.7,1453.7813 Q4314.2938,1453.5 4314.9188,1452.9219 L4314.9188,1455.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="4327.05" y="1454.1543">AllEdgesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4293" x2="4493" y1="1466" y2="1466"/><ellipse cx="4303" cy="1477" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4312" y="1480.2104">W_ : BGFLOAT*</text><ellipse cx="4303" cy="1489.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4312" y="1493.0151">psr_ : BGFLOAT*</text><ellipse cx="4303" cy="1502.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4312" y="1505.8198">maxEdgesPerVertex_ : BGSIZE</text><ellipse cx="4303" cy="1515.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4312" y="1518.6245">totalEdgeCount_ : BGSIZE</text><ellipse cx="4303" cy="1528.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4312" y="1531.4292">edgeCounts_ : BGSIZE*</text><ellipse cx="4303" cy="1541.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4312" y="1544.2339">inUse_ : bool*</text><ellipse cx="4303" cy="1553.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4312" y="1557.0386">type_ : edgeType*</text><ellipse cx="4303" cy="1566.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4312" y="1569.8433">countVertices_ : int</text><ellipse cx="4303" cy="1579.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4312" y="1582.6479">destVertexIndex_ : int*</text><ellipse cx="4303" cy="1592.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4312" y="1595.4526">sourceVertexIndex_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4293" x2="4493" y1="1602.0469" y2="1602.0469"/><!--MD5=[639115fe7f0fcce40793e2aa5cc37621]
class AllIFNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="252.875" id="AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="3478" y="2437.5"/><ellipse cx="3497.95" cy="2453.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3500.9188,2459.1406 Q3500.3406,2459.4375 3499.7,2459.5781 Q3499.0594,2459.7344 3498.3563,2459.7344 Q3495.8563,2459.7344 3494.5281,2458.0938 Q3493.2156,2456.4375 3493.2156,2453.3125 Q3493.2156,2450.1875 3494.5281,2448.5313 Q3495.8563,2446.875 3498.3563,2446.875 Q3499.0594,2446.875 3499.7,2447.0313 Q3500.3563,2447.1875 3500.9188,2447.4844 L3500.9188,2450.2031 Q3500.2938,2449.625 3499.7,2449.3594 Q3499.1063,2449.0781 3498.4813,2449.0781 Q3497.1375,2449.0781 3496.45,2450.1563 Q3495.7625,2451.2188 3495.7625,2453.3125 Q3495.7625,2455.4063 3496.45,2456.4844 Q3497.1375,2457.5469 3498.4813,2457.5469 Q3499.1063,2457.5469 3499.7,2457.2813 Q3500.2938,2457 3500.9188,2456.4219 L3500.9188,2459.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="183" x="3513.05" y="2457.6543">AllIFNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479" x2="3703" y1="2469.5" y2="2469.5"/><ellipse cx="3489" cy="2480.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3498" y="2483.7104">C1_ : BGFLOAT*</text><ellipse cx="3489" cy="2493.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3498" y="2496.5151">C2_ : BGFLOAT*</text><ellipse cx="3489" cy="2506.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3498" y="2509.3198">Cm_ : BGFLOAT*</text><ellipse cx="3489" cy="2518.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3498" y="2522.1245">I0_ : BGFLOAT*</text><ellipse cx="3489" cy="2531.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3498" y="2534.9292">Iinject_ : BGFLOAT*</text><ellipse cx="3489" cy="2544.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3498" y="2547.7339">Inoise_ : BGFLOAT*</text><ellipse cx="3489" cy="2557.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3498" y="2560.5386">Isyn_ : BGFLOAT*</text><ellipse cx="3489" cy="2570.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3498" y="2573.3433">Rm_ : BGFLOAT*</text><ellipse cx="3489" cy="2582.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3498" y="2586.1479">Tau_ : BGFLOAT*</text><ellipse cx="3489" cy="2595.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3498" y="2598.9526">Trefract_ : BGFLOAT*</text><ellipse cx="3489" cy="2608.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3498" y="2611.7573">Vinit_ : BGFLOAT*</text><ellipse cx="3489" cy="2621.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3498" y="2624.562">Vm_ : BGFLOAT*</text><ellipse cx="3489" cy="2634.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3498" y="2637.3667">Vreset_ : BGFLOAT*</text><ellipse cx="3489" cy="2646.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="3498" y="2650.1714">Vrest_ : BGFLOAT*</text><ellipse cx="3489" cy="2659.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3498" y="2662.9761">Vthresh_ : BGFLOAT*</text><ellipse cx="3489" cy="2672.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3498" y="2675.7808">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479" x2="3703" y1="2682.375" y2="2682.375"/><!--MD5=[bc6843495936d398fdad119946a0d209]
class AllIZHNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="124.8281" id="AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="3478" y="3051"/><ellipse cx="3493" cy="3067" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3495.9688,3072.6406 Q3495.3906,3072.9375 3494.75,3073.0781 Q3494.1094,3073.2344 3493.4063,3073.2344 Q3490.9063,3073.2344 3489.5781,3071.5938 Q3488.2656,3069.9375 3488.2656,3066.8125 Q3488.2656,3063.6875 3489.5781,3062.0313 Q3490.9063,3060.375 3493.4063,3060.375 Q3494.1094,3060.375 3494.75,3060.5313 Q3495.4063,3060.6875 3495.9688,3060.9844 L3495.9688,3063.7031 Q3495.3438,3063.125 3494.75,3062.8594 Q3494.1563,3062.5781 3493.5313,3062.5781 Q3492.1875,3062.5781 3491.5,3063.6563 Q3490.8125,3064.7188 3490.8125,3066.8125 Q3490.8125,3068.9063 3491.5,3069.9844 Q3492.1875,3071.0469 3493.5313,3071.0469 Q3494.1563,3071.0469 3494.75,3070.7813 Q3495.3438,3070.5 3495.9688,3069.9219 L3495.9688,3072.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="194" x="3507" y="3071.1543">AllIZHNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479" x2="3703" y1="3083" y2="3083"/><ellipse cx="3489" cy="3094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="3498" y="3097.2104">Aconst_ : BGFLOAT*</text><ellipse cx="3489" cy="3106.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3498" y="3110.0151">Bconst_ : BGFLOAT*</text><ellipse cx="3489" cy="3119.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3498" y="3122.8198">C3_ : BGFLOAT*</text><ellipse cx="3489" cy="3132.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3498" y="3135.6245">Cconst_ : BGFLOAT*</text><ellipse cx="3489" cy="3145.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3498" y="3148.4292">Dconst_ : BGFLOAT*</text><ellipse cx="3489" cy="3158.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="3498" y="3161.2339">u_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3479" x2="3703" y1="3167.8281" y2="3167.8281"/><!--MD5=[a7843438017f4a8113b6a979c3ec4039]
class AllSTDPSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="240.0703" id="AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="4017" y="2444"/><ellipse cx="4032" cy="2460" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4034.9688,2465.6406 Q4034.3906,2465.9375 4033.75,2466.0781 Q4033.1094,2466.2344 4032.4063,2466.2344 Q4029.9063,2466.2344 4028.5781,2464.5938 Q4027.2656,2462.9375 4027.2656,2459.8125 Q4027.2656,2456.6875 4028.5781,2455.0313 Q4029.9063,2453.375 4032.4063,2453.375 Q4033.1094,2453.375 4033.75,2453.5313 Q4034.4063,2453.6875 4034.9688,2453.9844 L4034.9688,2456.7031 Q4034.3438,2456.125 4033.75,2455.8594 Q4033.1563,2455.5781 4032.5313,2455.5781 Q4031.1875,2455.5781 4030.5,2456.6563 Q4029.8125,2457.7188 4029.8125,2459.8125 Q4029.8125,2461.9063 4030.5,2462.9844 Q4031.1875,2464.0469 4032.5313,2464.0469 Q4033.1563,2464.0469 4033.75,2463.7813 Q4034.3438,2463.5 4034.9688,2462.9219 L4034.9688,2465.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="212" x="4046" y="2464.1543">AllSTDPSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4018" x2="4260" y1="2476" y2="2476"/><ellipse cx="4028" cy="2487" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4037" y="2490.2104">Aneg_ : BGFLOAT*</text><ellipse cx="4028" cy="2499.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4037" y="2503.0151">Apos_ : BGFLOAT*</text><ellipse cx="4028" cy="2512.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4037" y="2515.8198">STDPgap_ : BGFLOAT*</text><ellipse cx="4028" cy="2525.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4037" y="2528.6245">Wex_ : BGFLOAT*</text><ellipse cx="4028" cy="2538.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4037" y="2541.4292">muneg_ : BGFLOAT*</text><ellipse cx="4028" cy="2551.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4037" y="2554.2339">mupos_ : BGFLOAT*</text><ellipse cx="4028" cy="2563.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4037" y="2567.0386">tauneg_ : BGFLOAT*</text><ellipse cx="4028" cy="2576.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4037" y="2579.8433">taupos_ : BGFLOAT*</text><ellipse cx="4028" cy="2589.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4037" y="2592.6479">tauspost_ : BGFLOAT*</text><ellipse cx="4028" cy="2602.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4037" y="2605.4526">tauspre_ : BGFLOAT*</text><ellipse cx="4028" cy="2615.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="4037" y="2618.2573">useFroemkeDanSTDP_ : bool*</text><ellipse cx="4028" cy="2627.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="4037" y="2631.062">delayIndexPost_ : int*</text><ellipse cx="4028" cy="2640.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4037" y="2643.8667">delayQueuePostLength_ : int*</text><ellipse cx="4028" cy="2653.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4037" y="2656.6714">totalDelayPost_ : int*</text><ellipse cx="4028" cy="2666.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4037" y="2669.4761">delayQueuePost_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4018" x2="4260" y1="2676.0703" y2="2676.0703"/><!--MD5=[4ac84e1680f309079c4f5159a2743064]
class AllSpikingNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="99.2188" id="AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="3466" y="2022.5"/><ellipse cx="3481" cy="2038.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3483.9688,2044.1406 Q3483.3906,2044.4375 3482.75,2044.5781 Q3482.1094,2044.7344 3481.4063,2044.7344 Q3478.9063,2044.7344 3477.5781,2043.0938 Q3476.2656,2041.4375 3476.2656,2038.3125 Q3476.2656,2035.1875 3477.5781,2033.5313 Q3478.9063,2031.875 3481.4063,2031.875 Q3482.1094,2031.875 3482.75,2032.0313 Q3483.4063,2032.1875 3483.9688,2032.4844 L3483.9688,2035.2031 Q3483.3438,2034.625 3482.75,2034.3594 Q3482.1563,2034.0781 3481.5313,2034.0781 Q3480.1875,2034.0781 3479.5,2035.1563 Q3478.8125,2036.2188 3478.8125,2038.3125 Q3478.8125,2040.4063 3479.5,2041.4844 Q3480.1875,2042.5469 3481.5313,2042.5469 Q3482.1563,2042.5469 3482.75,2042.2813 Q3483.3438,2042 3483.9688,2041.4219 L3483.9688,2044.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="3495" y="2042.6543">AllSpikingNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3467" x2="3715" y1="2054.5" y2="2054.5"/><ellipse cx="3477" cy="2065.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3486" y="2068.7104">hasFired_ : bool*</text><ellipse cx="3477" cy="2078.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3486" y="2081.5151">spikeCountOffset_ : int*</text><ellipse cx="3477" cy="2091.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3486" y="2094.3198">spikeCount_ : int*</text><ellipse cx="3477" cy="2103.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3486" y="2107.1245">spikeHistory_ : uint64_t**</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3467" x2="3715" y1="2113.7188" y2="2113.7188"/><!--MD5=[9207c363d1f0343d1c8507e42ff7f935]
class AllSpikingSynapsesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="124.8281" id="AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="3751.5" y="2009.5"/><ellipse cx="3766.5" cy="2025.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3769.4688,2031.1406 Q3768.8906,2031.4375 3768.25,2031.5781 Q3767.6094,2031.7344 3766.9063,2031.7344 Q3764.4063,2031.7344 3763.0781,2030.0938 Q3761.7656,2028.4375 3761.7656,2025.3125 Q3761.7656,2022.1875 3763.0781,2020.5313 Q3764.4063,2018.875 3766.9063,2018.875 Q3767.6094,2018.875 3768.25,2019.0313 Q3768.9063,2019.1875 3769.4688,2019.4844 L3769.4688,2022.2031 Q3768.8438,2021.625 3768.25,2021.3594 Q3767.6563,2021.0781 3767.0313,2021.0781 Q3765.6875,2021.0781 3765,2022.1563 Q3764.3125,2023.2188 3764.3125,2025.3125 Q3764.3125,2027.4063 3765,2028.4844 Q3765.6875,2029.5469 3767.0313,2029.5469 Q3767.6563,2029.5469 3768.25,2029.2813 Q3768.8438,2029 3769.4688,2028.4219 L3769.4688,2031.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="3780.5" y="2029.6543">AllSpikingSynapsesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3752.5" x2="4007.5" y1="2041.5" y2="2041.5"/><ellipse cx="3762.5" cy="2052.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3771.5" y="2055.7104">decay_ : BGFLOAT*</text><ellipse cx="3762.5" cy="2065.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3771.5" y="2068.5151">tau_ : BGFLOAT*</text><ellipse cx="3762.5" cy="2078.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3771.5" y="2081.3198">delayIndex_ : int*</text><ellipse cx="3762.5" cy="2090.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3771.5" y="2094.1245">delayQueueLength_ : int*</text><ellipse cx="3762.5" cy="2103.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3771.5" y="2106.9292">totalDelay_ : int*</text><ellipse cx="3762.5" cy="2116.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3771.5" y="2119.7339">delayQueue_ : uint32_t*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3752.5" x2="4007.5" y1="2126.3281" y2="2126.3281"/><!--MD5=[537ade6dbdfe6ef3b32240037651f8aa]
class AllVerticesDeviceProperties--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="60.8047" id="AllVerticesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="3840.5" y="1491.5"/><ellipse cx="3855.5" cy="1507.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3858.4688,1513.1406 Q3857.8906,1513.4375 3857.25,1513.5781 Q3856.6094,1513.7344 3855.9063,1513.7344 Q3853.4063,1513.7344 3852.0781,1512.0938 Q3850.7656,1510.4375 3850.7656,1507.3125 Q3850.7656,1504.1875 3852.0781,1502.5313 Q3853.4063,1500.875 3855.9063,1500.875 Q3856.6094,1500.875 3857.25,1501.0313 Q3857.9063,1501.1875 3858.4688,1501.4844 L3858.4688,1504.2031 Q3857.8438,1503.625 3857.25,1503.3594 Q3856.6563,1503.0781 3856.0313,1503.0781 Q3854.6875,1503.0781 3854,1504.1563 Q3853.3125,1505.2188 3853.3125,1507.3125 Q3853.3125,1509.4063 3854,1510.4844 Q3854.6875,1511.5469 3856.0313,1511.5469 Q3856.6563,1511.5469 3857.25,1511.2813 Q3857.8438,1511 3858.4688,1510.4219 L3858.4688,1513.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="3869.5" y="1511.6543">AllVerticesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3841.5" x2="4042.5" y1="1523.5" y2="1523.5"/><ellipse cx="3851.5" cy="1534.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3860.5" y="1537.7104">summationMap_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3841.5" x2="4042.5" y1="1544.3047" y2="1544.3047"/><!--MD5=[1ca6d9ba181062a9a4052698cf88a455]
class ConnGrowth::GrowthParams--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="137.6328" id="ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.5;" width="207" x="2356.5" y="2495"/><ellipse cx="2371.5" cy="2511" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2374.4688,2516.6406 Q2373.8906,2516.9375 2373.25,2517.0781 Q2372.6094,2517.2344 2371.9063,2517.2344 Q2369.4063,2517.2344 2368.0781,2515.5938 Q2366.7656,2513.9375 2366.7656,2510.8125 Q2366.7656,2507.6875 2368.0781,2506.0313 Q2369.4063,2504.375 2371.9063,2504.375 Q2372.6094,2504.375 2373.25,2504.5313 Q2373.9063,2504.6875 2374.4688,2504.9844 L2374.4688,2507.7031 Q2373.8438,2507.125 2373.25,2506.8594 Q2372.6563,2506.5781 2372.0313,2506.5781 Q2370.6875,2506.5781 2370,2507.6563 Q2369.3125,2508.7188 2369.3125,2510.8125 Q2369.3125,2512.9063 2370,2513.9844 Q2370.6875,2515.0469 2372.0313,2515.0469 Q2372.6563,2515.0469 2373.25,2514.7813 Q2373.8438,2514.5 2374.4688,2513.9219 L2374.4688,2516.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="175" x="2385.5" y="2515.1543">ConnGrowth::GrowthParams</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2357.5" x2="2562.5" y1="2527" y2="2527"/><ellipse cx="2367.5" cy="2538" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2376.5" y="2541.2104">beta : BGFLOAT</text><ellipse cx="2367.5" cy="2550.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2376.5" y="2554.0151">epsilon : BGFLOAT</text><ellipse cx="2367.5" cy="2563.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2376.5" y="2566.8198">maxRate : BGFLOAT</text><ellipse cx="2367.5" cy="2576.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2376.5" y="2579.6245">minRadius : BGFLOAT</text><ellipse cx="2367.5" cy="2589.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2376.5" y="2592.4292">rho : BGFLOAT</text><ellipse cx="2367.5" cy="2602.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2376.5" y="2605.2339">startRadius : BGFLOAT</text><ellipse cx="2367.5" cy="2614.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2376.5" y="2618.0386">targetRate : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2357.5" x2="2562.5" y1="2624.6328" y2="2624.6328"/><!--MD5=[0db2b2f8d15a42d02f46e8af06351a10]
class ConnStatic::DistDestVertex--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="86.4141" id="ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="1392" y="2521"/><ellipse cx="1451.25" cy="2537" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1454.2188,2542.6406 Q1453.6406,2542.9375 1453,2543.0781 Q1452.3594,2543.2344 1451.6563,2543.2344 Q1449.1563,2543.2344 1447.8281,2541.5938 Q1446.5156,2539.9375 1446.5156,2536.8125 Q1446.5156,2533.6875 1447.8281,2532.0313 Q1449.1563,2530.375 1451.6563,2530.375 Q1452.3594,2530.375 1453,2530.5313 Q1453.6563,2530.6875 1454.2188,2530.9844 L1454.2188,2533.7031 Q1453.5938,2533.125 1453,2532.8594 Q1452.4063,2532.5781 1451.7813,2532.5781 Q1450.4375,2532.5781 1449.75,2533.6563 Q1449.0625,2534.7188 1449.0625,2536.8125 Q1449.0625,2538.9063 1449.75,2539.9844 Q1450.4375,2541.0469 1451.7813,2541.0469 Q1452.4063,2541.0469 1453,2540.7813 Q1453.5938,2540.5 1454.2188,2539.9219 L1454.2188,2542.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="1471.75" y="2541.1543">ConnStatic::DistDestVertex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1393" x2="1687" y1="2553" y2="2553"/><ellipse cx="1403" cy="2564" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1412" y="2567.2104">dist : BGFLOAT</text><ellipse cx="1403" cy="2576.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1412" y="2580.0151">destVertex : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1393" x2="1687" y1="2586.6094" y2="2586.6094"/><ellipse cx="1403" cy="2597.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1412" y="2600.8198">operator&lt;(DistDestVertex other) : bool {query}</text><!--MD5=[0b11278c58281ab7c80e79be642856f2]
class EdgeIndexMap--><rect fill="#FEFECE" filter="url(#f1961s1atp25iz)" height="188.8516" id="EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3143" y="1977.5"/><ellipse cx="3237.25" cy="1993.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3240.2188,1999.1406 Q3239.6406,1999.4375 3239,1999.5781 Q3238.3594,1999.7344 3237.6563,1999.7344 Q3235.1563,1999.7344 3233.8281,1998.0938 Q3232.5156,1996.4375 3232.5156,1993.3125 Q3232.5156,1990.1875 3233.8281,1988.5313 Q3235.1563,1986.875 3237.6563,1986.875 Q3238.3594,1986.875 3239,1987.0313 Q3239.6563,1987.1875 3240.2188,1987.4844 L3240.2188,1990.2031 Q3239.5938,1989.625 3239,1989.3594 Q3238.4063,1989.0781 3237.7813,1989.0781 Q3236.4375,1989.0781 3235.75,1990.1563 Q3235.0625,1991.2188 3235.0625,1993.3125 Q3235.0625,1995.4063 3235.75,1996.4844 Q3236.4375,1997.5469 3237.7813,1997.5469 Q3238.4063,1997.5469 3239,1997.2813 Q3239.5938,1997 3240.2188,1996.4219 L3240.2188,1999.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="3257.75" y="1997.6543">EdgeIndexMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144" x2="3430" y1="2009.5" y2="2009.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3151" y="2017.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3163" y="2023.7104">numOfEdges_ : BGSIZE</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3151" y="2030.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3163" y="2036.5151">numOfVertices_ : BGSIZE</text><ellipse cx="3154" cy="2046.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3163" y="2049.3198">incomingEdgeBegin_ : BGSIZE*</text><ellipse cx="3154" cy="2058.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3163" y="2062.1245">incomingEdgeCount_ : BGSIZE*</text><ellipse cx="3154" cy="2071.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3163" y="2074.9292">incomingEdgeIndexMap_ : BGSIZE*</text><ellipse cx="3154" cy="2084.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3163" y="2087.7339">outgoingEdgeBegin_ : BGSIZE*</text><ellipse cx="3154" cy="2097.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3163" y="2100.5386">outgoingEdgeCount_ : BGSIZE*</text><ellipse cx="3154" cy="2110.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3163" y="2113.3433">outgoingEdgeIndexMap_ : BGSIZE*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144" x2="3430" y1="2119.9375" y2="2119.9375"/><ellipse cx="3154" cy="2130.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3163" y="2134.1479">EdgeIndexMap()</text><ellipse cx="3154" cy="2143.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="3163" y="2146.9526">EdgeIndexMap(int vertexCount, int edgeCount)</text><ellipse cx="3154" cy="2156.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3163" y="2159.7573">~EdgeIndexMap()</text><!--MD5=[36cebae4583ca589f8881f15eca879f1]
reverse link AllEdges to AllNeuroEdges--><path d="M875,2385.16 C875,2415.38 875,2444.12 875,2469.34 " fill="none" id="AllEdges&lt;-AllNeuroEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,2385.11,875,2365.11,882,2385.11,868,2385.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d895029eba7154c6905399e7eb5aaaea]
reverse link AllEdgesDeviceProperties to AllSpikingSynapsesDeviceProperties--><path d="M4349.14,1628.18 C4330.48,1661.63 4305.6,1695.9 4274,1719 C4182.45,1785.93 4114.73,1708.38 4026,1779 C3952.61,1837.42 3913.09,1942.34 3894.32,2009.23 " fill="none" id="AllEdgesDeviceProperties&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4343.06,1624.7,4358.6,1610.29,4355.44,1631.24,4343.06,1624.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b299d6e53b6ac4d2a1701b68b9dc7554]
reverse link AllIFNeurons to AllIZHNeurons--><path d="M5562.14,3475.3 C5535,3525.55 5507.28,3576.87 5480.61,3626.25 " fill="none" id="AllIFNeurons&lt;-AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5556.05,3471.85,5571.71,3457.58,5568.36,3478.5,5556.05,3471.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d41fa10eee7108bf615579dc16f66c4]
reverse link AllIFNeurons to AllLIFNeurons--><path d="M5951.53,3475.49 C6033.02,3626.7 6119.73,3787.62 6167.35,3875.99 " fill="none" id="AllIFNeurons&lt;-AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5945.2,3478.5,5941.88,3457.58,5957.53,3471.86,5945.2,3478.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17cadfdde82fbd78aaa7ab65342c0454]
reverse link AllIFNeuronsDeviceProperties to AllIZHNeuronsDeviceProperties--><path d="M3591,2710.89 C3591,2821.89 3591,2969.06 3591,3050.9 " fill="none" id="AllIFNeuronsDeviceProperties&lt;-AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3584,2710.61,3591,2690.61,3598,2710.61,3584,2710.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d383143b8365dcb1c00482aec0d8f87]
reverse link AllNeuroEdges to AllSpikingSynapses--><path d="M875,2679.11 C875,2704.66 875,2733.06 875,2762.76 " fill="none" id="AllNeuroEdges&lt;-AllSpikingSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="868,2678.81,875,2658.81,882,2678.81,868,2678.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5445f169f2d896f0fc54fbb0dd17c8d5]
reverse link AllSTDPSynapses to AllDynamicSTDPSynapses--><path d="M1320,4386.53 C1320,4399.84 1320,4412.95 1320,4425.8 " fill="none" id="AllSTDPSynapses&lt;-AllDynamicSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1313,4386.22,1320,4366.22,1327,4386.22,1313,4386.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[539a086fdc8dbc8028ce1b9c0d3cb21a]
reverse link AllSTDPSynapsesDeviceProperties to AllDynamicSTDPSynapsesDeviceProperties--><path d="M4139,2704.15 C4139,2815.85 4139,2967.34 4139,3050.86 " fill="none" id="AllSTDPSynapsesDeviceProperties&lt;-AllDynamicSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4132,2704.14,4139,2684.14,4146,2704.14,4132,2704.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8724fdcf162cd93143062af7a28861a5]
reverse link AllSpikingNeurons to AllIFNeurons--><path d="M5543.12,2720.86 C5551.66,2736.5 5560.54,2752.77 5569.63,2769.4 " fill="none" id="AllSpikingNeurons&lt;-AllIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5536.89,2724.07,5533.45,2703.16,5549.18,2717.36,5536.89,2724.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcb689111a9832bf7543527f372e607]
reverse link AllSpikingNeuronsDeviceProperties to AllIFNeuronsDeviceProperties--><path d="M3591,2141.99 C3591,2218.46 3591,2343.39 3591,2437.34 " fill="none" id="AllSpikingNeuronsDeviceProperties&lt;-AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3584,2141.77,3591,2121.77,3598,2141.77,3584,2141.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f221506eaa2e129ebcab2e085332c1be]
reverse link AllSpikingSynapses to AllDSSynapses--><path d="M677.9,3481.9 C633.94,3563.85 588.63,3648.31 548.97,3722.24 " fill="none" id="AllSpikingSynapses&lt;-AllDSSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="671.79,3478.49,687.41,3464.18,684.12,3485.11,671.79,3478.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[587b9d07fbc4fdda6579551662042140]
reverse link AllSpikingSynapses to AllSTDPSynapses--><path d="M1072.28,3482.23 C1079.66,3496 1087.09,3509.84 1094.52,3523.69 " fill="none" id="AllSpikingSynapses&lt;-AllSTDPSynapses" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1065.88,3485.11,1062.59,3464.18,1078.21,3478.49,1065.88,3485.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23aac5e482fb680cc0cec1f0f0dd59a6]
reverse link AllSpikingSynapsesDeviceProperties to AllDSSynapsesDeviceProperties--><path d="M3877.83,2154.68 C3875.24,2252.31 3870.97,2413.49 3868.64,2501.3 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllDSSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3870.84,2154.37,3878.37,2134.56,3884.83,2154.74,3870.84,2154.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9a3e383543838c874b32001a8709207]
reverse link AllSpikingSynapsesDeviceProperties to AllSTDPSynapsesDeviceProperties--><path d="M3918.55,2153.05 C3947.33,2212.07 3988.07,2294.08 4026,2365 C4039.77,2390.74 4054.98,2418.08 4069.66,2443.97 " fill="none" id="AllSpikingSynapsesDeviceProperties&lt;-AllSTDPSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3912.1,2155.79,3909.65,2134.74,3924.69,2149.67,3912.1,2155.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f591e114573ccd2409f159b73ea72911]
reverse link AllVertices to AllSpikingNeurons--><path d="M5458,2231.45 C5458,2293.72 5458,2364.55 5458,2424.72 " fill="none" id="AllVertices&lt;-AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5451,2231.12,5458,2211.12,5465,2231.12,5451,2231.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fcd28df228b50666b72099cd983e7d22]
reverse link AllVerticesDeviceProperties to AllSpikingNeuronsDeviceProperties--><path d="M3920.36,1570.77 C3899.59,1613.06 3865.19,1674.75 3823,1719 C3790.08,1753.52 3765.33,1743.03 3734,1779 C3669.77,1852.75 3626.98,1960.41 3606.03,2022.31 " fill="none" id="AllVerticesDeviceProperties&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3914.12,1567.59,3929.05,1552.56,3926.75,1573.63,3914.12,1567.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[10477add2578806cc5f98b33b8db5e65]
reverse link Connections to ConnGrowth--><path d="M2198.9,1665.66 C2242.63,1733.55 2295.43,1815.52 2342.07,1887.93 " fill="none" id="Connections&lt;-ConnGrowth" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2192.93,1669.33,2187.99,1648.72,2204.7,1661.75,2192.93,1669.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[513ec0388948448dab3ce17eb36460f7]
reverse link Connections to ConnStatic--><path d="M1927.81,1661.5 C1883.16,1698.29 1836.28,1738.97 1795,1779 C1752.12,1820.58 1708.32,1868.43 1669.4,1913.2 " fill="none" id="Connections&lt;-ConnStatic" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1923.59,1655.91,1943.5,1648.65,1932.46,1666.74,1923.59,1655.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[19d836ace92e712b0d8c405f49d503c3]
reverse link Hdf5Recorder to Hdf5GrowthRecorder--><path d="M4770,2282.95 C4770,2338.01 4770,2395.49 4770,2443.94 " fill="none" id="Hdf5Recorder&lt;-Hdf5GrowthRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4763,2282.8,4770,2262.8,4777,2282.8,4763,2282.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd8f9de4d0029903f75705d233ca28a]
reverse link IFunctionNode to GenericFunctionNode--><path d="M6857.64,1177.05 C6781.76,1255.98 6645.36,1397.87 6573.77,1472.34 " fill="none" id="IFunctionNode&lt;-GenericFunctionNode" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6852.62,1172.17,6871.53,1162.6,6862.71,1181.87,6852.62,1172.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[845bd816721334aa86e34ab601eef40f]
reverse link Recorder to Hdf5Recorder--><path d="M4762.19,1643.24 C4763.47,1712.98 4765.1,1802.37 4766.54,1881.39 " fill="none" id="Recorder&lt;-Hdf5Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4755.19,1643.32,4761.83,1623.19,4769.19,1643.06,4755.19,1643.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c205a24cdc96e40cc67ede097f563f5]
reverse link Recorder to XmlRecorder--><path d="M4650.92,1638.12 C4610.04,1681.84 4563.47,1732.34 4522,1779 C4467.99,1839.78 4409.01,1909.1 4362.12,1964.94 " fill="none" id="Recorder&lt;-XmlRecorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4646.05,1633.08,4664.84,1623.27,4656.27,1642.65,4646.05,1633.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7269b632a17f4028eba21f1bd63939ed]
reverse link Layout to DynamicLayout--><path d="M6208.05,1717.52 C6208.7,1718.02 6209.35,1718.51 6210,1719 C6251.7,1750.43 6272.62,1743.6 6311,1779 C6375.63,1838.62 6432.06,1921.54 6469.6,1983.79 " fill="none" id="Layout&lt;-DynamicLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6203.63,1722.95,6192.14,1705.15,6212.22,1711.9,6203.63,1722.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[891067ebdc7a855417ab5d2553f427ef]
reverse link Layout to FixedLayout--><path d="M6042.64,1739.22 C6059.79,1830.46 6078.62,1930.66 6091.06,1996.81 " fill="none" id="Layout&lt;-FixedLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6035.71,1740.24,6038.89,1719.29,6049.47,1737.66,6035.71,1740.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2a96d1a257e41c08a9c3a3f8aadcb29]
reverse link Model to CPUModel--><path d="M4168,1285.22 C4168,1343.92 4168,1406.83 4168,1452.89 " fill="none" id="Model&lt;-CPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4161,1285.09,4168,1265.09,4175,1285.09,4161,1285.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8342ff62b1882cdc2aad46dd54e535e9]
reverse link Model to GPUModel--><path d="M3982.49,1205.8 C3890.72,1248 3776.56,1300.49 3667.88,1350.46 " fill="none" id="Model&lt;-GPUModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3979.74,1199.36,4000.84,1197.36,3985.59,1212.08,3979.74,1199.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7b242bc45f077880469141c87516fa7]
reverse link AllSpikingNeurons to EventBuffer--><path d="M5339.97,2714.13 C5328.96,2730.27 5318.42,2746.74 5309,2763 C5263.72,2841.12 5224.02,2935.51 5196.85,3006.5 " fill="none" id="AllSpikingNeurons&lt;-EventBuffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5347.66,2703.02,5340.9573,2705.6796,5340.8343,2712.8896,5347.537,2710.2301,5347.66,2703.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25007e0d6d2bc2691ed586569b6b25e2]
reverse link Connections to AllEdges--><path d="M1601.95,1652.56 C1494.82,1687.64 1384.2,1729.8 1285,1779 C1279.23,1781.86 1273.44,1784.8 1267.66,1787.82 " fill="none" id="Connections&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1614.32,1648.54,1607.3763,1646.5944,1602.9097,1652.2556,1609.8534,1654.2012,1614.32,1648.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[82859cdc4fc284e53b85be6b34e88627]
reverse link Connections to EdgeIndexMap--><path d="M2516.5,1652.17 C2600.22,1676.23 2688.08,1699.81 2771,1719 C2926.47,1754.99 2994.76,1686.79 3125,1779 C3192.19,1826.57 3234.68,1911.21 3259.21,1977.16 " fill="none" id="Connections&lt;-EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2503.91,1648.54,2508.5612,1654.0506,2515.4368,1651.8767,2510.7856,1646.3661,2503.91,1648.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbf6625826c2ccd9ab80e1a9e4bec40a]
reverse link ConnectionsFactory to Connections--><path d="M2107,1208.11 C2107,1262.99 2107,1334.59 2107,1395.45 " fill="none" id="ConnectionsFactory&lt;-Connections" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2107,1194.89,2103,1200.89,2107,1206.89,2111,1200.89,2107,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[324f5d3a776c0915160172bb3bb1f68c]
reverse link EdgesFactory to AllEdges--><path d="M875,1610.28 C875,1656.92 875,1717.33 875,1778.96 " fill="none" id="EdgesFactory&lt;-AllEdges" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="875,1597.19,871,1603.19,875,1609.19,879,1603.19,875,1597.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2b5495829f9173c044fb8801621d6187]
reverse link GPUModel to AllSpikingNeuronsDeviceProperties--><path d="M3406.7,1705.05 C3420.9,1729.73 3435,1754.87 3448,1779 C3493.38,1863.23 3541.36,1963.93 3568.6,2022.37 " fill="none" id="GPUModel&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3400.18,1693.74,3399.7162,1700.9362,3406.1805,1704.132,3406.6442,1696.9359,3400.18,1693.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f6129bcb9c73284e17b33b28d9016c76]
reverse link GPUModel to AllSpikingSynapsesDeviceProperties--><path d="M3645.12,1701.45 C3676.8,1725.14 3706.77,1751.02 3733,1779 C3795.98,1846.18 3838.18,1945.5 3860.64,2009.23 " fill="none" id="GPUModel&lt;-AllSpikingSynapsesDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3634.32,1693.5,3636.7842,1700.277,3643.9876,1700.6089,3641.5235,1693.8319,3634.32,1693.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aeaf2a6bd64d076c9a29b9ba5666847]
reverse link GPUModel to EdgeIndexMap--><path d="M3293.65,1706.76 C3291.99,1797.62 3290.06,1903.37 3288.71,1977.44 " fill="none" id="GPUModel&lt;-EdgeIndexMap" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3293.88,1693.76,3289.7751,1699.6888,3293.669,1705.7581,3297.7739,1699.8294,3293.88,1693.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[147440af9da7b06bb1c25492ebb2b6fc]
reverse link IFunctionNode to Operations--><path d="M6912,1175.88 C6912,1264.76 6912,1435.56 6912,1497.68 " fill="none" id="IFunctionNode&lt;-Operations" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6912,1162.6,6908,1168.6,6912,1174.6,6916,1168.6,6912,1162.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ced99db6c97f860d3e6f1f558ceb823]
reverse link IFunctionNode to Operations::op--><path d="M6935.4,1174.86 C6951.52,1215.39 6971.51,1272.56 6980,1325 C7019.39,1568.29 6991.4,1861.98 6974.42,1996.79 " fill="none" id="IFunctionNode&lt;-Operations::op" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6930.43,1162.58,6928.9761,1169.643,6934.9366,1173.7016,6936.3905,1166.6386,6930.43,1162.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[efb7ef13657b6fc949565044919673f3]
reverse link Layout to AllVertices--><path d="M5802.49,1723.98 C5733.52,1793.45 5657.85,1869.68 5595.04,1932.95 " fill="none" id="Layout&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5811.74,1714.66,5804.6734,1716.0962,5803.2811,1723.1716,5810.3478,1721.7354,5811.74,1714.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[95ba44a0b3c69ce18700dade6dfd248d]
reverse link LayoutFactory to Layout--><path d="M6002,1208.28 C6002,1242.8 6002,1283.93 6002,1324.83 " fill="none" id="LayoutFactory&lt;-Layout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6002,1194.89,5998,1200.89,6002,1206.89,6006,1200.89,6002,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0e5738770afdb953f3cb9465cb228f84]
reverse link Model to Connections--><path d="M3987.82,1138.61 C3720.29,1167.37 3203.1,1230.1 2771,1325 C2682.07,1344.53 2587.63,1369.66 2498.73,1395.37 " fill="none" id="Model&lt;-Connections" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4000.77,1137.23,3994.3779,1133.8922,3988.8383,1138.5089,3995.2305,1141.8467,4000.77,1137.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d5c05e7addc60f2ebe5e0e75048da45c]
reverse link Model to Recorder--><path d="M4346.54,1221.04 C4400.31,1252.88 4458.86,1289.16 4511,1325 C4553.96,1354.53 4599.22,1389.05 4639.21,1420.82 " fill="none" id="Model&lt;-Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4335.14,1214.31,4338.2785,1220.8023,4345.4785,1220.4023,4342.34,1213.91,4335.14,1214.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a911b337811af7fd7ce810fac5ac8c54]
reverse link Model to Layout--><path d="M4347.25,1206.4 C4403.26,1229.51 4466.1,1251.76 4526,1265 C4779.34,1320.99 5444.72,1246.44 5692,1325 C5732.96,1338.01 5773.88,1357.79 5811.92,1379.86 " fill="none" id="Model&lt;-Layout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4335.03,1201.3,4339.0275,1207.3017,4346.105,1205.9201,4342.1075,1199.9184,4335.03,1201.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da4e37961616ea89232dc94550b7be3e]
reverse link OperationManager to IFunctionNode--><path d="M6912,549.43 C6912,692.32 6912,970.57 6912,1076.33 " fill="none" id="OperationManager&lt;-IFunctionNode" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6912,536.03,6908,542.03,6912,548.03,6916,542.03,6912,536.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[81602e3d9bed7867a676258a1e30c7a1]
reverse link RecorderFactory to Recorder--><path d="M4760,1207.94 C4760,1270.72 4760,1355.46 4760,1420.95 " fill="none" id="RecorderFactory&lt;-Recorder" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4760,1194.89,4756,1200.89,4760,1206.89,4764,1200.89,4760,1194.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[263ae887246c1ce3b32534d14bc96b50]
reverse link Simulator to Model--><path d="M4168,927.41 C4168,943.52 4168,959.1 4168,973.94 " fill="none" id="Simulator&lt;-Model" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4168,914.38,4164,920.38,4168,926.38,4172,920.38,4168,914.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[420839a3a3a413a1278c95e345e5584e]
reverse link VerticesFactory to AllVertices--><path d="M5458,1610.44 C5458,1697.26 5458,1831.69 5458,1932.94 " fill="none" id="VerticesFactory&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5458,1597.19,5454,1603.19,5458,1609.19,5462,1603.19,5458,1597.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1c85b8207771a3600805682c49a79883]
reverse link ConnGrowth to ConnGrowth::GrowthParams--><path d="M2460,2271.42 C2460,2350.84 2460,2437.03 2460,2494.95 " fill="none" id="ConnGrowth&lt;-ConnGrowth::GrowthParams" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2460" cy="2264.15" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2460" x2="2460" y1="2272.15" y2="2256.15"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2452" x2="2468" y1="2264.15" y2="2264.15"/><!--MD5=[7436606c18ecdbda5eaebb84cf9adb19]
reverse link ConnStatic to ConnStatic::DistDestVertex--><path d="M1540,2245.77 C1540,2344.31 1540,2459.98 1540,2520.76 " fill="none" id="ConnStatic&lt;-ConnStatic::DistDestVertex" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1540" cy="2238.74" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1540" x2="1540" y1="2246.74" y2="2230.74"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1532" x2="1548" y1="2238.74" y2="2238.74"/><!--MD5=[5a8d3fbc42f80913afa6dc1778a071da]
reverse link Operations to Operations::op--><path d="M6915.64,1561.4 C6924.21,1651.67 6945.74,1878.59 6956.96,1996.8 " fill="none" id="Operations&lt;-Operations::op" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6914.9621" cy="1554.1636" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6915.7241" x2="6914.2" y1="1562.1272" y2="1546.2"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6906.9984" x2="6922.9257" y1="1554.9257" y2="1553.4016"/><!--MD5=[083ce49c5a023a672eb4b52fed408ed4]
@startuml GraphittiClassDiagram






class AllDSSynapses {
	+AllDSSynapses()
	+AllDSSynapses(const int numVertices, const int maxEdges)
	+~AllDSSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDSSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllDynamicSTDPSynapses {
	+AllDynamicSTDPSynapses()
	+AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllDynamicSTDPSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllEdges {
	+AllEdges()
	+AllEdges(const int numVertices, const int maxEdges)
	+~AllEdges()
	+W_ : BGFLOAT*
	+summationPoint_ : BGFLOAT**
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	#edgeOrdinalToType(const int typeOrdinal) : edgeType
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	+addEdge(BGSIZE& iEdg, edgeType type, const int srcVertex, const int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT) : void
	+{abstract} advanceEdge(const BGSIZE iEdg, AllVertices* vertices) : void
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	+advanceEdges(AllVertices* vertices, EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+{abstract} copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	+createEdgeIndexMap(shared_ptr<EdgeIndexMap> edgeIndexMap) : void
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+eraseEdge(const int neuronIndex, const BGSIZE iEdg) : void
	+load(Archive& archive) : void
	+loadParameters() : void
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+save(Archive& archive) : void {query}
	+{abstract} setAdvanceEdgesDeviceParams() : void
	+{abstract} setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllIFNeurons {
	+AllIFNeurons()
	+~AllIFNeurons()
	-IinjectRange_ : BGFLOAT
	-InoiseRange_ : BGFLOAT
	-VinitRange_ : BGFLOAT
	-VresetRange_ : BGFLOAT
	-VrestingRange_ : BGFLOAT
	-VthreshRange_ : BGFLOAT
	-starterVresetRange_ : BGFLOAT
	-starterVthreshRange_ : BGFLOAT
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
	+toString(const int index) : string {query}
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+loadParameters() : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int i) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int i) : void {query}
}


class AllIZHNeurons {
	+AllIZHNeurons()
	+~AllIZHNeurons()
	+{static} Create() : AllVertices*
	-excAconst_ : BGFLOAT
	-excBconst_ : BGFLOAT
	-excCconst_ : BGFLOAT
	-excDconst_ : BGFLOAT
	-inhAconst_ : BGFLOAT
	-inhBconst_ : BGFLOAT
	-inhCconst_ : BGFLOAT
	-inhDconst_ : BGFLOAT
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
	-{static} DEFAULT_a : static constexpr BGFLOAT
	-{static} DEFAULT_b : static constexpr BGFLOAT
	-{static} DEFAULT_c : static constexpr BGFLOAT
	-{static} DEFAULT_d : static constexpr BGFLOAT
	+toString(const int index) : string {query}
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#fire(const int index) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int index) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int index) : void {query}
}


class AllLIFNeurons {
	+AllLIFNeurons()
	+~AllLIFNeurons()
	+{static} Create() : AllVertices*
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#fire(const int index) : void
	+printParameters() : void {query}
}


class AllNeuroEdges {
	+AllNeuroEdges()
	+~AllNeuroEdges()
	+psr_ : BGFLOAT*
	+edgSign(const edgeType type) : int
	+{static} SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSTDPSynapses {
	+AllSTDPSynapses()
	+AllSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllSTDPSynapses()
	+{static} Create() : AllEdges*
	+Aneg_E_ : BGFLOAT
	+Aneg_I_ : BGFLOAT
	+Apos_E_ : BGFLOAT
	+Apos_I_ : BGFLOAT
	+Wex_E_ : BGFLOAT
	+Wex_I_ : BGFLOAT
	+defaultSTDPgap_ : BGFLOAT
	#synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT
	+tauneg_E_ : BGFLOAT
	+tauneg_I_ : BGFLOAT
	+taupos_E_ : BGFLOAT
	+taupos_I_ : BGFLOAT
	+tauspost_E_ : BGFLOAT
	+tauspost_I_ : BGFLOAT
	+tauspre_E_ : BGFLOAT
	+tauspre_I_ : BGFLOAT
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueuePost(const BGSIZE iEdg) : bool
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	-stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllSpikingNeurons {
	+AllSpikingNeurons()
	+~AllSpikingNeurons()
	#fAllowBackPropagation_ : bool
	+getSpikeHistory(int index, int offIndex) : uint64_t
	+vertexEvents_ : vector<EventBuffer>
	+hasFired_ : vector<bool>
	#{abstract} advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, const EdgeIndexMap* edgeIndexMap) : void
	#clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} clearNeuronSpikeCounts(void* allVerticesDevice) : void
	+clearSpikeCounts() : void
	#copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	#copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	#fire(const int index) : void
	+setAdvanceVerticesDeviceParams(AllEdges& synapses) : void
	+setupVertices() : void
}


class AllSpikingSynapses {
	+AllSpikingSynapses()
	+AllSpikingSynapses(const int numVertices, const int maxEdges)
	+~AllSpikingSynapses()
	+{static} Create() : AllEdges*
	+delay_EE_ : BGFLOAT
	+delay_EI_ : BGFLOAT
	+delay_IE_ : BGFLOAT
	+delay_II_ : BGFLOAT
	+tau_EE_ : BGFLOAT
	+tau_EI_ : BGFLOAT
	+tau_IE_ : BGFLOAT
	+tau_II_ : BGFLOAT
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueue(const BGSIZE iEdg) : bool
	#updateDecay(const BGSIZE iEdg, const BGFLOAT deltaT) : bool
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	#copyDeviceToHost(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT* sumPoint, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+preSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setAdvanceEdgesDeviceParams() : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllVertices {
	+AllVertices()
	+~AllVertices()
	+summationMap_ : BGFLOAT*
	#size_ : int
	#fileLogger_ : log4cplus::Logger
	#vertexLogger_ : log4cplus::Logger
	+{abstract} toString(const int i) : string {query}
	+{abstract} advanceVertices(AllEdges& edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	+{abstract} advanceVertices(AllEdges& edges, const EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+{abstract} copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronHostToDevice(void* allVerticesDevice) : void
	+{abstract} createAllVertices(Layout* layout) : void
	+{abstract} deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+{abstract} setAdvanceVerticesDeviceParams(AllEdges& edges) : void
	+setupVertices() : void
}


class CPUModel {
	+CPUModel()
	+~CPUModel()
	+advance() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+finish() : void
	+updateConnections() : void
}


class ConnGrowth {
	+ConnGrowth()
	+~ConnGrowth()
	+W_ : CompleteMatrix*
	+area_ : CompleteMatrix*
	+delta_ : CompleteMatrix*
	+{static} Create() : Connections*
	+growthParams_ : GrowthParams
	+deltaR_ : VectorMatrix*
	+outgrowth_ : VectorMatrix*
	+radii_ : VectorMatrix*
	+rates_ : VectorMatrix*
	+updateConnections(AllVertices& neurons, Layout* layout) : bool
	+radiiSize_ : int
	+spikeCounts_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+printRadii() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* neurons, AllEdges* synapses) : void
	-updateConns(AllVertices& neurons) : void
	-updateFrontiers(const int numVertices, Layout* layout) : void
	-updateOverlap(BGFLOAT numVertices, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& neurons, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnStatic {
	+ConnStatic()
	+~ConnStatic()
	-excWeight_ : BGFLOAT
	+getConnsRadiusThresh() : BGFLOAT {query}
	-inhWeight_ : BGFLOAT
	-rewiringProbability_ : BGFLOAT
	-threshConnsRadius_ : BGFLOAT
	-WCurrentEpoch_ : BGFLOAT*
	+getWCurrentEpoch() : BGFLOAT* {query}
	+{static} Create() : Connections*
	-connsPerVertex_ : int
	-radiiSize_ : int
	-destVertexIndexCurrentEpoch_ : int*
	+getDestVertexIndexCurrentEpoch() : int* {query}
	+getSourceVertexIndexCurrentEpoch() : int* {query}
	-sourceVertexIndexCurrentEpoch_ : int*
	+load(Archive& archive) : void
	+loadParameters() : void
	+printParameters() : void {query}
	+save(Archive& archive) : void {query}
	+setupConnections(Layout* layout, AllVertices* vertices, AllEdges* edges) : void
}


abstract class Connections {
	+Connections()
	+~Connections()
	+updateConnections(AllVertices& vertices, Layout* layout) : bool
	#edgeLogger_ : log4cplus::Logger
	#fileLogger_ : log4cplus::Logger
	#edges_ : shared_ptr<AllEdges>
	+getEdges() : shared_ptr<AllEdges> {query}
	+getEdgeIndexMap() : shared_ptr<EdgeIndexMap> {query}
	#synapseIndexMap_ : shared_ptr<EdgeIndexMap>
	+createEdgeIndexMap() : void
	+createSynapsesFromWeights(const int numVertices, Layout* layout, AllVertices& vertices, AllEdges& synapses) : void
	+{abstract} loadParameters() : void
	+{abstract} printParameters() : void {query}
	+{abstract} setupConnections(Layout* layout, AllVertices* vertices, AllEdges* synapses) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, AllSpikingNeuronsDeviceProperties* allVerticesDevice, AllSpikingSynapsesDeviceProperties* allEdgesDevice, Layout* layout) : void
	+updateSynapsesWeights(const int numVertices, AllVertices& vertices, AllEdges& synapses, Layout* layout) : void
}


class ConnectionsFactory {
	-ConnectionsFactory()
	+~ConnectionsFactory()
	-invokeCreateFunction(const string& className) : Connections*
	+{static} getInstance() : ConnectionsFactory*
	-createFunctions : ConnectionsFunctionMap
	-connectionsInstance : shared_ptr<Connections>
	+createConnections(const string& className) : shared_ptr<Connections>
	-registerClass(const string& className, CreateFunction function) : void
}


class DynamicLayout {
	+DynamicLayout()
	+~DynamicLayout()
	-fractionEndogenouslyActive_ : BGFLOAT
	-fractionExcitatory_ : BGFLOAT
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


class EdgesFactory {
	-EdgesFactory()
	+~EdgesFactory()
	-invokeCreateFunction(const string& className) : AllEdges*
	+{static} getInstance() : EdgesFactory*
	-createFunctions : EdgesFunctionMap
	+createEdges(const string& className) : shared_ptr<AllEdges>
	-edgesInstance_ : shared_ptr<AllEdges>
	-registerClass(const string& className, CreateFunction function) : void
}


class EventBuffer {
	+EventBuffer(int maxEvents)
	-epochStart_ : int
	+getNumEventsInEpoch() : int {query}
	-numEventsInEpoch_ : int
	-queueEnd_ : int
	-queueFront_ : int
	+getPastEvent(int offset) : uint64_t {query}
	+operator[](int i) : uint64_t {query}
	-eventTimeSteps_ : vector<uint64_t>
	+clear() : void
	+insertEvent(uint64_t timeStep) : void
	+resize(int maxEvents) : void
	+startNewEpoch() : void
}


class FixedLayout {
	+FixedLayout()
	+~FixedLayout()
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


class GPUModel {
	+GPUModel()
	+~GPUModel()
	#allVerticesDevice_ : AllSpikingNeuronsDeviceProperties*
	#allEdgesDevice_ : AllSpikingSynapsesDeviceProperties*
	#synapseIndexMapDevice_ : EdgeIndexMap*
	#randNoise_d : float*
	-addEdge(AllEdges& synapses, edgeType type, const int srcVertex, const int destVertex, Coordinate& source, Coordinate& dest, BGFLOAT* sumPoint, BGFLOAT deltaT) : void
	+advance() : void
	#allocDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-allocSynapseImap(int count) : void
	#calcSummationMap() : void
	+copyCPUtoGPU() : void
	+copyGPUtoCPU() : void
	+copySynapseIndexMapHostToDevice(EdgeIndexMap& synapseIndexMapHost, int numVertices) : void
	-createEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex, Coordinate source, Coordinate dest, BGFLOAT* sp, BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(void** allVerticesDevice, void** allEdgesDevice) : void
	-deleteSynapseImap() : void
	-eraseEdge(AllEdges& synapses, const int neuronIndex, const int synapseIndex) : void
	+finish() : void
	+printGPUSynapsesPropsModel() : void {query}
	+setupSim() : void
	+updateConnections() : void
	-updateHistory() : void
}


class GenericFunctionNode {
	+GenericFunctionNode(const Operations::op& operationType, const std::function<void ( )>& function)
	-function<void()
	+~GenericFunctionNode()
	+invokeFunction(const Operations::op& operation) : bool {query}
}


class Hdf5GrowthRecorder {
	+Hdf5GrowthRecorder()
	+~Hdf5GrowthRecorder()
	#radiiHistory_ : BGFLOAT*
	#ratesHistory_ : BGFLOAT*
	#dataSetRadiiHist_ : DataSet
	#dataSetRatesHist_ : DataSet
	+{static} Create() : Recorder*
	+compileHistories(AllVertices& neurons) : void
	+getValues() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+term() : void
	#writeRadiiRates() : void
}


class Hdf5Recorder {
	+Hdf5Recorder()
	#dataSetNeuronThresh_ : DataSet*
	#dataSetNeuronTypes_ : DataSet*
	#dataSetProbedNeurons_ : DataSet*
	#dataSetSimulationEndTime_ : DataSet*
	#dataSetSpikesHist_ : DataSet*
	#dataSetSpikesProbedNeurons_ : DataSet*
	#dataSetStarterNeurons_ : DataSet*
	#dataSetTsim_ : DataSet*
	#dataSetXloc_ : DataSet*
	#dataSetYloc_ : DataSet*
	#resultOut_ : H5File*
	+{static} Create() : Recorder*
	#offsetSpikesProbedNeurons_ : hsize_t*
	#spikesHistory_ : int*
	#spikesProbedNeurons_ : vector<uint64_t>*
	+compileHistories(AllVertices& neurons) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	#initDataSet() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& neurons) : void
	+term() : void
}


abstract class IFunctionNode {
	+~IFunctionNode()
	#operationType_ : Operations::op
	+{abstract} invokeFunction(const Operations::op& operation) : bool {query}
}


abstract class Recorder {
	+~Recorder()
	#fileLogger_ : log4cplus::Logger
	#resultFileName_ : string
	+{abstract} compileHistories(AllVertices& vertices) : void
	#{abstract} getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+{abstract} getValues() : void
	+{abstract} init() : void
	+{abstract} initDefaultValues() : void
	+{abstract} initValues() : void
	+{abstract} printParameters() : void
	+{abstract} saveSimData(const AllVertices& vertices) : void
	+{abstract} term() : void
}


abstract class Layout {
	+Layout()
	+~Layout()
	+numCallerVertices_ : BGSIZE
	+numEndogenouslyActiveNeurons_ : BGSIZE
	+dist2_ : CompleteMatrix*
	+dist_ : CompleteMatrix*
	+xloc_ : VectorMatrix*
	+yloc_ : VectorMatrix*
	-gridLayout_ : bool
	+starterMap_ : bool*
	+{abstract} edgType(const int srcVertex, const int destVertex) : edgeType
	#fileLogger_ : log4cplus::Logger
	+getVertices() : shared_ptr<AllVertices> {query}
	#vertices_ : shared_ptr<AllVertices>
	#callerVertexList_ : vector<int>
	#endogenouslyActiveNeuronList_ : vector<int>
	#inhibitoryNeuronLayout_ : vector<int>
	+probedNeuronList_ : vector<int>
	#psapVertexList_ : vector<int>
	#responderVertexList_ : vector<int>
	+vertexTypeMap_ : vertexType*
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	-initVerticesLocs() : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+setupLayout() : void
}


class LayoutFactory {
	-LayoutFactory()
	+~LayoutFactory()
	-invokeCreateFunction(const string& className) : Layout*
	+{static} getInstance() : LayoutFactory*
	-createFunctions : LayoutFunctionMap
	+createLayout(const string& className) : shared_ptr<Layout>
	-layoutInstance : shared_ptr<Layout>
	-registerClass(const string& className, CreateFunction function) : void
}


abstract class Model {
	+Model()
	+~Model()
	#fileLogger_ : log4cplus::Logger
	#connections_ : shared_ptr<Connections>
	+getConnections() : shared_ptr<Connections> {query}
	+getRecorder() : shared_ptr<Recorder> {query}
	#recorder_ : shared_ptr<Recorder>
	+getLayout() : shared_ptr<Layout> {query}
	#layout_ : shared_ptr<Layout>
	+{abstract} advance() : void
	#{abstract} copyCPUtoGPU() : void
	#{abstract} copyGPUtoCPU() : void
	#createAllVertices() : void
	+{abstract} finish() : void
	#logSimStep() : void {query}
	+saveResults() : void
	+setupSim() : void
	+{abstract} updateConnections() : void
	+updateHistory() : void
}


class OperationManager {
	-OperationManager()
	+~OperationManager()
	+{static} getInstance() : OperationManager&
	-functionList_ : list<unique_ptr<IFunctionNode>>
	-logger_ : log4cplus::Logger
	+operationToString(const Operations::op& operation) : string {query}
	+executeOperation(const Operations::op& operation) : void {query}
	+registerOperation(const Operations::op& operation, const function<void ( )>& function) : void
}


class Operations {
}


class RecorderFactory {
	-RecorderFactory()
	+~RecorderFactory()
	-invokeCreateFunction(const string& className) : Recorder*
	+{static} getInstance() : RecorderFactory*
	-createFunctions : RecorderFunctionMap
	+createRecorder(const string& className) : shared_ptr<Recorder>
	-recorderInstance : shared_ptr<Recorder>
	-registerClass(const string& className, CreateFunction function) : void
}


class Simulator {
	-Simulator()
	+~Simulator()
	-deltaT_ : BGFLOAT
	-epochDuration_ : BGFLOAT
	+getDeltaT() : BGFLOAT {query}
	+getEpochDuration() : BGFLOAT {query}
	+getMaxRate() : BGFLOAT {query}
	-maxRate_ : BGFLOAT
	+getPSummationMap() : BGFLOAT* {query}
	-pSummationMap_ : BGFLOAT*
	+{static} getInstance() : Simulator&
	+getShort_timer() : Timer
	+getTimer() : Timer
	-short_timer : Timer
	-timer : Timer
	+instantiateSimulatorObjects() : bool
	+getRgEndogenouslyActiveNeuronMap() : bool* {query}
	-rgEndogenouslyActiveNeuronMap_ : bool*
	-currentEpoch_ : int
	+getCurrentStep() : int {query}
	+getHeight() : int {query}
	+getMaxEdgesPerVertex() : int {query}
	+getMaxFiringRate() : int {query}
	+getNumEpochs() : int {query}
	+getTotalVertices() : int {query}
	+getWidth() : int {query}
	-height_ : int
	-maxEdgesPerVertex_ : int
	-maxFiringRate_ : int
	-numEpochs_ : int
	-totalNeurons_ : int
	-width_ : int
	-consoleLogger_ : log4cplus::Logger
	-edgeLogger_ : log4cplus::Logger
	-fileLogger_ : log4cplus::Logger
	+getInitRngSeed() : long {query}
	+getNoiseRngSeed() : long {query}
	-initRngSeed_ : long
	-noiseRngSeed_ : long
	+getModel() : shared_ptr<Model> {query}
	-model_ : shared_ptr<Model>
	-configFileName_ : string
	-deserializationFileName_ : string
	+getConfigFileName() : string {query}
	+getDeserializationFileName() : string {query}
	+getSerializationFileName() : string {query}
	+getStimulusFileName() : string {query}
	-serializationFileName_ : string
	-stimulusFileName_ : string
	+getRgNeuronTypeMap() : vertexType* {query}
	-rgNeuronTypeMap_ : vertexType*
	+advanceEpoch(const int& currentEpoch) : void {query}
	+copyCPUSynapseToGPU() : void
	+copyGPUSynapseToCPU() : void
	+finish() : void
	-freeResources() : void
	+loadParameters() : void
	+printParameters() : void {query}
	+reset() : void
	+saveResults() : void {query}
	+setConfigFileName(const string& fileName) : void
	+setDeserializationFileName(const string& fileName) : void
	+setPSummationMap(BGFLOAT* summationMap) : void
	+setSerializationFileName(const string& fileName) : void
	+setStimulusFileName(const string& fileName) : void
	+setup() : void
	+simulate() : void
}


class VerticesFactory {
	-VerticesFactory()
	+~VerticesFactory()
	-invokeCreateFunction(const string& className) : AllVertices*
	+{static} getInstance() : VerticesFactory*
	-createFunctions : VerticesFunctionMap
	+createVertices(const string& className) : shared_ptr<AllVertices>
	-verticesInstance : shared_ptr<AllVertices>
	-registerClass(const string& className, CreateFunction function) : void
}


class XmlRecorder {
	+XmlRecorder()
	+{static} Create() : Recorder*
	#spikesHistory_ : VectorMatrix
	#resultOut_ : ofstream
	+compileHistories(AllVertices& vertices) : void
	#getStarterNeuronMatrix(VectorMatrix& matrix, const bool* starterMap) : void
	+getValues() : void
	+init() : void
	+initDefaultValues() : void
	+initValues() : void
	+printParameters() : void
	+saveSimData(const AllVertices& vertices) : void
	+term() : void
}


enum Operations::op {
	copyFromGPU
	copyToGPU
	deallocateGPUMemory
	deserialize
	loadParameters
	printParameters
	restoreToDefault
	serialize
}


enum enumClassSynapses {
	classAllDSSynapses
	classAllDynamicSTDPSynapses
	classAllSTDPSynapses
	classAllSpikingSynapses
	undefClassSynapses
}


class AllDSSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllDynamicSTDPSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllEdgesDeviceProperties {
	+W_ : BGFLOAT*
	+psr_ : BGFLOAT*
	+maxEdgesPerVertex_ : BGSIZE
	+totalEdgeCount_ : BGSIZE
	+edgeCounts_ : BGSIZE*
	+inUse_ : bool*
	+type_ : edgeType*
	+countVertices_ : int
	+destVertexIndex_ : int*
	+sourceVertexIndex_ : int*
}


class AllIFNeuronsDeviceProperties {
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
}


class AllIZHNeuronsDeviceProperties {
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
}


class AllSTDPSynapsesDeviceProperties {
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+useFroemkeDanSTDP_ : bool*
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
}


class AllSpikingNeuronsDeviceProperties {
	+hasFired_ : bool*
	+spikeCountOffset_ : int*
	+spikeCount_ : int*
	+spikeHistory_ : uint64_t**
}


class AllSpikingSynapsesDeviceProperties {
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
}


class AllVerticesDeviceProperties {
	+summationMap_ : BGFLOAT*
}


class ConnGrowth::GrowthParams {
	+beta : BGFLOAT
	+epsilon : BGFLOAT
	+maxRate : BGFLOAT
	+minRadius : BGFLOAT
	+rho : BGFLOAT
	+startRadius : BGFLOAT
	+targetRate : BGFLOAT
}


class ConnStatic::DistDestVertex {
	+dist : BGFLOAT
	+operator<(DistDestVertex other) : bool {query}
	+destVertex : int
}


class EdgeIndexMap {
	+EdgeIndexMap()
	+EdgeIndexMap(int vertexCount, int edgeCount)
	+~EdgeIndexMap()
	-numOfEdges_ : BGSIZE
	-numOfVertices_ : BGSIZE
	+incomingEdgeBegin_ : BGSIZE*
	+incomingEdgeCount_ : BGSIZE*
	+incomingEdgeIndexMap_ : BGSIZE*
	+outgoingEdgeBegin_ : BGSIZE*
	+outgoingEdgeCount_ : BGSIZE*
	+outgoingEdgeIndexMap_ : BGSIZE*
}






.AllEdges <|- - .AllNeuroEdges


.AllEdgesDeviceProperties <|- - .AllSpikingSynapsesDeviceProperties


.AllIFNeurons <|- - .AllIZHNeurons


.AllIFNeurons <|- - .AllLIFNeurons


.AllIFNeuronsDeviceProperties <|- - .AllIZHNeuronsDeviceProperties


.AllNeuroEdges <|- - .AllSpikingSynapses


.AllSTDPSynapses <|- - .AllDynamicSTDPSynapses


.AllSTDPSynapsesDeviceProperties <|- - .AllDynamicSTDPSynapsesDeviceProperties


.AllSpikingNeurons <|- - .AllIFNeurons


.AllSpikingNeuronsDeviceProperties <|- - .AllIFNeuronsDeviceProperties


.AllSpikingSynapses <|- - .AllDSSynapses


.AllSpikingSynapses <|- - .AllSTDPSynapses


.AllSpikingSynapsesDeviceProperties <|- - .AllDSSynapsesDeviceProperties


.AllSpikingSynapsesDeviceProperties <|- - .AllSTDPSynapsesDeviceProperties


.AllVertices <|- - .AllSpikingNeurons


.AllVerticesDeviceProperties <|- - .AllSpikingNeuronsDeviceProperties


.Connections <|- - .ConnGrowth


.Connections <|- - .ConnStatic


.Hdf5Recorder <|- - .Hdf5GrowthRecorder


.IFunctionNode <|- - .GenericFunctionNode


.Recorder <|- - .Hdf5Recorder


.Recorder <|- - .XmlRecorder


.Layout <|- - .DynamicLayout


.Layout <|- - .FixedLayout


.Model <|- - .CPUModel


.Model <|- - .GPUModel






.AllSpikingNeurons *- - .EventBuffer


.Connections *- - .AllEdges


.Connections *- - .EdgeIndexMap


.ConnectionsFactory *- - .Connections


.EdgesFactory *- - .AllEdges


.GPUModel o- - .AllSpikingNeuronsDeviceProperties


.GPUModel o- - .AllSpikingSynapsesDeviceProperties


.GPUModel o- - .EdgeIndexMap


.IFunctionNode *- - .Operations


.IFunctionNode *- - .Operations::op


.Layout *- - .AllVertices


.LayoutFactory *- - .Layout


.Model *- - .Connections


.Model *- - .Recorder


.Model *- - .Layout


.OperationManager *- - .IFunctionNode


.RecorderFactory *- - .Recorder


.Simulator *- - .Model


.VerticesFactory *- - .AllVertices







.ConnGrowth +- - .ConnGrowth::GrowthParams


.ConnStatic +- - .ConnStatic::DistDestVertex


.Operations +- - .Operations::op




@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>