<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2744px" preserveAspectRatio="none" style="width:2715px;height:2744px;" version="1.1" viewBox="0 0 2715 2744" width="2715px" zoomAndPan="magnify"><defs><filter height="300%" id="f14wq1ofn7w26o" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cf80cca85261d84eda43dbc026d5d8d1]
class AllIFNeurons--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="688.2344" id="AllIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="453" y="1348"/><ellipse cx="840.25" cy="1364" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M843.2188,1369.6406 Q842.6406,1369.9375 842,1370.0781 Q841.3594,1370.2344 840.6563,1370.2344 Q838.1563,1370.2344 836.8281,1368.5938 Q835.5156,1366.9375 835.5156,1363.8125 Q835.5156,1360.6875 836.8281,1359.0313 Q838.1563,1357.375 840.6563,1357.375 Q841.3594,1357.375 842,1357.5313 Q842.6563,1357.6875 843.2188,1357.9844 L843.2188,1360.7031 Q842.5938,1360.125 842,1359.8594 Q841.4063,1359.5781 840.7813,1359.5781 Q839.4375,1359.5781 838.75,1360.6563 Q838.0625,1361.7188 838.0625,1363.8125 Q838.0625,1365.9063 838.75,1366.9844 Q839.4375,1368.0469 840.7813,1368.0469 Q841.4063,1368.0469 842,1367.7813 Q842.5938,1367.5 843.2188,1366.9219 L843.2188,1369.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="860.75" y="1368.1543">AllIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="454" x2="1312" y1="1380" y2="1380"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="473" y="1394.2104">IinjectRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1400.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="473" y="1407.0151">InoiseRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1413.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="473" y="1419.8198">VinitRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1426.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="473" y="1432.6245">VresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1439.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="473" y="1445.4292">VrestingRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1452.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="473" y="1458.2339">VthreshRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1464.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="473" y="1471.0386">starterVresetRange_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="461" y="1477.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="473" y="1483.8433">starterVthreshRange_ : BGFLOAT</text><ellipse cx="464" cy="1493.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="473" y="1496.6479">C1_ : BGFLOAT*</text><ellipse cx="464" cy="1506.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="473" y="1509.4526">C2_ : BGFLOAT*</text><ellipse cx="464" cy="1519.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="473" y="1522.2573">Cm_ : BGFLOAT*</text><ellipse cx="464" cy="1531.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="473" y="1535.062">I0_ : BGFLOAT*</text><ellipse cx="464" cy="1544.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="473" y="1547.8667">Iinject_ : BGFLOAT*</text><ellipse cx="464" cy="1557.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="473" y="1560.6714">Inoise_ : BGFLOAT*</text><ellipse cx="464" cy="1570.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="473" y="1573.4761">Isyn_ : BGFLOAT*</text><ellipse cx="464" cy="1583.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="473" y="1586.2808">Rm_ : BGFLOAT*</text><ellipse cx="464" cy="1595.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="473" y="1599.0854">Tau_ : BGFLOAT*</text><ellipse cx="464" cy="1608.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="473" y="1611.8901">Trefract_ : BGFLOAT*</text><ellipse cx="464" cy="1621.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="473" y="1624.6948">Vinit_ : BGFLOAT*</text><ellipse cx="464" cy="1634.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="473" y="1637.4995">Vm_ : BGFLOAT*</text><ellipse cx="464" cy="1647.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="473" y="1650.3042">Vreset_ : BGFLOAT*</text><ellipse cx="464" cy="1659.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="473" y="1663.1089">Vrest_ : BGFLOAT*</text><ellipse cx="464" cy="1672.7031" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="473" y="1675.9136">Vthresh_ : BGFLOAT*</text><ellipse cx="464" cy="1685.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="473" y="1688.7183">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="454" x2="1312" y1="1695.3125" y2="1695.3125"/><ellipse cx="464" cy="1706.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="473" y="1709.5229">AllIFNeurons()</text><ellipse cx="464" cy="1719.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="473" y="1722.3276">~AllIFNeurons()</text><ellipse cx="464" cy="1731.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="473" y="1735.1323">toString(const int index) : string {query}</text><ellipse cx="464" cy="1744.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="473" y="1747.937">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="464,1752.5313,468,1756.5313,464,1760.5313,460,1756.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="473" y="1760.7417">allocDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1770.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1773.5464">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="464" cy="1783.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="473" y="1786.3511">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="464,1790.9453,468,1794.9453,464,1798.9453,460,1794.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="473" y="1799.1558">copyDeviceToHost(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="464,1803.75,468,1807.75,464,1811.75,460,1807.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422" x="473" y="1811.9604">copyHostToDevice(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1821.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="473" y="1824.7651">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1834.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="473" y="1837.5698">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1847.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1850.3745">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1859.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="473" y="1863.1792">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1872.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="473" y="1875.9839">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="464,1880.5781,468,1884.5781,464,1888.5781,460,1884.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="473" y="1888.7886">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="464,1893.3828,468,1897.3828,464,1901.3828,460,1897.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="473" y="1901.5933">deleteDeviceStruct(AllIFNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="464" cy="1911.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="473" y="1914.3979">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="464" cy="1923.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="473" y="1927.2026">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="464,1931.7969,468,1935.7969,464,1939.7969,460,1935.7969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="473" y="1940.0073">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="464" cy="1949.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="473" y="1952.812">loadParameters() : void</text><ellipse cx="464" cy="1962.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="473" y="1965.6167">printParameters() : void {query}</text><polygon fill="#FFFF44" points="464,1970.2109,468,1974.2109,464,1978.2109,460,1974.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="473" y="1978.4214">readNeuron(istream&amp; input, int i) : void</text><ellipse cx="464" cy="1988.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="473" y="1991.2261">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="464,1995.8203,468,1999.8203,464,2003.8203,460,1999.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="473" y="2004.0308">setNeuronDefaults(const int index) : void</text><ellipse cx="464" cy="2013.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="473" y="2016.8354">setupVertices() : void</text><polygon fill="#FFFF44" points="464,2021.4297,468,2025.4297,464,2029.4297,460,2025.4297" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="473" y="2029.6401">writeNeuron(ostream&amp; output, int i) : void {query}</text><!--MD5=[a4e35ff6c4fc9c7a26a0ff69acb0e23b]
class AllIZHNeurons--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="637.0156" id="AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="6" y="2096"/><ellipse cx="387.75" cy="2112" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M390.7188,2117.6406 Q390.1406,2117.9375 389.5,2118.0781 Q388.8594,2118.2344 388.1563,2118.2344 Q385.6563,2118.2344 384.3281,2116.5938 Q383.0156,2114.9375 383.0156,2111.8125 Q383.0156,2108.6875 384.3281,2107.0313 Q385.6563,2105.375 388.1563,2105.375 Q388.8594,2105.375 389.5,2105.5313 Q390.1563,2105.6875 390.7188,2105.9844 L390.7188,2108.7031 Q390.0938,2108.125 389.5,2107.8594 Q388.9063,2107.5781 388.2813,2107.5781 Q386.9375,2107.5781 386.25,2108.6563 Q385.5625,2109.7188 385.5625,2111.8125 Q385.5625,2113.9063 386.25,2114.9844 Q386.9375,2116.0469 388.2813,2116.0469 Q388.9063,2116.0469 389.5,2115.7813 Q390.0938,2115.5 390.7188,2114.9219 L390.7188,2117.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="408.25" y="2116.1543">AllIZHNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="865" y1="2128" y2="2128"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2136"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="26" y="2142.2104">excAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2148.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="2155.0151">excBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2161.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="2167.8198">excCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2174.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="2180.6245">excDconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2187.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="26" y="2193.4292">inhAconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2200.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="2206.2339">inhBconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2212.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="2219.0386">inhCconst_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2225.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="2231.8433">inhDconst_ : BGFLOAT</text><ellipse cx="17" cy="2241.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="26" y="2244.6479">Aconst_ : BGFLOAT*</text><ellipse cx="17" cy="2254.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="2257.4526">Bconst_ : BGFLOAT*</text><ellipse cx="17" cy="2267.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="2270.2573">C3_ : BGFLOAT*</text><ellipse cx="17" cy="2279.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="2283.062">Cconst_ : BGFLOAT*</text><ellipse cx="17" cy="2292.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="2295.8667">Dconst_ : BGFLOAT*</text><ellipse cx="17" cy="2305.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="26" y="2308.6714">u_ : BGFLOAT*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2315.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="2321.4761">DEFAULT_a : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2328.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="2334.2808">DEFAULT_b : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2340.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="26" y="2347.0854">DEFAULT_c : static constexpr BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2353.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="26" y="2359.8901">DEFAULT_d : static constexpr BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="865" y1="2366.4844" y2="2366.4844"/><ellipse cx="17" cy="2377.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26" y="2380.6948">AllIZHNeurons()</text><ellipse cx="17" cy="2390.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="2393.4995">~AllIZHNeurons()</text><ellipse cx="17" cy="2403.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="26" y="2406.3042">Create() : AllVertices*</text><ellipse cx="17" cy="2415.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="2419.1089">toString(const int index) : string {query}</text><polygon fill="#FFFF44" points="17,2423.7031,21,2427.7031,17,2431.7031,13,2427.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="26" y="2431.9136">advanceNeuron(const int index) : void</text><ellipse cx="17" cy="2441.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="26" y="2444.7183">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="17,2449.3125,21,2453.3125,17,2457.3125,13,2453.3125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="26" y="2457.5229">allocDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2467.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2470.3276">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="17" cy="2479.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="26" y="2483.1323">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="17,2487.7266,21,2491.7266,17,2495.7266,13,2491.7266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="26" y="2495.937">copyDeviceToHost(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="17,2500.5313,21,2504.5313,17,2508.5313,13,2504.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="433" x="26" y="2508.7417">copyHostToDevice(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2518.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="26" y="2521.5464">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2531.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="26" y="2534.3511">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2543.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2547.1558">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2556.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2559.9604">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2569.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="26" y="2572.7651">createAllVertices(Layout* layout) : void</text><polygon fill="#FFFF44" points="17,2577.3594,21,2581.3594,17,2585.3594,13,2581.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="26" y="2585.5698">createNeuron(int neuronIndex, Layout* layout) : void</text><polygon fill="#FFFF44" points="17,2590.1641,21,2594.1641,17,2598.1641,13,2594.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="26" y="2598.3745">deleteDeviceStruct(AllIZHNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="17" cy="2607.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="26" y="2611.1792">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="17" cy="2620.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26" y="2623.9839">deserialize(istream&amp; input) : void</text><polygon fill="#FFFF44" points="17,2628.5781,21,2632.5781,17,2636.5781,13,2632.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="2636.7886">fire(const int index) : void</text><polygon fill="#FFFF44" points="17,2641.3828,21,2645.3828,17,2649.3828,13,2645.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="26" y="2649.5933">initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void</text><ellipse cx="17" cy="2659.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="2662.3979">printParameters() : void {query}</text><polygon fill="#FFFF44" points="17,2666.9922,21,2670.9922,17,2674.9922,13,2670.9922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="2675.2026">readNeuron(istream&amp; input, int index) : void</text><ellipse cx="17" cy="2684.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="2688.0073">serialize(ostream&amp; output) : void {query}</text><polygon fill="#FFFF44" points="17,2692.6016,21,2696.6016,17,2700.6016,13,2696.6016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="2700.812">setNeuronDefaults(const int index) : void</text><ellipse cx="17" cy="2710.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="2713.6167">setupVertices() : void</text><polygon fill="#FFFF44" points="17,2718.2109,21,2722.2109,17,2726.2109,13,2722.2109" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26" y="2726.4214">writeNeuron(ostream&amp; output, int index) : void {query}</text><!--MD5=[17306769ffb707adf94de37859054409]
class AllLIFNeurons--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="137.6328" id="AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="860" x="901" y="2345.5"/><ellipse cx="1285.25" cy="2361.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1288.2188,2367.1406 Q1287.6406,2367.4375 1287,2367.5781 Q1286.3594,2367.7344 1285.6563,2367.7344 Q1283.1563,2367.7344 1281.8281,2366.0938 Q1280.5156,2364.4375 1280.5156,2361.3125 Q1280.5156,2358.1875 1281.8281,2356.5313 Q1283.1563,2354.875 1285.6563,2354.875 Q1286.3594,2354.875 1287,2355.0313 Q1287.6563,2355.1875 1288.2188,2355.4844 L1288.2188,2358.2031 Q1287.5938,2357.625 1287,2357.3594 Q1286.4063,2357.0781 1285.7813,2357.0781 Q1284.4375,2357.0781 1283.75,2358.1563 Q1283.0625,2359.2188 1283.0625,2361.3125 Q1283.0625,2363.4063 1283.75,2364.4844 Q1284.4375,2365.5469 1285.7813,2365.5469 Q1286.4063,2365.5469 1287,2365.2813 Q1287.5938,2365 1288.2188,2364.4219 L1288.2188,2367.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="1305.75" y="2365.6543">AllLIFNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1760" y1="2377.5" y2="2377.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="902" x2="1760" y1="2385.5" y2="2385.5"/><ellipse cx="912" cy="2396.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="921" y="2399.7104">AllLIFNeurons()</text><ellipse cx="912" cy="2409.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="921" y="2412.5151">~AllLIFNeurons()</text><ellipse cx="912" cy="2422.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="921" y="2425.3198">Create() : AllVertices*</text><polygon fill="#FFFF44" points="912,2429.9141,916,2433.9141,912,2437.9141,908,2433.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="921" y="2438.1245">advanceNeuron(const int index) : void</text><ellipse cx="912" cy="2447.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="834" x="921" y="2450.9292">advanceVertices(AllEdges&amp; synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><polygon fill="#FFFF44" points="912,2455.5234,916,2459.5234,912,2463.5234,908,2459.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="921" y="2463.7339">fire(const int index) : void</text><ellipse cx="912" cy="2473.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="921" y="2476.5386">printParameters() : void {query}</text><!--MD5=[00675e18512933602d55f5e0e2b1ab32]
class AllSpikingNeurons--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="278.4844" id="AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.5;" width="551" x="906.5" y="1010"/><ellipse cx="1122.25" cy="1026" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1122.3594,1021.3438 L1121.2031,1026.4219 L1123.5313,1026.4219 L1122.3594,1021.3438 Z M1120.875,1019.1094 L1123.8594,1019.1094 L1127.2188,1031.5 L1124.7656,1031.5 L1124,1028.4375 L1120.7188,1028.4375 L1119.9688,1031.5 L1117.5313,1031.5 L1120.875,1019.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="1142.75" y="1030.1543">AllSpikingNeurons</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1456.5" y1="1042" y2="1042"/><polygon fill="none" points="917.5,1048,921.5,1052,917.5,1056,913.5,1052" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="926.5" y="1056.2104">fAllowBackPropagation_ : bool</text><ellipse cx="917.5" cy="1065.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="926.5" y="1069.0151">vertexEvents_ : vector&lt;EventBuffer&gt;</text><ellipse cx="917.5" cy="1078.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="926.5" y="1081.8198">hasFired_ : vector&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1456.5" y1="1088.4141" y2="1088.4141"/><ellipse cx="917.5" cy="1099.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="926.5" y="1102.6245">AllSpikingNeurons()</text><ellipse cx="917.5" cy="1112.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="926.5" y="1115.4292">~AllSpikingNeurons()</text><ellipse cx="917.5" cy="1125.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="926.5" y="1128.2339">getSpikeHistory(int index, int offIndex) : uint64_t</text><polygon fill="#FFFF44" points="917.5,1132.8281,921.5,1136.8281,917.5,1140.8281,913.5,1136.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="926.5" y="1141.0386">advanceNeuron(const int index) : void</text><ellipse cx="917.5" cy="1150.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="926.5" y="1153.8433">advanceVertices(AllEdges&amp; synapses, const EdgeIndexMap* edgeIndexMap) : void</text><polygon fill="#FFFF44" points="917.5,1158.4375,921.5,1162.4375,917.5,1166.4375,913.5,1162.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="487" x="926.5" y="1166.6479">clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="917.5" cy="1176.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="926.5" y="1179.4526">clearNeuronSpikeCounts(void* allVerticesDevice) : void</text><ellipse cx="917.5" cy="1189.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="926.5" y="1192.2573">clearSpikeCounts() : void</text><polygon fill="#FFFF44" points="917.5,1196.8516,921.5,1200.8516,917.5,1204.8516,913.5,1200.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="926.5" y="1205.062">copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><polygon fill="#FFFF44" points="917.5,1209.6563,921.5,1213.6563,917.5,1217.6563,913.5,1213.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="525" x="926.5" y="1217.8667">copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties&amp; allVerticesDevice) : void</text><ellipse cx="917.5" cy="1227.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="926.5" y="1230.6714">copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void</text><ellipse cx="917.5" cy="1240.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="926.5" y="1243.4761">copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void</text><polygon fill="#FFFF44" points="917.5,1248.0703,921.5,1252.0703,917.5,1256.0703,913.5,1252.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="926.5" y="1256.2808">fire(const int index) : void</text><ellipse cx="917.5" cy="1265.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="926.5" y="1269.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; synapses) : void</text><ellipse cx="917.5" cy="1278.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="926.5" y="1281.8901">setupVertices() : void</text><!--MD5=[34dee175ca2f1207a5c8be9520f72c2f]
class AllVertices--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="278.4844" id="AllVertices" style="stroke: #A80036; stroke-width: 1.5;" width="845" x="759.5" y="672"/><ellipse cx="1145.75" cy="688" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1145.8594,683.3438 L1144.7031,688.4219 L1147.0313,688.4219 L1145.8594,683.3438 Z M1144.375,681.1094 L1147.3594,681.1094 L1150.7188,693.5 L1148.2656,693.5 L1147.5,690.4375 L1144.2188,690.4375 L1143.4688,693.5 L1141.0313,693.5 L1144.375,681.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="1166.25" y="692.1543">AllVertices</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="760.5" x2="1603.5" y1="704" y2="704"/><ellipse cx="770.5" cy="715" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="779.5" y="718.2104">summationMap_ : BGFLOAT*</text><polygon fill="none" points="770.5,722.8047,774.5,726.8047,770.5,730.8047,766.5,726.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="779.5" y="731.0151">size_ : int</text><polygon fill="none" points="770.5,735.6094,774.5,739.6094,770.5,743.6094,766.5,739.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="779.5" y="743.8198">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="770.5,748.4141,774.5,752.4141,770.5,756.4141,766.5,752.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="779.5" y="756.6245">vertexLogger_ : log4cplus::Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="760.5" x2="1603.5" y1="763.2188" y2="763.2188"/><ellipse cx="770.5" cy="774.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="779.5" y="777.4292">AllVertices()</text><ellipse cx="770.5" cy="787.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="779.5" y="790.2339">~AllVertices()</text><ellipse cx="770.5" cy="799.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="779.5" y="803.0386">toString(const int i) : string {query}</text><ellipse cx="770.5" cy="812.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="819" x="779.5" y="815.8433">advanceVertices(AllEdges&amp; edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void</text><ellipse cx="770.5" cy="825.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="779.5" y="828.6479">advanceVertices(AllEdges&amp; edges, const EdgeIndexMap* edgeIndexMap) : void</text><ellipse cx="770.5" cy="838.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="779.5" y="841.4526">allocNeuronDeviceStruct(void** allVerticesDevice) : void</text><ellipse cx="770.5" cy="851.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="779.5" y="854.2573">copyNeuronDeviceToHost(void* allVerticesDevice) : void</text><ellipse cx="770.5" cy="863.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="779.5" y="867.062">copyNeuronHostToDevice(void* allVerticesDevice) : void</text><ellipse cx="770.5" cy="876.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="779.5" y="879.8667">createAllVertices(Layout* layout) : void</text><ellipse cx="770.5" cy="889.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="779.5" y="892.6714">deleteNeuronDeviceStruct(void* allVerticesDevice) : void</text><ellipse cx="770.5" cy="902.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="779.5" y="905.4761">loadParameters() : void</text><ellipse cx="770.5" cy="915.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="779.5" y="918.2808">printParameters() : void {query}</text><ellipse cx="770.5" cy="927.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="779.5" y="931.0854">setAdvanceVerticesDeviceParams(AllEdges&amp; edges) : void</text><ellipse cx="770.5" cy="940.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="779.5" y="943.8901">setupVertices() : void</text><!--MD5=[12f7f85e6a82a668bac37f73aa8a25f9]
class DynamicLayout--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="176.0469" id="DynamicLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="1640" y="723"/><ellipse cx="1778.25" cy="739" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1781.2188,744.6406 Q1780.6406,744.9375 1780,745.0781 Q1779.3594,745.2344 1778.6563,745.2344 Q1776.1563,745.2344 1774.8281,743.5938 Q1773.5156,741.9375 1773.5156,738.8125 Q1773.5156,735.6875 1774.8281,734.0313 Q1776.1563,732.375 1778.6563,732.375 Q1779.3594,732.375 1780,732.5313 Q1780.6563,732.6875 1781.2188,732.9844 L1781.2188,735.7031 Q1780.5938,735.125 1780,734.8594 Q1779.4063,734.5781 1778.7813,734.5781 Q1777.4375,734.5781 1776.75,735.6563 Q1776.0625,736.7188 1776.0625,738.8125 Q1776.0625,740.9063 1776.75,741.9844 Q1777.4375,743.0469 1778.7813,743.0469 Q1779.4063,743.0469 1780,742.7813 Q1780.5938,742.5 1781.2188,741.9219 L1781.2188,744.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="1798.75" y="743.1543">DynamicLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1641" x2="2017" y1="755" y2="755"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1648" y="763"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1660" y="769.2104">fractionEndogenouslyActive_ : BGFLOAT</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1648" y="775.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1660" y="782.0151">fractionExcitatory_ : BGFLOAT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1641" x2="2017" y1="788.6094" y2="788.6094"/><ellipse cx="1651" cy="799.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1660" y="802.8198">DynamicLayout()</text><ellipse cx="1651" cy="812.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1660" y="815.6245">~DynamicLayout()</text><ellipse cx="1651" cy="825.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="1660" y="828.4292">Create() : Layout*</text><ellipse cx="1651" cy="838.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1660" y="841.2339">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="1651" cy="850.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="1660" y="854.0386">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="1651" cy="863.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1660" y="866.8433">initStarterMap(const int numVertices) : void</text><ellipse cx="1651" cy="876.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1660" y="879.6479">loadParameters() : void</text><ellipse cx="1651" cy="889.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1660" y="892.4526">printParameters() : void {query}</text><!--MD5=[05f17831147ee39527b2431b4d22ccc3]
class EventBuffer--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="214.4609" id="EventBuffer" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="1348" y="1585"/><ellipse cx="1440.75" cy="1601" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1443.7188,1606.6406 Q1443.1406,1606.9375 1442.5,1607.0781 Q1441.8594,1607.2344 1441.1563,1607.2344 Q1438.6563,1607.2344 1437.3281,1605.5938 Q1436.0156,1603.9375 1436.0156,1600.8125 Q1436.0156,1597.6875 1437.3281,1596.0313 Q1438.6563,1594.375 1441.1563,1594.375 Q1441.8594,1594.375 1442.5,1594.5313 Q1443.1563,1594.6875 1443.7188,1594.9844 L1443.7188,1597.7031 Q1443.0938,1597.125 1442.5,1596.8594 Q1441.9063,1596.5781 1441.2813,1596.5781 Q1439.9375,1596.5781 1439.25,1597.6563 Q1438.5625,1598.7188 1438.5625,1600.8125 Q1438.5625,1602.9063 1439.25,1603.9844 Q1439.9375,1605.0469 1441.2813,1605.0469 Q1441.9063,1605.0469 1442.5,1604.7813 Q1443.0938,1604.5 1443.7188,1603.9219 L1443.7188,1606.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1461.25" y="1605.1543">EventBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1349" x2="1613" y1="1617" y2="1617"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1368" y="1631.2104">epochStart_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1637.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1368" y="1644.0151">numEventsInEpoch_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1650.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1368" y="1656.8198">queueEnd_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1663.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1368" y="1669.6245">queueFront_ : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1356" y="1676.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1368" y="1682.4292">eventTimeSteps_ : vector&lt;uint64_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1349" x2="1613" y1="1689.0234" y2="1689.0234"/><ellipse cx="1359" cy="1700.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1368" y="1703.2339">EventBuffer(int maxEvents)</text><ellipse cx="1359" cy="1712.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1368" y="1716.0386">getNumEventsInEpoch() : int {query}</text><ellipse cx="1359" cy="1725.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="1368" y="1728.8433">getPastEvent(int offset) : uint64_t {query}</text><ellipse cx="1359" cy="1738.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1368" y="1741.6479">operator[](int i) : uint64_t {query}</text><ellipse cx="1359" cy="1751.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1368" y="1754.4526">clear() : void</text><ellipse cx="1359" cy="1764.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1368" y="1767.2573">insertEvent(uint64_t timeStep) : void</text><ellipse cx="1359" cy="1776.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1368" y="1780.062">resize(int maxEvents) : void</text><ellipse cx="1359" cy="1789.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1368" y="1792.8667">startNewEpoch() : void</text><!--MD5=[c01d281453c5d4cdc24a7f27a30cb7c5]
class FixedLayout--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="150.4375" id="FixedLayout" style="stroke: #A80036; stroke-width: 1.5;" width="378" x="2053" y="736"/><ellipse cx="2201.25" cy="752" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2204.2188,757.6406 Q2203.6406,757.9375 2203,758.0781 Q2202.3594,758.2344 2201.6563,758.2344 Q2199.1563,758.2344 2197.8281,756.5938 Q2196.5156,754.9375 2196.5156,751.8125 Q2196.5156,748.6875 2197.8281,747.0313 Q2199.1563,745.375 2201.6563,745.375 Q2202.3594,745.375 2203,745.5313 Q2203.6563,745.6875 2204.2188,745.9844 L2204.2188,748.7031 Q2203.5938,748.125 2203,747.8594 Q2202.4063,747.5781 2201.7813,747.5781 Q2200.4375,747.5781 2199.75,748.6563 Q2199.0625,749.7188 2199.0625,751.8125 Q2199.0625,753.9063 2199.75,754.9844 Q2200.4375,756.0469 2201.7813,756.0469 Q2202.4063,756.0469 2203,755.7813 Q2203.5938,755.5 2204.2188,754.9219 L2204.2188,757.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="2221.75" y="756.1543">FixedLayout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2054" x2="2430" y1="768" y2="768"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2054" x2="2430" y1="776" y2="776"/><ellipse cx="2064" cy="787" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2073" y="790.2104">FixedLayout()</text><ellipse cx="2064" cy="799.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2073" y="803.0151">~FixedLayout()</text><ellipse cx="2064" cy="812.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="2073" y="815.8198">Create() : Layout*</text><ellipse cx="2064" cy="825.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="2073" y="828.6245">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="2064" cy="838.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="2073" y="841.4292">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="2064" cy="851.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="2073" y="854.2339">initStarterMap(const int numVertices) : void</text><ellipse cx="2064" cy="863.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2073" y="867.0386">loadParameters() : void</text><ellipse cx="2064" cy="876.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2073" y="879.8433">printParameters() : void {query}</text><!--MD5=[caebf2ddd0fe15aa1cd7c0f919e7d6a1]
class Layout--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="393.7266" id="Layout" style="stroke: #A80036; stroke-width: 1.5;" width="380" x="1639" y="218"/><ellipse cx="1803.25" cy="234" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1803.3594,229.3438 L1802.2031,234.4219 L1804.5313,234.4219 L1803.3594,229.3438 Z M1801.875,227.1094 L1804.8594,227.1094 L1808.2188,239.5 L1805.7656,239.5 L1805,236.4375 L1801.7188,236.4375 L1800.9688,239.5 L1798.5313,239.5 L1801.875,227.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="43" x="1823.75" y="238.1543">Layout</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="2018" y1="250" y2="250"/><ellipse cx="1650" cy="261" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1659" y="264.2104">numCallerVertices_ : BGSIZE</text><ellipse cx="1650" cy="273.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1659" y="277.0151">numEndogenouslyActiveNeurons_ : BGSIZE</text><ellipse cx="1650" cy="286.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1659" y="289.8198">dist2_ : CompleteMatrix*</text><ellipse cx="1650" cy="299.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1659" y="302.6245">dist_ : CompleteMatrix*</text><ellipse cx="1650" cy="312.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1659" y="315.4292">xloc_ : VectorMatrix*</text><ellipse cx="1650" cy="325.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1659" y="328.2339">yloc_ : VectorMatrix*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="334.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1659" y="341.0386">gridLayout_ : bool</text><ellipse cx="1650" cy="350.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1659" y="353.8433">starterMap_ : bool*</text><polygon fill="none" points="1650,358.4375,1654,362.4375,1650,366.4375,1646,362.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1659" y="366.6479">fileLogger_ : log4cplus::Logger</text><polygon fill="none" points="1650,371.2422,1654,375.2422,1650,379.2422,1646,375.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1659" y="379.4526">vertices_ : shared_ptr&lt;AllVertices&gt;</text><polygon fill="none" points="1650,384.0469,1654,388.0469,1650,392.0469,1646,388.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1659" y="392.2573">callerVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="1650,396.8516,1654,400.8516,1650,404.8516,1646,400.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1659" y="405.062">endogenouslyActiveNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="1650,409.6563,1654,413.6563,1650,417.6563,1646,413.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1659" y="417.8667">inhibitoryNeuronLayout_ : vector&lt;int&gt;</text><ellipse cx="1650" cy="427.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1659" y="430.6714">probedNeuronList_ : vector&lt;int&gt;</text><polygon fill="none" points="1650,435.2656,1654,439.2656,1650,443.2656,1646,439.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1659" y="443.4761">psapVertexList_ : vector&lt;int&gt;</text><polygon fill="none" points="1650,448.0703,1654,452.0703,1650,456.0703,1646,452.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1659" y="456.2808">responderVertexList_ : vector&lt;int&gt;</text><ellipse cx="1650" cy="465.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1659" y="469.0854">vertexTypeMap_ : vertexType*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="2018" y1="475.6797" y2="475.6797"/><ellipse cx="1650" cy="486.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1659" y="489.8901">Layout()</text><ellipse cx="1650" cy="499.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="1659" y="502.6948">~Layout()</text><ellipse cx="1650" cy="512.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="1659" y="515.4995">edgType(const int srcVertex, const int destVertex) : edgeType</text><ellipse cx="1650" cy="525.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1659" y="528.3042">getVertices() : shared_ptr&lt;AllVertices&gt; {query}</text><ellipse cx="1650" cy="537.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="1659" y="541.1089">generateVertexTypeMap(int numVertices) : void</text><ellipse cx="1650" cy="550.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1659" y="553.9136">initStarterMap(const int numVertices) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="560.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1659" y="566.7183">initVerticesLocs() : void</text><ellipse cx="1650" cy="576.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="134" x="1659" y="579.5229">loadParameters() : void</text><ellipse cx="1650" cy="589.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1659" y="592.3276">printParameters() : void {query}</text><ellipse cx="1650" cy="601.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="1659" y="605.1323">setupLayout() : void</text><!--MD5=[e2bec1e8f5041d1015728825611f3c9f]
class LayoutFactory--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="150.4375" id="LayoutFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="1612.5" y="8"/><ellipse cx="1781.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1784.2188,29.6406 Q1783.6406,29.9375 1783,30.0781 Q1782.3594,30.2344 1781.6563,30.2344 Q1779.1563,30.2344 1777.8281,28.5938 Q1776.5156,26.9375 1776.5156,23.8125 Q1776.5156,20.6875 1777.8281,19.0313 Q1779.1563,17.375 1781.6563,17.375 Q1782.3594,17.375 1783,17.5313 Q1783.6563,17.6875 1784.2188,17.9844 L1784.2188,20.7031 Q1783.5938,20.125 1783,19.8594 Q1782.4063,19.5781 1781.7813,19.5781 Q1780.4375,19.5781 1779.75,20.6563 Q1779.0625,21.7188 1779.0625,23.8125 Q1779.0625,25.9063 1779.75,26.9844 Q1780.4375,28.0469 1781.7813,28.0469 Q1782.4063,28.0469 1783,27.7813 Q1783.5938,27.5 1784.2188,26.9219 L1784.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="1801.75" y="28.1543">LayoutFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1613.5" x2="2044.5" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1620.5" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1632.5" y="54.2104">createFunctions : LayoutFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1620.5" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1632.5" y="67.0151">layoutInstance : shared_ptr&lt;Layout&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1613.5" x2="2044.5" y1="73.6094" y2="73.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1620.5" y="81.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1632.5" y="87.8198">LayoutFactory()</text><ellipse cx="1623.5" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1632.5" y="100.6245">~LayoutFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1620.5" y="107.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="1632.5" y="113.4292">invokeCreateFunction(const string&amp; className) : Layout*</text><ellipse cx="1623.5" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="1632.5" y="126.2339">getInstance() : LayoutFactory*</text><ellipse cx="1623.5" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1632.5" y="139.0386">createLayout(const string&amp; className) : shared_ptr&lt;Layout&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1620.5" y="145.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="1632.5" y="151.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[cc1c410fe2850b6da0ea695abfcea755]
class VerticesFactory--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="150.4375" id="VerticesFactory" style="stroke: #A80036; stroke-width: 1.5;" width="433" x="965.5" y="340"/><ellipse cx="1129.25" cy="356" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1132.2188,361.6406 Q1131.6406,361.9375 1131,362.0781 Q1130.3594,362.2344 1129.6563,362.2344 Q1127.1563,362.2344 1125.8281,360.5938 Q1124.5156,358.9375 1124.5156,355.8125 Q1124.5156,352.6875 1125.8281,351.0313 Q1127.1563,349.375 1129.6563,349.375 Q1130.3594,349.375 1131,349.5313 Q1131.6563,349.6875 1132.2188,349.9844 L1132.2188,352.7031 Q1131.5938,352.125 1131,351.8594 Q1130.4063,351.5781 1129.7813,351.5781 Q1128.4375,351.5781 1127.75,352.6563 Q1127.0625,353.7188 1127.0625,355.8125 Q1127.0625,357.9063 1127.75,358.9844 Q1128.4375,360.0469 1129.7813,360.0469 Q1130.4063,360.0469 1131,359.7813 Q1131.5938,359.5 1132.2188,358.9219 L1132.2188,361.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="1149.75" y="360.1543">VerticesFactory</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="966.5" x2="1397.5" y1="372" y2="372"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="973.5" y="380"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="985.5" y="386.2104">createFunctions : VerticesFunctionMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="973.5" y="392.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="985.5" y="399.0151">verticesInstance : shared_ptr&lt;AllVertices&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="966.5" x2="1397.5" y1="405.6094" y2="405.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="973.5" y="413.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="985.5" y="419.8198">VerticesFactory()</text><ellipse cx="976.5" cy="429.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="985.5" y="432.6245">~VerticesFactory()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="973.5" y="439.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="985.5" y="445.4292">invokeCreateFunction(const string&amp; className) : AllVertices*</text><ellipse cx="976.5" cy="455.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="985.5" y="458.2339">getInstance() : VerticesFactory*</text><ellipse cx="976.5" cy="467.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="985.5" y="471.0386">createVertices(const string&amp; className) : shared_ptr&lt;AllVertices&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="973.5" y="477.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="985.5" y="483.8433">registerClass(const string&amp; className, CreateFunction function) : void</text><!--MD5=[639115fe7f0fcce40793e2aa5cc37621]
class AllIFNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="252.875" id="AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="2466" y="684.5"/><ellipse cx="2485.95" cy="700.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2488.9188,706.1406 Q2488.3406,706.4375 2487.7,706.5781 Q2487.0594,706.7344 2486.3563,706.7344 Q2483.8563,706.7344 2482.5281,705.0938 Q2481.2156,703.4375 2481.2156,700.3125 Q2481.2156,697.1875 2482.5281,695.5313 Q2483.8563,693.875 2486.3563,693.875 Q2487.0594,693.875 2487.7,694.0313 Q2488.3563,694.1875 2488.9188,694.4844 L2488.9188,697.2031 Q2488.2938,696.625 2487.7,696.3594 Q2487.1063,696.0781 2486.4813,696.0781 Q2485.1375,696.0781 2484.45,697.1563 Q2483.7625,698.2188 2483.7625,700.3125 Q2483.7625,702.4063 2484.45,703.4844 Q2485.1375,704.5469 2486.4813,704.5469 Q2487.1063,704.5469 2487.7,704.2813 Q2488.2938,704 2488.9188,703.4219 L2488.9188,706.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="183" x="2501.05" y="704.6543">AllIFNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2691" y1="716.5" y2="716.5"/><ellipse cx="2477" cy="727.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2486" y="730.7104">C1_ : BGFLOAT*</text><ellipse cx="2477" cy="740.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2486" y="743.5151">C2_ : BGFLOAT*</text><ellipse cx="2477" cy="753.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2486" y="756.3198">Cm_ : BGFLOAT*</text><ellipse cx="2477" cy="765.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2486" y="769.1245">I0_ : BGFLOAT*</text><ellipse cx="2477" cy="778.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2486" y="781.9292">Iinject_ : BGFLOAT*</text><ellipse cx="2477" cy="791.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2486" y="794.7339">Inoise_ : BGFLOAT*</text><ellipse cx="2477" cy="804.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2486" y="807.5386">Isyn_ : BGFLOAT*</text><ellipse cx="2477" cy="817.1328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2486" y="820.3433">Rm_ : BGFLOAT*</text><ellipse cx="2477" cy="829.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2486" y="833.1479">Tau_ : BGFLOAT*</text><ellipse cx="2477" cy="842.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2486" y="845.9526">Trefract_ : BGFLOAT*</text><ellipse cx="2477" cy="855.5469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2486" y="858.7573">Vinit_ : BGFLOAT*</text><ellipse cx="2477" cy="868.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2486" y="871.562">Vm_ : BGFLOAT*</text><ellipse cx="2477" cy="881.1563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2486" y="884.3667">Vreset_ : BGFLOAT*</text><ellipse cx="2477" cy="893.9609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2486" y="897.1714">Vrest_ : BGFLOAT*</text><ellipse cx="2477" cy="906.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2486" y="909.9761">Vthresh_ : BGFLOAT*</text><ellipse cx="2477" cy="919.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2486" y="922.7808">numStepsInRefractoryPeriod_ : int*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2691" y1="929.375" y2="929.375"/><!--MD5=[bc6843495936d398fdad119946a0d209]
class AllIZHNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="124.8281" id="AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="2466" y="1086.5"/><ellipse cx="2481" cy="1102.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2483.9688,1108.1406 Q2483.3906,1108.4375 2482.75,1108.5781 Q2482.1094,1108.7344 2481.4063,1108.7344 Q2478.9063,1108.7344 2477.5781,1107.0938 Q2476.2656,1105.4375 2476.2656,1102.3125 Q2476.2656,1099.1875 2477.5781,1097.5313 Q2478.9063,1095.875 2481.4063,1095.875 Q2482.1094,1095.875 2482.75,1096.0313 Q2483.4063,1096.1875 2483.9688,1096.4844 L2483.9688,1099.2031 Q2483.3438,1098.625 2482.75,1098.3594 Q2482.1563,1098.0781 2481.5313,1098.0781 Q2480.1875,1098.0781 2479.5,1099.1563 Q2478.8125,1100.2188 2478.8125,1102.3125 Q2478.8125,1104.4063 2479.5,1105.4844 Q2480.1875,1106.5469 2481.5313,1106.5469 Q2482.1563,1106.5469 2482.75,1106.2813 Q2483.3438,1106 2483.9688,1105.4219 L2483.9688,1108.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="194" x="2495" y="1106.6543">AllIZHNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2691" y1="1118.5" y2="1118.5"/><ellipse cx="2477" cy="1129.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2486" y="1132.7104">Aconst_ : BGFLOAT*</text><ellipse cx="2477" cy="1142.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2486" y="1145.5151">Bconst_ : BGFLOAT*</text><ellipse cx="2477" cy="1155.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2486" y="1158.3198">C3_ : BGFLOAT*</text><ellipse cx="2477" cy="1167.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2486" y="1171.1245">Cconst_ : BGFLOAT*</text><ellipse cx="2477" cy="1180.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2486" y="1183.9292">Dconst_ : BGFLOAT*</text><ellipse cx="2477" cy="1193.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2486" y="1196.7339">u_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2691" y1="1203.3281" y2="1203.3281"/><!--MD5=[4ac84e1680f309079c4f5159a2743064]
class AllSpikingNeuronsDeviceProperties--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="99.2188" id="AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="2454" y="365.5"/><ellipse cx="2469" cy="381.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2471.9688,387.1406 Q2471.3906,387.4375 2470.75,387.5781 Q2470.1094,387.7344 2469.4063,387.7344 Q2466.9063,387.7344 2465.5781,386.0938 Q2464.2656,384.4375 2464.2656,381.3125 Q2464.2656,378.1875 2465.5781,376.5313 Q2466.9063,374.875 2469.4063,374.875 Q2470.1094,374.875 2470.75,375.0313 Q2471.4063,375.1875 2471.9688,375.4844 L2471.9688,378.2031 Q2471.3438,377.625 2470.75,377.3594 Q2470.1563,377.0781 2469.5313,377.0781 Q2468.1875,377.0781 2467.5,378.1563 Q2466.8125,379.2188 2466.8125,381.3125 Q2466.8125,383.4063 2467.5,384.4844 Q2468.1875,385.5469 2469.5313,385.5469 Q2470.1563,385.5469 2470.75,385.2813 Q2471.3438,385 2471.9688,384.4219 L2471.9688,387.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="2483" y="385.6543">AllSpikingNeuronsDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2455" x2="2703" y1="397.5" y2="397.5"/><ellipse cx="2465" cy="408.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2474" y="411.7104">hasFired_ : bool*</text><ellipse cx="2465" cy="421.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2474" y="424.5151">spikeCountOffset_ : int*</text><ellipse cx="2465" cy="434.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2474" y="437.3198">spikeCount_ : int*</text><ellipse cx="2465" cy="446.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2474" y="450.1245">spikeHistory_ : uint64_t**</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2455" x2="2703" y1="456.7188" y2="456.7188"/><!--MD5=[537ade6dbdfe6ef3b32240037651f8aa]
class AllVerticesDeviceProperties--><rect fill="#FEFECE" filter="url(#f14wq1ofn7w26o)" height="60.8047" id="AllVerticesDeviceProperties" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="2477.5" y="52.5"/><ellipse cx="2492.5" cy="68.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2495.4688,74.1406 Q2494.8906,74.4375 2494.25,74.5781 Q2493.6094,74.7344 2492.9063,74.7344 Q2490.4063,74.7344 2489.0781,73.0938 Q2487.7656,71.4375 2487.7656,68.3125 Q2487.7656,65.1875 2489.0781,63.5313 Q2490.4063,61.875 2492.9063,61.875 Q2493.6094,61.875 2494.25,62.0313 Q2494.9063,62.1875 2495.4688,62.4844 L2495.4688,65.2031 Q2494.8438,64.625 2494.25,64.3594 Q2493.6563,64.0781 2493.0313,64.0781 Q2491.6875,64.0781 2491,65.1563 Q2490.3125,66.2188 2490.3125,68.3125 Q2490.3125,70.4063 2491,71.4844 Q2491.6875,72.5469 2493.0313,72.5469 Q2493.6563,72.5469 2494.25,72.2813 Q2494.8438,72 2495.4688,71.4219 L2495.4688,74.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="2506.5" y="72.6543">AllVerticesDeviceProperties</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2478.5" x2="2679.5" y1="84.5" y2="84.5"/><ellipse cx="2488.5" cy="95.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2497.5" y="98.7104">summationMap_ : BGFLOAT*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2478.5" x2="2679.5" y1="105.3047" y2="105.3047"/><!--MD5=[b299d6e53b6ac4d2a1701b68b9dc7554]
reverse link AllIFNeurons to AllIZHNeurons--><path d="M659.4,2053.41 C650.59,2067.6 641.79,2081.8 633.04,2095.9 " fill="none" id="AllIFNeurons&lt;-AllIZHNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="653.64,2049.41,670.14,2036.11,665.54,2056.79,653.64,2049.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d41fa10eee7108bf615579dc16f66c4]
reverse link AllIFNeurons to AllLIFNeurons--><path d="M1107.03,2053.3 C1176.48,2164.99 1245.92,2276.67 1288.66,2345.4 " fill="none" id="AllIFNeurons&lt;-AllLIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1100.96,2056.79,1096.34,2036.11,1112.84,2049.39,1100.96,2056.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17cadfdde82fbd78aaa7ab65342c0454]
reverse link AllIFNeuronsDeviceProperties to AllIZHNeuronsDeviceProperties--><path d="M2579,957.73 C2579,1002.75 2579,1049.94 2579,1086.07 " fill="none" id="AllIFNeuronsDeviceProperties&lt;-AllIZHNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2572,957.59,2579,937.59,2586,957.59,2572,957.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8724fdcf162cd93143062af7a28861a5]
reverse link AllSpikingNeurons to AllIFNeurons--><path d="M1095.85,1305.88 C1088.32,1319.51 1080.53,1333.6 1072.57,1347.99 " fill="none" id="AllSpikingNeurons&lt;-AllIFNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1089.78,1302.39,1105.58,1288.27,1102.03,1309.16,1089.78,1302.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcb689111a9832bf7543527f372e607]
reverse link AllSpikingNeuronsDeviceProperties to AllIFNeuronsDeviceProperties--><path d="M2579,484.88 C2579,539.78 2579,618.11 2579,684.13 " fill="none" id="AllSpikingNeuronsDeviceProperties&lt;-AllIFNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2572,484.71,2579,464.71,2586,484.71,2572,484.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f591e114573ccd2409f159b73ea72911]
reverse link AllVertices to AllSpikingNeurons--><path d="M1182,970.15 C1182,983.42 1182,996.77 1182,1009.87 " fill="none" id="AllVertices&lt;-AllSpikingNeurons" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1175,970.12,1182,950.12,1189,970.12,1175,970.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fcd28df228b50666b72099cd983e7d22]
reverse link AllVerticesDeviceProperties to AllSpikingNeuronsDeviceProperties--><path d="M2579,133.73 C2579,196.35 2579,303.24 2579,365.35 " fill="none" id="AllVerticesDeviceProperties&lt;-AllSpikingNeuronsDeviceProperties" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2572,133.58,2579,113.58,2586,133.58,2572,133.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7269b632a17f4028eba21f1bd63939ed]
reverse link Layout to DynamicLayout--><path d="M1829,632.56 C1829,664.38 1829,695.52 1829,722.6 " fill="none" id="Layout&lt;-DynamicLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1822,632.13,1829,612.13,1836,632.13,1822,632.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[891067ebdc7a855417ab5d2553f427ef]
reverse link Layout to FixedLayout--><path d="M2033.92,611.49 C2080.37,655.81 2126.94,700.23 2164.2,735.78 " fill="none" id="Layout&lt;-FixedLayout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2028.82,616.3,2019.18,597.43,2038.48,606.17,2028.82,616.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7b242bc45f077880469141c87516fa7]
reverse link AllSpikingNeurons to EventBuffer--><path d="M1299.05,1299.27 C1310.02,1315.39 1320.55,1331.81 1330,1348 C1374.36,1424 1413.99,1515.44 1441.51,1584.78 " fill="none" id="AllSpikingNeurons&lt;-EventBuffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1291.39,1288.17,1291.5065,1295.3802,1298.2068,1298.0458,1298.0903,1290.8356,1291.39,1288.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[efb7ef13657b6fc949565044919673f3]
reverse link Layout to AllVertices--><path d="M1627.31,538.82 C1557.96,581.06 1479.85,628.62 1408.64,671.98 " fill="none" id="Layout&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1638.81,531.82,1631.6047,531.5299,1628.5657,538.0694,1635.771,538.3595,1638.81,531.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[95ba44a0b3c69ce18700dade6dfd248d]
reverse link LayoutFactory to Layout--><path d="M1829,171.22 C1829,185.9 1829,201.65 1829,217.81 " fill="none" id="LayoutFactory&lt;-Layout" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1829,158.06,1825,164.06,1829,170.06,1833,164.06,1829,158.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[420839a3a3a413a1278c95e345e5584e]
reverse link VerticesFactory to AllVertices--><path d="M1182,503.34 C1182,552.75 1182,615.66 1182,671.63 " fill="none" id="VerticesFactory&lt;-AllVertices" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1182,490.11,1178,496.11,1182,502.11,1186,496.11,1182,490.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[386ea7da08ab6a22bc279f56e68166df]
@startuml LayoutClassDiagram






class AllIFNeurons {
	+AllIFNeurons()
	+~AllIFNeurons()
	-IinjectRange_ : BGFLOAT
	-InoiseRange_ : BGFLOAT
	-VinitRange_ : BGFLOAT
	-VresetRange_ : BGFLOAT
	-VrestingRange_ : BGFLOAT
	-VthreshRange_ : BGFLOAT
	-starterVresetRange_ : BGFLOAT
	-starterVthreshRange_ : BGFLOAT
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
	+toString(const int index) : string {query}
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIFNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+loadParameters() : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int i) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int i) : void {query}
}


class AllIZHNeurons {
	+AllIZHNeurons()
	+~AllIZHNeurons()
	+{static} Create() : AllVertices*
	-excAconst_ : BGFLOAT
	-excBconst_ : BGFLOAT
	-excCconst_ : BGFLOAT
	-excDconst_ : BGFLOAT
	-inhAconst_ : BGFLOAT
	-inhBconst_ : BGFLOAT
	-inhCconst_ : BGFLOAT
	-inhDconst_ : BGFLOAT
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
	-{static} DEFAULT_a : static constexpr BGFLOAT
	-{static} DEFAULT_b : static constexpr BGFLOAT
	-{static} DEFAULT_c : static constexpr BGFLOAT
	-{static} DEFAULT_d : static constexpr BGFLOAT
	+toString(const int index) : string {query}
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+clearNeuronSpikeCounts(void* allVerticesDevice) : void
	#copyDeviceToHost(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	#copyHostToDevice(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	+copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+copyNeuronHostToDevice(void* allVerticesDevice) : void
	+createAllVertices(Layout* layout) : void
	#createNeuron(int neuronIndex, Layout* layout) : void
	#deleteDeviceStruct(AllIZHNeuronsDeviceProperties& allVerticesDevice) : void
	+deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+deserialize(istream& input) : void
	#fire(const int index) : void
	#initNeuronConstsFromParamValues(int neuronIndex, const BGFLOAT deltaT) : void
	+printParameters() : void {query}
	#readNeuron(istream& input, int index) : void
	+serialize(ostream& output) : void {query}
	#setNeuronDefaults(const int index) : void
	+setupVertices() : void
	#writeNeuron(ostream& output, int index) : void {query}
}


class AllLIFNeurons {
	+AllLIFNeurons()
	+~AllLIFNeurons()
	+{static} Create() : AllVertices*
	#advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	#fire(const int index) : void
	+printParameters() : void {query}
}


abstract class AllSpikingNeurons {
	+AllSpikingNeurons()
	+~AllSpikingNeurons()
	#fAllowBackPropagation_ : bool
	+getSpikeHistory(int index, int offIndex) : uint64_t
	+vertexEvents_ : vector<EventBuffer>
	+hasFired_ : vector<bool>
	#{abstract} advanceNeuron(const int index) : void
	+advanceVertices(AllEdges& synapses, const EdgeIndexMap* edgeIndexMap) : void
	#clearDeviceSpikeCounts(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} clearNeuronSpikeCounts(void* allVerticesDevice) : void
	+clearSpikeCounts() : void
	#copyDeviceSpikeCountsToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	#copyDeviceSpikeHistoryToHost(AllSpikingNeuronsDeviceProperties& allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeCountsToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronDeviceSpikeHistoryToHost(void* allVerticesDevice) : void
	#fire(const int index) : void
	+setAdvanceVerticesDeviceParams(AllEdges& synapses) : void
	+setupVertices() : void
}


abstract class AllVertices {
	+AllVertices()
	+~AllVertices()
	+summationMap_ : BGFLOAT*
	#size_ : int
	#fileLogger_ : log4cplus::Logger
	#vertexLogger_ : log4cplus::Logger
	+{abstract} toString(const int i) : string {query}
	+{abstract} advanceVertices(AllEdges& edges, void* allVerticesDevice, void* allEdgesDevice, float* randNoise, EdgeIndexMap* edgeIndexMapDevice) : void
	+{abstract} advanceVertices(AllEdges& edges, const EdgeIndexMap* edgeIndexMap) : void
	+{abstract} allocNeuronDeviceStruct(void** allVerticesDevice) : void
	+{abstract} copyNeuronDeviceToHost(void* allVerticesDevice) : void
	+{abstract} copyNeuronHostToDevice(void* allVerticesDevice) : void
	+{abstract} createAllVertices(Layout* layout) : void
	+{abstract} deleteNeuronDeviceStruct(void* allVerticesDevice) : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+{abstract} setAdvanceVerticesDeviceParams(AllEdges& edges) : void
	+setupVertices() : void
}


class DynamicLayout {
	+DynamicLayout()
	+~DynamicLayout()
	-fractionEndogenouslyActive_ : BGFLOAT
	-fractionExcitatory_ : BGFLOAT
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


class EventBuffer {
	+EventBuffer(int maxEvents)
	-epochStart_ : int
	+getNumEventsInEpoch() : int {query}
	-numEventsInEpoch_ : int
	-queueEnd_ : int
	-queueFront_ : int
	+getPastEvent(int offset) : uint64_t {query}
	+operator[](int i) : uint64_t {query}
	-eventTimeSteps_ : vector<uint64_t>
	+clear() : void
	+insertEvent(uint64_t timeStep) : void
	+resize(int maxEvents) : void
	+startNewEpoch() : void
}


class FixedLayout {
	+FixedLayout()
	+~FixedLayout()
	+{static} Create() : Layout*
	+edgType(const int srcVertex, const int destVertex) : edgeType
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	+loadParameters() : void
	+printParameters() : void {query}
}


abstract class Layout {
	+Layout()
	+~Layout()
	+numCallerVertices_ : BGSIZE
	+numEndogenouslyActiveNeurons_ : BGSIZE
	+dist2_ : CompleteMatrix*
	+dist_ : CompleteMatrix*
	+xloc_ : VectorMatrix*
	+yloc_ : VectorMatrix*
	-gridLayout_ : bool
	+starterMap_ : bool*
	+{abstract} edgType(const int srcVertex, const int destVertex) : edgeType
	#fileLogger_ : log4cplus::Logger
	+getVertices() : shared_ptr<AllVertices> {query}
	#vertices_ : shared_ptr<AllVertices>
	#callerVertexList_ : vector<int>
	#endogenouslyActiveNeuronList_ : vector<int>
	#inhibitoryNeuronLayout_ : vector<int>
	+probedNeuronList_ : vector<int>
	#psapVertexList_ : vector<int>
	#responderVertexList_ : vector<int>
	+vertexTypeMap_ : vertexType*
	+generateVertexTypeMap(int numVertices) : void
	+initStarterMap(const int numVertices) : void
	-initVerticesLocs() : void
	+{abstract} loadParameters() : void
	+printParameters() : void {query}
	+setupLayout() : void
}


class LayoutFactory {
	-LayoutFactory()
	+~LayoutFactory()
	-invokeCreateFunction(const string& className) : Layout*
	+{static} getInstance() : LayoutFactory*
	-createFunctions : LayoutFunctionMap
	+createLayout(const string& className) : shared_ptr<Layout>
	-layoutInstance : shared_ptr<Layout>
	-registerClass(const string& className, CreateFunction function) : void
}


class VerticesFactory {
	-VerticesFactory()
	+~VerticesFactory()
	-invokeCreateFunction(const string& className) : AllVertices*
	+{static} getInstance() : VerticesFactory*
	-createFunctions : VerticesFunctionMap
	+createVertices(const string& className) : shared_ptr<AllVertices>
	-verticesInstance : shared_ptr<AllVertices>
	-registerClass(const string& className, CreateFunction function) : void
}


class AllIFNeuronsDeviceProperties {
	+C1_ : BGFLOAT*
	+C2_ : BGFLOAT*
	+Cm_ : BGFLOAT*
	+I0_ : BGFLOAT*
	+Iinject_ : BGFLOAT*
	+Inoise_ : BGFLOAT*
	+Isyn_ : BGFLOAT*
	+Rm_ : BGFLOAT*
	+Tau_ : BGFLOAT*
	+Trefract_ : BGFLOAT*
	+Vinit_ : BGFLOAT*
	+Vm_ : BGFLOAT*
	+Vreset_ : BGFLOAT*
	+Vrest_ : BGFLOAT*
	+Vthresh_ : BGFLOAT*
	+numStepsInRefractoryPeriod_ : int*
}


class AllIZHNeuronsDeviceProperties {
	+Aconst_ : BGFLOAT*
	+Bconst_ : BGFLOAT*
	+C3_ : BGFLOAT*
	+Cconst_ : BGFLOAT*
	+Dconst_ : BGFLOAT*
	+u_ : BGFLOAT*
}


class AllSpikingNeuronsDeviceProperties {
	+hasFired_ : bool*
	+spikeCountOffset_ : int*
	+spikeCount_ : int*
	+spikeHistory_ : uint64_t**
}


class AllVerticesDeviceProperties {
	+summationMap_ : BGFLOAT*
}






.AllIFNeurons <|- - .AllIZHNeurons


.AllIFNeurons <|- - .AllLIFNeurons


.AllIFNeuronsDeviceProperties <|- - .AllIZHNeuronsDeviceProperties


.AllSpikingNeurons <|- - .AllIFNeurons


.AllSpikingNeuronsDeviceProperties <|- - .AllIFNeuronsDeviceProperties


.AllVertices <|- - .AllSpikingNeurons


.AllVerticesDeviceProperties <|- - .AllSpikingNeuronsDeviceProperties


.Layout <|- - .DynamicLayout


.Layout <|- - .FixedLayout






.AllSpikingNeurons *- - .EventBuffer


.Layout *- - .AllVertices


.LayoutFactory *- - .Layout


.VerticesFactory *- - .AllVertices









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>