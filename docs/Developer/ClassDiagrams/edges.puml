@startuml EdgesClassDiagram





/' Objects '/

class AllDSSynapses {
	+AllDSSynapses()
	+AllDSSynapses(const int numVertices, const int maxEdges)
	+~AllDSSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDSSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDSSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDSSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllDynamicSTDPSynapses {
	+AllDynamicSTDPSynapses()
	+AllDynamicSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllDynamicSTDPSynapses()
	+{static} Create() : AllEdges*
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
	#allocDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdges, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#changePSR(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	#copyDeviceToHost(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllDynamicSTDPSynapsesDeviceProperties& allEdgesDeviceProps) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


abstract class AllEdges {
	+AllEdges()
	+AllEdges(int numVertices, int maxEdges)
	+{abstract} ~AllEdges()
	+{abstract} setupEdges() : void
	+{abstract} loadParameters() : void
	+{abstract} printParameters() : void {query}
	+{abstract} addEdge(edgeType type, int srcVertex, int destVertex, BGFLOAT deltaT) : BGSIZE
	+{abstract} createEdge(BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT deltaT, edgeType type) : void
	+{abstract} createEdgeIndexMap(EdgeIndexMap& edgeIndexMap) : void
	+serialize(Archive& archive) : void
	#{abstract} setupEdges(int numVertices, int maxEdges) : void
	#{abstract} readEdge(istream& input, BGSIZE iEdg) : void
	#{abstract} writeEdge(ostream& output, BGSIZE iEdg) : void {query}
	#edgeOrdinalToType(int typeOrdinal) : edgeType
	#fileLogger_ : log4cplus::Logger
	#edgeLogger_ : log4cplus::Logger
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	+{abstract} setAdvanceEdgesDeviceParams() : void
	+{abstract} setEdgeClassID() : void
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+{abstract} advanceEdges(AllVertices& vertices, EdgeIndexMap& edgeIndexMap) : void
	+{abstract} advanceEdge(BGSIZE iEdg, AllVertices& vertices) : void
	+{abstract} eraseEdge(int vertexIndex, BGSIZE iEdg) : void
	+sourceVertexIndex_ : vector<int>
	+destVertexIndex_ : vector<int>
	+W_ : vector<BGFLOAT>
	+type_ : vector<edgeType>
	+inUse_ : vector<unsigned char>
	+edgeCounts_ : vector<BGSIZE>
	+totalEdgeCount_ : BGSIZE
	+maxEdgesPerVertex_ : BGSIZE
	+countVertices_ : int
}


class All911Edges {
  +All911Edges()
  +All911Edges(int numVertices, int maxEdges)
  +{abstract} ~All911Edges()
  +{static} Create() : AllEdges*
  +{abstract} setupEdges() : void <<override>>
  +{abstract} createEdge(BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT deltaT, edgeType type) : void <<override>>
  +{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) :  void
  +{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
  +{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void
  +{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void
  +{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
  +{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void
  +{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void
  +{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
  +{abstract} setAdvanceEdgesDeviceParams() : void
  +{abstract} setEdgeClassID() : void
  +{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) const : void
  +{abstract} advanceEdges(AllVertices& vertices, EdgeIndexMap& edgeIndexMap) : void
  +advance911Edge(BGSIZE iEdg, All911Vertices& vertices) : void
  +{abstract} advanceEdge(BGSIZE iEdg, AllVertices& vertices) : void <<override>>
  +isAvailable_ : unique_ptr<bool[]>
  +isRedial_ : unique_ptr<bool[]>
  +call_ : vector<Call>
}


class AllNeuroEdges {
	+AllNeuroEdges()
	+{abstract} ~AllNeuroEdges()
	+{abstract} setupEdges() : void <<override>>
	+{abstract} resetEdge(BGSIZE iEdg, BGFLOAT deltaT) : void
	+edgSign(const edgeType type) : int
	+{abstract} printSynapsesProps() : void {query}
	+serialize(Archive& archive) : void
	#{abstract} setupEdges(int numVertices, int maxEdges) : void <<override>>
	#{abstract} readEdge(istream& input, BGSIZE iEdg) : void <<override>>
	#{abstract} writeEdge(ostream& output, BGSIZE iEdg) : void {query} <<override>>
	+{static} SYNAPSE_STRENGTH_ADJUSTMENT : static constexpr BGFLOAT
	+psr_ : vector<BGFLOAT>
}


class AllSTDPSynapses {
	+AllSTDPSynapses()
	+AllSTDPSynapses(const int numVertices, const int maxEdges)
	+~AllSTDPSynapses()
	+{static} Create() : AllEdges*
	+Aneg_E_ : BGFLOAT
	+Aneg_I_ : BGFLOAT
	+Apos_E_ : BGFLOAT
	+Apos_I_ : BGFLOAT
	+Wex_E_ : BGFLOAT
	+Wex_I_ : BGFLOAT
	+defaultSTDPgap_ : BGFLOAT
	#synapticWeightModification(const BGSIZE iEdg, BGFLOAT edgeWeight, double delta) : BGFLOAT
	+tauneg_E_ : BGFLOAT
	+tauneg_I_ : BGFLOAT
	+taupos_E_ : BGFLOAT
	+taupos_I_ : BGFLOAT
	+tauspost_E_ : BGFLOAT
	+tauspost_I_ : BGFLOAT
	+tauspre_E_ : BGFLOAT
	+tauspre_I_ : BGFLOAT
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+allowBackPropagation() : bool
	#isSpikeQueuePost(const BGSIZE iEdg) : bool
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
	+advanceEdge(const BGSIZE iEdg, AllVertices* neurons) : void
	+advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void
	#allocDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice) : void
	+allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+copyEdgeDeviceToHost(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice) : void
	+copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#copyHostToDevice(void* allEdgesDevice, AllSTDPSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	+createEdge(const BGSIZE iEdg, int srcVertex, int destVertex, const BGFLOAT deltaT, edgeType type) : void
	#deleteDeviceStruct(AllSTDPSynapsesDeviceProperties& allEdgesDevice) : void
	+deleteEdgeDeviceStruct(void* allEdgesDevice) : void
	#initSpikeQueue(const BGSIZE iEdg) : void
	+loadParameters() : void
	+postSpikeHit(const BGSIZE iEdg) : void
	+printGPUEdgesProps(void* allEdgesDeviceProps) : void {query}
	+printParameters() : void {query}
	+printSynapsesProps() : void {query}
	#readEdge(istream& input, const BGSIZE iEdg) : void
	+resetEdge(const BGSIZE iEdg, const BGFLOAT deltaT) : void
	+setEdgeClassID() : void
	+setupEdges() : void
	#setupEdges(const int numVertices, const int maxEdges) : void
	-stdpLearning(const BGSIZE iEdg, double delta, double epost, double epre, int srcVertex, int destVertex) : void
	#writeEdge(ostream& output, const BGSIZE iEdg) : void {query}
}


class AllSpikingSynapses {
	+AllSpikingSynapses()
	+AllSpikingSynapses(int numVertices, int maxEdges)
	+{abstract} ~AllSpikingSynapses()
	+{static} Create() : AllEdges*
	+{abstract} setupEdges() : void <<override>>
	+{abstract} resetEdge(BGSIZE iEdg, BGFLOAT deltaT) : void <<override>>
	+{abstract} loadParameters() : void <<override>>
	+{abstract} printParameters() : void {query} <<override>>
	+{abstract} createEdge(BGSIZE iEdg, int srcVertex, int destVertex, BGFLOAT deltaT, edgeType type) : void <<override>>
	+{abstract} allowBackPropagation() : bool
	+{abstract} printSynapsesProps() : void {query}
	+serialize(Archive& archive) : void
	#{abstract} setupEdges(int numVertices, int maxEdges) : void
	#{abstract} initSpikeQueue(BGSIZE iEdg) : void
	#updateDecay(BGSIZE iEdg, BGFLOAT deltaT) : bool
	#{abstract} readEdge(istream& input, BGSIZE iEdg) : void <<override>>
	#{abstract} writeEdge(ostream& output, BGSIZE iEdg) : void {query} <<override>>
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice) : void <<override>>
	+{abstract} allocEdgeDeviceStruct(void** allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void <<override>>
	+{abstract} deleteEdgeDeviceStruct(void* allEdgesDevice) : void <<override>>
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice) : void <<override>>
	+{abstract} copyEdgeHostToDevice(void* allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void <<override>>
	+{abstract} copyEdgeDeviceToHost(void* allEdgesDevice) : void <<override>>
	+{abstract} copyDeviceEdgeCountsToHost(void* allEdgesDevice) : void <<override>>
	+{abstract} advanceEdges(void* allEdgesDevice, void* allVerticesDevice, void* edgeIndexMapDevice) : void <<override>>
	+{abstract} setAdvanceEdgesDeviceParams() : void <<override>>
	+{abstract} setEdgeClassID() : void <<override>>
	+{abstract} printGPUEdgesProps(void* allEdgesDeviceProps) : void {query} <<override>>
	+copyDeviceEdgeSumIdxToHost(void* allEdgesDevice) : void
	#allocDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice, int numVertices, int maxEdgesPerVertex) : void
	#deleteDeviceStruct(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	#copyHostToDevice(void* allEdgesDevice, AllSpikingSynapsesDeviceProperties& allEdgesDeviceProps, int numVertices, int maxEdgesPerVertex) : void
	#copyDeviceToHost(AllSpikingSynapsesDeviceProperties& allEdgesDevice) : void
	+{abstract} advanceEdge(BGSIZE iEdg, AllVertices& neurons) : void <<override>>
	+{abstract} preSpikeHit(BGSIZE iEdg) : void
	+{abstract} postSpikeHit(BGSIZE iEdg) : void
	#isSpikeQueue(BGSIZE iEdg) : bool
	#{abstract} changePSR(BGSIZE iEdg, BGFLOAT deltaT) : void
	+decay_ : vector<BGFLOAT>
	+tau_ : vector<BGFLOAT>
	+tau_II_ : BGFLOAT
	+tau_IE_ : BGFLOAT
	+tau_EI_ : BGFLOAT
	+tau_EE_ : BGFLOAT
	+delay_II_ : BGFLOAT
	+delay_IE_ : BGFLOAT
	+delay_EI_ : BGFLOAT
	+delay_EE_ : BGFLOAT
	+totalDelay_ : vector<int>
	+delayQueue_ : vector<uint32_t>
	+delayIndex_ : vector<int>
	+delayQueueLength_ : vector<int>
}


class EdgesFactory {
	-EdgesFactory()
	+~EdgesFactory()
	-invokeCreateFunction(const string& className) : AllEdges*
	+{static} getInstance() : EdgesFactory*
	-createFunctions : EdgesFunctionMap
	+createEdges(const string& className) : shared_ptr<AllEdges>
	-edgesInstance_ : shared_ptr<AllEdges>
	-registerClass(const string& className, CreateFunction function) : void
}


enum enumClassSynapses {
	classAllDSSynapses
	classAllDynamicSTDPSynapses
	classAllSTDPSynapses
	classAllSpikingSynapses
	undefClassSynapses
}


class AllDSSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllDynamicSTDPSynapsesDeviceProperties {
	+D_ : BGFLOAT*
	+F_ : BGFLOAT*
	+U_ : BGFLOAT*
	+r_ : BGFLOAT*
	+u_ : BGFLOAT*
	+lastSpike_ : uint64_t*
}


class AllEdgesDeviceProperties {
  +sourceVertexIndex_ : int*
  +destVertexIndex_ : int*
  +W_ : BGFLOAT*
  +type_ : edgeType*
  +inUse_ : unsigned char*
  +edgeCounts_ : BGSIZE*
  +totalEdgeCount_ : BGSIZE
  +maxEdgesPerVertex_ : BGSIZE
	+countVertices_ : int
}


class AllNeuroEdgesDeviceProperties {
  +psr_ : BGFLOAT*
}


class AllSTDPSynapsesDeviceProperties {
	+Aneg_ : BGFLOAT*
	+Apos_ : BGFLOAT*
	+STDPgap_ : BGFLOAT*
	+Wex_ : BGFLOAT*
	+muneg_ : BGFLOAT*
	+mupos_ : BGFLOAT*
	+tauneg_ : BGFLOAT*
	+taupos_ : BGFLOAT*
	+tauspost_ : BGFLOAT*
	+tauspre_ : BGFLOAT*
	+useFroemkeDanSTDP_ : bool*
	+delayIndexPost_ : int*
	+delayQueuePostLength_ : int*
	+totalDelayPost_ : int*
	+delayQueuePost_ : uint32_t*
}


class AllSpikingSynapsesDeviceProperties {
	+decay_ : BGFLOAT*
	+tau_ : BGFLOAT*
	+delayIndex_ : int*
	+delayQueueLength_ : int*
	+totalDelay_ : int*
	+delayQueue_ : uint32_t*
}





/' Inheritance relationships '/

.AllEdges <|-- .AllNeuroEdges


.AllEdgesDeviceProperties <|-- .AllNeuroEdgesDeviceProperties


.AllNeuroEdgesDeviceProperties <|-- .AllSpikingSynapsesDeviceProperties


.AllNeuroEdges <|-- .AllSpikingSynapses


.AllSTDPSynapses <|-- .AllDynamicSTDPSynapses


.AllSTDPSynapsesDeviceProperties <|-- .AllDynamicSTDPSynapsesDeviceProperties


.AllSpikingSynapses <|-- .AllDSSynapses


.AllSpikingSynapses <|-- .AllSTDPSynapses


.AllSpikingSynapsesDeviceProperties <|-- .AllDSSynapsesDeviceProperties


.AllSpikingSynapsesDeviceProperties <|-- .AllSTDPSynapsesDeviceProperties





/' Aggregation relationships '/

.EdgesFactory *-- .AllEdges






/' Nested objects '/



@enduml
