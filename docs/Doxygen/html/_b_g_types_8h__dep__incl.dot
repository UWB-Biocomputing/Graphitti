digraph "Simulator/Utils/BGTypes.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Simulator/Utils/BGTypes.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Used to define uniform data type sizes based for all operating systems. Also used to test the speed o..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Simulator/Core/EdgeIndex\lMap.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_edge_index_map_8h.html",tooltip="A structure maintains outgoing and edges list (forward map)."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Simulator/Connections\l/Connections.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_connections_8h.html",tooltip="The base class of all connections classes."];
  Node3 -> Node5 [id="edge3_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Simulator/Connections\l/NG911/Connections911.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_connections911_8h.html",tooltip="The model of the static network."];
  Node3 -> Node12 [id="edge4_Node000003_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Simulator/Connections\l/Neuro/ConnGrowth.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_conn_growth_8h.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node12 -> Node13 [id="edge5_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Simulator/Connections\l/Neuro/ConnGrowth.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth_8cpp.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node12 -> Node14 [id="edge6_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="Simulator/Connections\l/Neuro/ConnGrowth_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth__d_8cpp.html",tooltip="Update the weights of the Synapses in the simulation."];
  Node12 -> Node9 [id="edge7_Node000012_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Simulator/Core/Model.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_model_8cpp.html",tooltip="Implementation of Model for the graph-based networks."];
  Node12 -> Node15 [id="edge8_Node000012_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="Simulator/Core/Serializer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_serializer_8cpp.html",tooltip="Handles implementation details of serialization and deserialization of synapses."];
  Node12 -> Node16 [id="edge9_Node000012_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Simulator/Recorders\l/Neuro/XmlGrowthRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_growth_recorder_8cpp.html",tooltip="An implementation for recording spikes history in an XML file for growth simulations."];
  Node3 -> Node18 [id="edge10_Node000003_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="Simulator/Connections\l/Neuro/ConnStatic.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_conn_static_8h.html",tooltip="The model of the small world network."];
  Node18 -> Node21 [id="edge11_Node000018_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Simulator/Recorders\l/Neuro/XmlSTDPRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_s_t_d_p_recorder_8cpp_source.html",tooltip=" "];
  Node3 -> Node25 [id="edge12_Node000003_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="Simulator/Core/GPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_g_p_u_model_8cpp.html",tooltip="Implementation of Model for the spiking neural networks."];
  Node3 -> Node9 [id="edge13_Node000003_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node15 [id="edge14_Node000003_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node26 [id="edge15_Node000002_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="Simulator/Edges/AllEdges.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_edges_8h.html",tooltip="An interface and top level implementation for edge classes."];
  Node26 -> Node3 [id="edge16_Node000026_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node13 [id="edge17_Node000026_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node25 [id="edge18_Node000026_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node69 [id="edge19_Node000026_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="Simulator/Vertices\l/AllVertices.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_vertices_8h.html",tooltip="A container of the base class of all vertex data."];
  Node69 -> Node3 [id="edge20_Node000069_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 -> Node25 [id="edge21_Node000069_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 -> Node84 [id="edge22_Node000069_Node000084",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node84 [id="Node000084",label="Simulator/Layouts/Layout.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_layout_8h.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node84 -> Node3 [id="edge23_Node000084_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node84 -> Node11 [id="edge24_Node000084_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Simulator/Layouts/Layout.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_layout_8cpp.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node84 -> Node69 [id="edge25_Node000084_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 -> Node93 [id="edge26_Node000069_Node000093",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="Simulator/Vertices\l/NG911/All911Vertices.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all911_vertices_8h.html",tooltip="A container of all 911 vertex data."];
  Node69 -> Node61 [id="edge27_Node000069_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="Simulator/Vertices\l/Neuro/AllSpikingNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_spiking_neurons_8h.html",tooltip="A container of all spiking neuron data."];
  Node61 -> Node3 [id="edge28_Node000061_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node13 [id="edge29_Node000061_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node41 [id="edge30_Node000061_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="Simulator/Edges/Neuro\l/AllSynapsesDeviceFuncs.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_synapses_device_funcs_8h.html",tooltip="Device functions for synapse data."];
  Node41 -> Node14 [id="edge31_Node000041_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node25 [id="edge32_Node000041_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node35 [id="edge33_Node000041_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="Simulator/Edges/Neuro\l/AllDSSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_d_s_synapses__d_8cpp.html",tooltip="A container of all DS synapse data."];
  Node41 -> Node42 [id="edge34_Node000041_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="Simulator/Edges/Neuro\l/AllDynamicSTDPSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_dynamic_s_t_d_p_synapses__d_8cpp.html",tooltip="A container of all dynamic STDP synapse data."];
  Node41 -> Node36 [id="edge35_Node000041_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="Simulator/Edges/Neuro\l/AllSTDPSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_s_t_d_p_synapses__d_8cpp.html",tooltip="A container of all STDP synapse data."];
  Node41 -> Node43 [id="edge36_Node000041_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="Simulator/Edges/Neuro\l/AllSpikingSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_spiking_synapses__d_8cpp_source.html",tooltip=" "];
  Node41 -> Node44 [id="edge37_Node000041_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="Simulator/Edges/Neuro\l/AllSynapsesDeviceFuncs_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_synapses_device_funcs__d_8cpp.html",tooltip="Device functions for synapse data."];
  Node41 -> Node37 [id="edge38_Node000041_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="Simulator/Utils/Inputs\l/GpuSInputPoisson.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_gpu_s_input_poisson_8h.html",tooltip="A class that performs stimulus input (implementation Poisson on GPU)."];
  Node41 -> Node45 [id="edge39_Node000041_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="Simulator/Vertices\l/Neuro/AllVerticesDeviceFuncs.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_vertices_device_funcs_8h.html",tooltip="Device functions for vertices."];
  Node45 -> Node48 [id="edge40_Node000045_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="Simulator/Vertices\l/Neuro/AllVerticesDeviceFuncs_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_vertices_device_funcs__d_8cpp.html",tooltip="Device functions for vertices."];
  Node41 -> Node48 [id="edge41_Node000041_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 -> Node62 [id="edge42_Node000061_Node000062",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="Simulator/Vertices\l/Neuro/AllIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_f_neurons_8h.html",tooltip="A container of all Integate and Fire (IF) neuron data."];
  Node62 -> Node16 [id="edge43_Node000062_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node21 [id="edge44_Node000062_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node66 [id="edge45_Node000062_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="Simulator/Vertices\l/Neuro/AllIZHNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_z_h_neurons_8h.html",tooltip="A container of all Izhikevich neuron data."];
  Node66 -> Node45 [id="edge46_Node000066_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node62 -> Node58 [id="edge47_Node000062_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="Simulator/Vertices\l/Neuro/AllLIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_l_i_f_neurons_8h.html",tooltip="A container of all LIF neuron data."];
  Node2 -> Node69 [id="edge48_Node000002_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node71 [id="edge49_Node000001_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="Simulator/Core/Simulator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8h.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node71 -> Node5 [id="edge50_Node000071_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node12 [id="edge51_Node000071_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node14 [id="edge52_Node000071_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node18 [id="edge53_Node000071_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node23 [id="edge54_Node000071_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Simulator/Core/CPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_c_p_u_model_8cpp.html",tooltip="Implementation of Model for graph-based networks."];
  Node71 -> Node9 [id="edge55_Node000071_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node15 [id="edge56_Node000071_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node10 [id="edge57_Node000071_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Simulator/Core/Simulator.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8cpp.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node71 -> Node26 [id="edge58_Node000071_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node35 [id="edge59_Node000071_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node42 [id="edge60_Node000071_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node11 [id="edge61_Node000071_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node16 [id="edge62_Node000071_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node21 [id="edge63_Node000071_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 -> Node72 [id="edge64_Node000071_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 [id="Node000072",label="Simulator/Utils/Inputs\l/ISInput.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_i_s_input_8h.html",tooltip="An interface for stimulus input classes."];
  Node71 -> Node69 [id="edge65_Node000071_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node41 [id="edge66_Node000001_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node94 [id="edge67_Node000001_Node000094",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 [id="Node000094",label="Simulator/Utils/Global.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_global_8h.html",tooltip="Globally available functions/variables and default parameter values."];
  Node94 -> Node5 [id="edge68_Node000094_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node12 [id="edge69_Node000094_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node18 [id="edge70_Node000094_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node25 [id="edge71_Node000094_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node71 [id="edge72_Node000094_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node26 [id="edge73_Node000094_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node84 [id="edge74_Node000094_Node000084",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node83 [id="edge75_Node000094_Node000083",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node83 [id="Node000083",label="Simulator/Recorders\l/XmlRecorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml_recorder_8h.html",tooltip="An implementation for recording spikes history on xml file."];
  Node94 -> Node95 [id="edge76_Node000094_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="Simulator/Utils/Global.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_global_8cpp.html",tooltip="Globally available functions/variables and default parameter values."];
  Node94 -> Node96 [id="edge77_Node000094_Node000096",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node96 [id="Node000096",label="Simulator/Utils/GraphManager.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_graph_manager_8h.html",tooltip="A basic Template Circular Buffer."];
  Node94 -> Node72 [id="edge78_Node000094_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node98 [id="edge79_Node000094_Node000098",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node98 [id="Node000098",label="Simulator/Utils/Matrix\l/CompleteMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_complete_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 2D array."];
  Node94 -> Node99 [id="edge80_Node000094_Node000099",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node99 [id="Node000099",label="Simulator/Utils/Matrix\l/SparseMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_sparse_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 2D sparse array. Self-allocating and de-alloca..."];
  Node94 -> Node100 [id="edge81_Node000094_Node000100",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node100 [id="Node000100",label="Simulator/Utils/Matrix\l/VectorMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_vector_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 1D array."];
  Node94 -> Node101 [id="edge82_Node000094_Node000101",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="Simulator/Vertices\l/EventBuffer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_event_buffer_8cpp.html",tooltip="Encapsulation of vertex event buffering."];
  Node94 -> Node102 [id="edge83_Node000094_Node000102",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="Simulator/Vertices\l/EventBuffer.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_event_buffer_8h.html",tooltip="Encapsulation of vertex event buffering."];
  Node102 -> Node83 [id="edge84_Node000102_Node000083",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 -> Node101 [id="edge85_Node000102_Node000101",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 -> Node61 [id="edge86_Node000102_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node93 [id="edge87_Node000094_Node000093",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node62 [id="edge88_Node000094_Node000062",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node66 [id="edge89_Node000094_Node000066",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node58 [id="edge90_Node000094_Node000058",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node94 -> Node61 [id="edge91_Node000094_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node103 [id="edge92_Node000001_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 [id="Node000103",label="Simulator/Utils/Matrix\l/Matrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_8cpp.html",tooltip="Abstract base class for Matrices."];
  Node1 -> Node104 [id="edge93_Node000001_Node000104",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 [id="Node000104",label="Simulator/Utils/Matrix\l/Matrix.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_matrix_8h.html",tooltip="Abstract base class for Matrices."];
  Node104 -> Node13 [id="edge94_Node000104_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 -> Node105 [id="edge95_Node000104_Node000105",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="Simulator/Utils/Matrix\l/CompleteMatrix.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_complete_matrix_8h.html",tooltip="An efficient implementation of a dynamically-allocated 2D array."];
  Node105 -> Node13 [id="edge96_Node000105_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node105 -> Node98 [id="edge97_Node000105_Node000098",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 -> Node103 [id="edge98_Node000104_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node110 [id="edge99_Node000001_Node000110",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node110 [id="Node000110",label="Simulator/Utils/Parameter\lManager.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_parameter_manager_8cpp.html",tooltip="A class which contains and manages access to the XML parameter file used by a simulator instance at r..."];
  Node1 -> Node111 [id="edge100_Node000001_Node000111",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node111 [id="Node000111",label="Simulator/Utils/Parameter\lManager.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_parameter_manager_8h.html",tooltip="A singleton class which contains and manages access to the XML parameter file used by a simulator ins..."];
  Node111 -> Node13 [id="edge101_Node000111_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node111 -> Node9 [id="edge102_Node000111_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node111 -> Node10 [id="edge103_Node000111_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node111 -> Node11 [id="edge104_Node000111_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node111 -> Node110 [id="edge105_Node000111_Node000110",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node113 [id="edge106_Node000001_Node000113",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node113 [id="Node000113",label="Simulator/Utils/RNG\l/MTRand.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_m_t_rand_8h.html",tooltip="Mersenne Twister logic from Nvidia."];
  Node113 -> Node95 [id="edge107_Node000113_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node69 [id="edge108_Node000001_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
