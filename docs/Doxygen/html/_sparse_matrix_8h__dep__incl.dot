digraph "Simulator/Utils/Matrix/SparseMatrix.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Simulator/Utils/Matrix\l/SparseMatrix.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="An efficient implementation of a dynamically-allocated 2D sparse array."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Simulator/Utils/Matrix\l/SparseMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_sparse_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 2D sparse array. Self-allocating and de-alloca..."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Simulator/Utils/Matrix\l/VectorMatrix.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_vector_matrix_8h.html",tooltip="An efficient implementation of a dynamically-allocated 1D array."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Simulator/Connections\l/Neuro/ConnGrowth.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth_8cpp.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Simulator/Recorders\l/XmlRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_recorder_8cpp.html",tooltip="An implementation for recording spikes history on xml file."];
  Node3 -> Node6 [id="edge5_Node000003_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Simulator/Utils/Global.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_global_8h.html",tooltip="Globally available functions/variables and default parameter values."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Simulator/Connections\l/NG911/Connections911.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections911_8h.html",tooltip="The model of the static network."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Simulator/Connections\l/NG911/Connections911.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections911_8cpp.html",tooltip="The model of the static network."];
  Node7 -> Node9 [id="edge8_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Simulator/Recorders\l/NG911/Xml911Recorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml911_recorder_8cpp.html",tooltip="Header file for Xml911Recorder.h."];
  Node7 -> Node10 [id="edge9_Node000007_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Simulator/Utils/Factory.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_factory_8h.html",tooltip="A factory template for creating factory class for any subsystem that requires a factory to create a (..."];
  Node10 -> Node11 [id="edge10_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Simulator/Connections\l/Connections.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections_8cpp.html",tooltip="Methods for creating and updating connections."];
  Node10 -> Node12 [id="edge11_Node000010_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Simulator/Core/Model.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_model_8cpp.html",tooltip="Implementation of Model for the graph-based networks."];
  Node10 -> Node13 [id="edge12_Node000010_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Simulator/Core/Simulator.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8cpp.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node10 -> Node14 [id="edge13_Node000010_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="Simulator/Layouts/Layout.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_layout_8cpp.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node6 -> Node15 [id="edge14_Node000006_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="Simulator/Connections\l/Neuro/ConnGrowth.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth_8h.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node15 -> Node4 [id="edge15_Node000015_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Simulator/Connections\l/Neuro/ConnGrowth_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth__d_8cpp.html",tooltip="Update the weights of the Synapses in the simulation."];
  Node15 -> Node12 [id="edge17_Node000015_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node17 [id="edge18_Node000015_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="Simulator/Core/Serializer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_serializer_8cpp.html",tooltip="Handles implementation details of serialization and deserialization of synapses."];
  Node15 -> Node18 [id="edge19_Node000015_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="Simulator/Recorders\l/Neuro/XmlGrowthRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_growth_recorder_8cpp.html",tooltip="An implementation for recording spikes history in an XML file for growth simulations."];
  Node15 -> Node5 [id="edge20_Node000015_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node10 [id="edge21_Node000015_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node19 [id="edge22_Node000006_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="Simulator/Connections\l/Neuro/ConnStatic.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_static_8h.html",tooltip="The model of the small world network."];
  Node19 -> Node20 [id="edge23_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="Simulator/Connections\l/Neuro/ConnStatic.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_static_8cpp.html",tooltip="The model of the small world network."];
  Node19 -> Node21 [id="edge24_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Simulator/Core/Core.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_core_8cpp.html",tooltip="Orchestrates most functionality in the simulation."];
  Node19 -> Node22 [id="edge25_Node000019_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Simulator/Recorders\l/Neuro/XmlSTDPRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_s_t_d_p_recorder_8cpp_source.html",tooltip=" "];
  Node19 -> Node10 [id="edge26_Node000019_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node23 [id="edge27_Node000006_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Simulator/Core/GPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_g_p_u_model_8cpp.html",tooltip="Implementation of Model for the spiking neural networks."];
  Node6 -> Node24 [id="edge28_Node000006_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="Simulator/Core/Simulator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8h.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node24 -> Node7 [id="edge29_Node000024_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node15 [id="edge30_Node000024_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node16 [id="edge31_Node000024_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node19 [id="edge32_Node000024_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node25 [id="edge33_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="Simulator/Core/CPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_c_p_u_model_8cpp.html",tooltip="Implementation of Model for graph-based networks."];
  Node24 -> Node12 [id="edge34_Node000024_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node17 [id="edge35_Node000024_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node13 [id="edge36_Node000024_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node26 [id="edge37_Node000024_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="Simulator/Edges/AllEdges.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_edges_8h.html",tooltip="An interface and top level implementation for edge classes."];
  Node26 -> Node11 [id="edge38_Node000026_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node27 [id="edge39_Node000026_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="Simulator/Connections\l/Connections.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections_8h.html",tooltip="The base class of all connections classes."];
  Node27 -> Node11 [id="edge40_Node000027_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node7 [id="edge41_Node000027_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node15 [id="edge42_Node000027_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node19 [id="edge43_Node000027_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node28 [id="edge44_Node000027_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="Simulator/Core/CPUModel.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_c_p_u_model_8h.html",tooltip="Implementation of Model for execution on CPU (single core)."];
  Node28 -> Node25 [id="edge45_Node000028_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node13 [id="edge46_Node000028_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node23 [id="edge47_Node000027_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node12 [id="edge48_Node000027_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node17 [id="edge49_Node000027_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node4 [id="edge50_Node000026_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node20 [id="edge51_Node000026_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node28 [id="edge52_Node000026_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node23 [id="edge53_Node000026_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node30 [id="edge54_Node000026_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="Simulator/Edges/AllEdges.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_edges_8cpp.html",tooltip="A container of all edge data."];
  Node26 -> Node31 [id="edge55_Node000026_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="Simulator/Edges/NG911\l/All911Edges.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all911_edges_8h.html",tooltip="A container of all 911 edge data."];
  Node31 -> Node10 [id="edge56_Node000031_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node72 [id="edge57_Node000026_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 [id="Node000072",label="Simulator/Vertices\l/AllVertices.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_vertices_8h.html",tooltip="A container of the base class of all vertex data."];
  Node72 -> Node11 [id="edge58_Node000072_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node27 [id="edge59_Node000072_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node20 [id="edge60_Node000072_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node28 [id="edge61_Node000072_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node23 [id="edge62_Node000072_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node30 [id="edge63_Node000072_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node86 [id="edge64_Node000072_Node000086",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="Simulator/Layouts/Layout.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_layout_8h.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node86 -> Node27 [id="edge65_Node000086_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node86 -> Node28 [id="edge66_Node000086_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node86 -> Node14 [id="edge67_Node000086_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node86 -> Node72 [id="edge68_Node000086_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node95 [id="edge69_Node000072_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="Simulator/Vertices\l/NG911/All911Vertices.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all911_vertices_8h.html",tooltip="A container of all 911 vertex data."];
  Node95 -> Node8 [id="edge70_Node000095_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 -> Node31 [id="edge71_Node000095_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 -> Node10 [id="edge72_Node000095_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 -> Node64 [id="edge73_Node000072_Node000064",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 [id="Node000064",label="Simulator/Vertices\l/Neuro/AllSpikingNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_spiking_neurons_8h.html",tooltip="A container of all spiking neuron data."];
  Node64 -> Node27 [id="edge74_Node000064_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 -> Node4 [id="edge75_Node000064_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 -> Node5 [id="edge76_Node000064_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node64 -> Node65 [id="edge77_Node000064_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="Simulator/Vertices\l/Neuro/AllIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_f_neurons_8h.html",tooltip="A container of all Integate and Fire (IF) neuron data."];
  Node65 -> Node18 [id="edge78_Node000065_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 -> Node22 [id="edge79_Node000065_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 -> Node5 [id="edge80_Node000065_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 -> Node69 [id="edge81_Node000065_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="Simulator/Vertices\l/Neuro/AllIZHNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_z_h_neurons_8h.html",tooltip="A container of all Izhikevich neuron data."];
  Node69 -> Node10 [id="edge82_Node000069_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node65 -> Node61 [id="edge83_Node000065_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="Simulator/Vertices\l/Neuro/AllLIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_l_i_f_neurons_8h.html",tooltip="A container of all LIF neuron data."];
  Node61 -> Node10 [id="edge84_Node000061_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node38 [id="edge85_Node000024_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="Simulator/Edges/Neuro\l/AllDSSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_d_s_synapses__d_8cpp.html",tooltip="A container of all DS synapse data."];
  Node24 -> Node45 [id="edge86_Node000024_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="Simulator/Edges/Neuro\l/AllDynamicSTDPSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_dynamic_s_t_d_p_synapses__d_8cpp.html",tooltip="A container of all dynamic STDP synapse data."];
  Node24 -> Node14 [id="edge87_Node000024_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node18 [id="edge88_Node000024_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node22 [id="edge89_Node000024_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node78 [id="edge90_Node000024_Node000078",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="Simulator/Utils/Inputs\l/ISInput.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_i_s_input_8h.html",tooltip="An interface for stimulus input classes."];
  Node24 -> Node72 [id="edge91_Node000024_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node26 [id="edge92_Node000006_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node86 [id="edge93_Node000006_Node000086",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node77 [id="edge94_Node000006_Node000077",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="Simulator/Recorders\l/XmlRecorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml_recorder_8h.html",tooltip="An implementation for recording spikes history on xml file."];
  Node77 -> Node20 [id="edge95_Node000077_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node5 [id="edge96_Node000077_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node10 [id="edge97_Node000077_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node96 [id="edge98_Node000006_Node000096",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node96 [id="Node000096",label="Simulator/Utils/Global.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_global_8cpp.html",tooltip="Globally available functions/variables and default parameter values."];
  Node6 -> Node97 [id="edge99_Node000006_Node000097",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node97 [id="Node000097",label="Simulator/Utils/GraphManager.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_graph_manager_8h.html",tooltip="A basic Template Circular Buffer."];
  Node97 -> Node8 [id="edge100_Node000097_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node97 -> Node21 [id="edge101_Node000097_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node78 [id="edge102_Node000006_Node000078",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node99 [id="edge103_Node000006_Node000099",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node99 [id="Node000099",label="Simulator/Utils/Matrix\l/CompleteMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_complete_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 2D array."];
  Node6 -> Node2 [id="edge104_Node000006_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node100 [id="edge105_Node000006_Node000100",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node100 [id="Node000100",label="Simulator/Utils/Matrix\l/VectorMatrix.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_vector_matrix_8cpp.html",tooltip="An efficient implementation of a dynamically-allocated 1D array."];
  Node6 -> Node101 [id="edge106_Node000006_Node000101",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="Simulator/Vertices\l/EventBuffer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_event_buffer_8cpp.html",tooltip="Encapsulation of vertex event buffering."];
  Node6 -> Node102 [id="edge107_Node000006_Node000102",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 [id="Node000102",label="Simulator/Vertices\l/EventBuffer.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_event_buffer_8h.html",tooltip="Encapsulation of vertex event buffering."];
  Node102 -> Node77 [id="edge108_Node000102_Node000077",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 -> Node101 [id="edge109_Node000102_Node000101",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node102 -> Node64 [id="edge110_Node000102_Node000064",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node95 [id="edge111_Node000006_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node65 [id="edge112_Node000006_Node000065",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node69 [id="edge113_Node000006_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node61 [id="edge114_Node000006_Node000061",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node64 [id="edge115_Node000006_Node000064",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node103 [id="edge116_Node000003_Node000103",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 [id="Node000103",label="Simulator/Utils/Matrix\l/CompleteMatrix.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_complete_matrix_8h.html",tooltip="An efficient implementation of a dynamically-allocated 2D array."];
  Node103 -> Node4 [id="edge117_Node000103_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 -> Node99 [id="edge118_Node000103_Node000099",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node103 -> Node104 [id="edge119_Node000103_Node000104",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node104 [id="Node000104",label="Simulator/Utils/Matrix\l/MatrixFactory.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_factory_8h.html",tooltip="Deserializes Matrices from XML."];
  Node104 -> Node105 [id="edge120_Node000104_Node000105",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node105 [id="Node000105",label="Simulator/Utils/Matrix\l/MatrixFactory.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_factory_8cpp.html",tooltip="Deserializes Matrices from XML."];
  Node103 -> Node3 [id="edge121_Node000103_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node104 [id="edge122_Node000003_Node000104",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node1 [id="edge123_Node000003_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node100 [id="edge124_Node000003_Node000100",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
