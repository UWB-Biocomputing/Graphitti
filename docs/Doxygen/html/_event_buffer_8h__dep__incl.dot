digraph "Simulator/Vertices/EventBuffer.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Simulator/Vertices\l/EventBuffer.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Encapsulation of vertex event buffering."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Simulator/Recorders\l/XmlRecorder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_recorder_8h.html",tooltip="An implementation for recording spikes history on xml file."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Simulator/Connections\l/Neuro/ConnStatic.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_static_8cpp.html",tooltip="The model of the small world network."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Simulator/Recorders\l/NG911/Xml911Recorder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml911_recorder_8h.html",tooltip="Header file for Xml911Recorder.h."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Simulator/Recorders\l/NG911/Xml911Recorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml911_recorder_8cpp.html",tooltip="Header file for Xml911Recorder.h."];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Simulator/Utils/Factory.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_factory_8h.html",tooltip="A factory template for creating factory class for any subsystem that requires a factory to create a (..."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Simulator/Connections\l/Connections.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections_8cpp.html",tooltip="Methods for creating and updating connections."];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Simulator/Core/Model.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_model_8cpp.html",tooltip="Implementation of Model for the graph-based networks."];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Simulator/Core/Simulator.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8cpp.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node6 -> Node10 [id="edge9_Node000006_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Simulator/Layouts/Layout.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_layout_8cpp.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node2 -> Node11 [id="edge10_Node000002_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Simulator/Recorders\l/Neuro/XmlGrowthRecorder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_growth_recorder_8h.html",tooltip="Header file for XmlGrowthRecorder.h."];
  Node11 -> Node12 [id="edge11_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Simulator/Connections\l/Neuro/ConnGrowth.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth_8cpp.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node11 -> Node13 [id="edge12_Node000011_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Simulator/Recorders\l/Neuro/XmlGrowthRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_growth_recorder_8cpp.html",tooltip="An implementation for recording spikes history in an XML file for growth simulations."];
  Node11 -> Node6 [id="edge13_Node000011_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node14 [id="edge14_Node000002_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="Simulator/Recorders\l/Neuro/XmlSTDPRecorder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_s_t_d_p_recorder_8h.html",tooltip="An implementation for recording spikes history in an XML file for spike timining dependent plasticity..."];
  Node14 -> Node15 [id="edge15_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="Simulator/Recorders\l/Neuro/XmlSTDPRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_s_t_d_p_recorder_8cpp_source.html",tooltip=" "];
  Node14 -> Node6 [id="edge16_Node000014_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge17_Node000002_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Simulator/Recorders\l/XmlRecorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_xml_recorder_8cpp.html",tooltip="An implementation for recording spikes history on xml file."];
  Node2 -> Node6 [id="edge18_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge19_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="Simulator/Vertices\l/EventBuffer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_event_buffer_8cpp.html",tooltip="Encapsulation of vertex event buffering."];
  Node1 -> Node18 [id="edge20_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="Simulator/Vertices\l/Neuro/AllSpikingNeurons.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_spiking_neurons_8h.html",tooltip="A container of all spiking neuron data."];
  Node18 -> Node19 [id="edge21_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="Simulator/Connections\l/Connections.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections_8h.html",tooltip="The base class of all connections classes."];
  Node19 -> Node7 [id="edge22_Node000019_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node20 [id="edge23_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="Simulator/Connections\l/NG911/Connections911.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections911_8h.html",tooltip="The model of the static network."];
  Node20 -> Node21 [id="edge24_Node000020_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Simulator/Connections\l/NG911/Connections911.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections911_8cpp.html",tooltip="The model of the static network."];
  Node20 -> Node5 [id="edge25_Node000020_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node6 [id="edge26_Node000020_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node22 [id="edge27_Node000019_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Simulator/Connections\l/Neuro/ConnGrowth.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth_8h.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node22 -> Node12 [id="edge28_Node000022_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge29_Node000022_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Simulator/Connections\l/Neuro/ConnGrowth_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_growth__d_8cpp.html",tooltip="Update the weights of the Synapses in the simulation."];
  Node22 -> Node8 [id="edge30_Node000022_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node24 [id="edge31_Node000022_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="Simulator/Core/Serializer.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_serializer_8cpp.html",tooltip="Handles implementation details of serialization and deserialization of synapses."];
  Node22 -> Node13 [id="edge32_Node000022_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node16 [id="edge33_Node000022_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node6 [id="edge34_Node000022_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node25 [id="edge35_Node000019_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="Simulator/Connections\l/Neuro/ConnStatic.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_conn_static_8h.html",tooltip="The model of the small world network."];
  Node25 -> Node3 [id="edge36_Node000025_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node26 [id="edge37_Node000025_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="Simulator/Core/Core.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_core_8cpp.html",tooltip="Orchestrates most functionality in the simulation."];
  Node25 -> Node15 [id="edge38_Node000025_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node6 [id="edge39_Node000025_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node27 [id="edge40_Node000019_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="Simulator/Core/CPUModel.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_c_p_u_model_8h.html",tooltip="Implementation of Model for execution on CPU (single core)."];
  Node27 -> Node28 [id="edge41_Node000027_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="Simulator/Core/CPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_c_p_u_model_8cpp.html",tooltip="Implementation of Model for graph-based networks."];
  Node27 -> Node9 [id="edge42_Node000027_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node30 [id="edge43_Node000019_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="Simulator/Core/GPUModel.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_g_p_u_model_8cpp.html",tooltip="Implementation of Model for the spiking neural networks."];
  Node19 -> Node8 [id="edge44_Node000019_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node24 [id="edge45_Node000019_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node12 [id="edge46_Node000018_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node31 [id="edge47_Node000018_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="Simulator/Core/GPUModel.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_g_p_u_model_8h.html",tooltip="Implementation of Model for the graph-based networks."];
  Node31 -> Node30 [id="edge48_Node000031_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node24 [id="edge49_Node000031_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node9 [id="edge50_Node000031_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node32 [id="edge51_Node000031_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="Simulator/Edges/Neuro\l/AllDSSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_d_s_synapses__d_8cpp.html",tooltip="A container of all DS synapse data."];
  Node31 -> Node33 [id="edge52_Node000031_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="Simulator/Edges/Neuro\l/AllSTDPSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_s_t_d_p_synapses__d_8cpp.html",tooltip="A container of all STDP synapse data."];
  Node31 -> Node34 [id="edge53_Node000031_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="Simulator/Utils/Inputs\l/GpuSInputPoisson.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_gpu_s_input_poisson_8h.html",tooltip="A class that performs stimulus input (implementation Poisson on GPU)."];
  Node18 -> Node36 [id="edge54_Node000018_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="Simulator/Edges/Neuro\l/AllSTDPSynapses.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_s_t_d_p_synapses_8cpp.html",tooltip="A container of all STDP synapse data."];
  Node18 -> Node37 [id="edge55_Node000018_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="Simulator/Edges/Neuro\l/AllSTDPSynapses.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_s_t_d_p_synapses_8h.html",tooltip="A container of all STDP synapse data."];
  Node37 -> Node38 [id="edge56_Node000037_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="Simulator/Edges/Neuro\l/AllDynamicSTDPSynapses.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_dynamic_s_t_d_p_synapses_8h.html",tooltip="A container of all dynamic STDP synapse data."];
  Node38 -> Node40 [id="edge57_Node000038_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="Simulator/Edges/Neuro\l/AllDynamicSTDPSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_dynamic_s_t_d_p_synapses__d_8cpp.html",tooltip="A container of all dynamic STDP synapse data."];
  Node38 -> Node41 [id="edge58_Node000038_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="Simulator/Edges/Neuro\l/AllSynapsesDeviceFuncs_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_synapses_device_funcs__d_8cpp.html",tooltip="Device functions for synapse data."];
  Node38 -> Node6 [id="edge59_Node000038_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node36 [id="edge60_Node000037_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node33 [id="edge61_Node000037_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node42 [id="edge62_Node000037_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="Simulator/Edges/Neuro\l/AllSynapsesDeviceFuncs.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_synapses_device_funcs_8h.html",tooltip="Device functions for synapse data."];
  Node42 -> Node23 [id="edge63_Node000042_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node30 [id="edge64_Node000042_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node32 [id="edge65_Node000042_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node40 [id="edge66_Node000042_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node33 [id="edge67_Node000042_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node43 [id="edge68_Node000042_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="Simulator/Edges/Neuro\l/AllSpikingSynapses_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_spiking_synapses__d_8cpp_source.html",tooltip=" "];
  Node42 -> Node41 [id="edge69_Node000042_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node34 [id="edge70_Node000042_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 -> Node44 [id="edge71_Node000042_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="Simulator/Vertices\l/Neuro/AllVerticesDeviceFuncs.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_vertices_device_funcs_8h.html",tooltip="Device functions for vertices."];
  Node44 -> Node47 [id="edge72_Node000044_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="Simulator/Vertices\l/Neuro/AllVerticesDeviceFuncs_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_vertices_device_funcs__d_8cpp.html",tooltip="Device functions for vertices."];
  Node42 -> Node47 [id="edge73_Node000042_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node41 [id="edge74_Node000037_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node6 [id="edge75_Node000037_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 -> Node44 [id="edge76_Node000037_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node42 [id="edge77_Node000018_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node16 [id="edge78_Node000018_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node48 [id="edge79_Node000018_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="Simulator/Vertices\l/Neuro/AllIFNeurons.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_i_f_neurons_8h.html",tooltip="A container of all Integate and Fire (IF) neuron data."];
  Node48 -> Node49 [id="edge80_Node000048_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="Simulator/Recorders\l/Hdf5Recorder.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_hdf5_recorder_8cpp.html",tooltip="An implementation for recording spikes history on hdf5 file."];
  Node48 -> Node13 [id="edge81_Node000048_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node15 [id="edge82_Node000048_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node16 [id="edge83_Node000048_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node50 [id="edge84_Node000048_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="Simulator/Vertices\l/Neuro/AllIFNeurons.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_i_f_neurons_8cpp.html",tooltip="A container of all Integate and Fire (IF) neuron data."];
  Node48 -> Node51 [id="edge85_Node000048_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="Simulator/Vertices\l/Neuro/AllIFNeurons_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_i_f_neurons__d_8cpp.html",tooltip="A container of all Integate and Fire (IF) neuron data."];
  Node48 -> Node52 [id="edge86_Node000048_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="Simulator/Vertices\l/Neuro/AllIZHNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_z_h_neurons_8h.html",tooltip="A container of all Izhikevich neuron data."];
  Node52 -> Node6 [id="edge87_Node000052_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node44 [id="edge88_Node000052_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 -> Node54 [id="edge89_Node000048_Node000054",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="Simulator/Vertices\l/Neuro/AllLIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_l_i_f_neurons_8h.html",tooltip="A container of all LIF neuron data."];
  Node54 -> Node6 [id="edge90_Node000054_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node56 [id="edge91_Node000018_Node000056",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="Simulator/Vertices\l/Neuro/AllSpikingNeurons.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_spiking_neurons_8cpp.html",tooltip="A container of all spiking neuron data."];
  Node18 -> Node57 [id="edge92_Node000018_Node000057",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="Simulator/Vertices\l/Neuro/AllSpikingNeurons_d.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_spiking_neurons__d_8cpp_source.html",tooltip=" "];
}
