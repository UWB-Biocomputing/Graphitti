digraph "Simulator/Core/Simulator.cpp"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="Simulator/Core/Simulator.cpp",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Simulator.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_simulator_8h.html",tooltip="Platform independent base class for the Brain Grid simulator. Simulator is a singleton class (a class..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="BGTypes.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_b_g_types_8h.html",tooltip="Used to define uniform data type sizes based for all operating systems. Also used to test the speed o..."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Core/Model.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_model_8h.html",tooltip="Implementation of Model for graph-based networks."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="AllVertices.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_vertices_8h.html",tooltip="A container of the base class of all vertex data."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="AllEdges.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_edges_8h.html",tooltip="An interface and top level implementation for edge classes."];
  Node6 -> Node9 [id="edge6_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Global.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_global_8h.html",tooltip="Globally available functions/variables and default parameter values."];
  Node9 -> Node10 [id="edge7_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="cassert",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node11 [id="edge8_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="memory",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node12 [id="edge9_Node000009_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sstream",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node13 [id="edge10_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="inttypes.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node9 -> Node3 [id="edge11_Node000009_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node2 [id="edge12_Node000006_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node33 [id="edge13_Node000006_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="log4cplus/loggingmacros.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node6 -> Node8 [id="edge14_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="vector",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node5 -> Node3 [id="edge15_Node000005_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node34 [id="edge16_Node000005_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="Layout.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_layout_8h.html",tooltip="The Layout class defines the layout of neurons in neural networks."];
  Node34 -> Node5 [id="edge17_Node000034_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node9 [id="edge18_Node000034_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node33 [id="edge19_Node000034_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node11 [id="edge20_Node000034_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node8 [id="edge21_Node000034_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node2 [id="edge22_Node000005_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node33 [id="edge23_Node000005_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node35 [id="edge24_Node000004_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="IRecorder.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_i_recorder_8h.html",tooltip="An interface for recording spikes history."];
  Node35 -> Node5 [id="edge25_Node000035_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node33 [id="edge26_Node000035_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node34 [id="edge27_Node000004_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node33 [id="edge28_Node000004_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node11 [id="edge29_Node000004_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node9 [id="edge30_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node33 [id="edge31_Node000002_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node11 [id="edge32_Node000002_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node36 [id="edge33_Node000002_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="Timer.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_timer_8h.html",tooltip="Timer class, from CSS432."];
  Node1 -> Node38 [id="edge34_Node000001_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CPUModel.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_c_p_u_model_8h.html",tooltip="Implementation of Model for execution on CPU (single core)."];
  Node38 -> Node39 [id="edge35_Node000038_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="Connections/Connections.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_connections_8h.html",tooltip="The base class of all connections classes."];
  Node39 -> Node6 [id="edge36_Node000039_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node40 [id="edge37_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="AllSpikingNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_spiking_neurons_8h.html",tooltip="A container of all spiking neuron data."];
  Node40 -> Node41 [id="edge38_Node000040_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="AllSpikingSynapses.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_spiking_synapses_8h.html",tooltip="A container of all spiking synapse data."];
  Node40 -> Node5 [id="edge39_Node000040_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node9 [id="edge40_Node000040_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node40 -> Node8 [id="edge41_Node000040_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node41 [id="edge42_Node000039_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node5 [id="edge43_Node000039_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node35 [id="edge44_Node000039_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node34 [id="edge45_Node000039_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node33 [id="edge46_Node000039_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node11 [id="edge47_Node000039_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node6 [id="edge48_Node000038_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node34 [id="edge49_Node000038_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node5 [id="edge50_Node000038_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node44 [id="edge51_Node000001_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="GPUModel.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_g_p_u_model_8h.html",tooltip="Implementation of Model for the graph-based networks."];
  Node44 -> Node40 [id="edge52_Node000044_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node41 [id="edge53_Node000044_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node45 [id="edge54_Node000001_Node000045",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="OperationManager.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_operation_manager_8h.html",tooltip="Singleton instance method that registers and executes functions based on operation types."];
  Node45 -> Node46 [id="edge55_Node000045_Node000046",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="IFunctionNode.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_i_function_node_8h.html",tooltip="Interface for storing and invoking functions. Used to support different FunctionNode classes that def..."];
  Node46 -> Node47 [id="edge56_Node000046_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="Operations.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_operations_8h.html",tooltip="This class is public reference to the operation types that the OperationManager can register and exec..."];
  Node45 -> Node47 [id="edge57_Node000045_Node000047",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node48 [id="edge58_Node000045_Node000048",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="functional",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node45 -> Node31 [id="edge59_Node000045_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="list",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node45 -> Node33 [id="edge60_Node000045_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node45 -> Node11 [id="edge61_Node000045_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node49 [id="edge62_Node000001_Node000049",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="ParameterManager.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_parameter_manager_8h.html",tooltip="A singleton class which contains and manages access to the XML parameter file used by a simulator ins..."];
  Node49 -> Node3 [id="edge63_Node000049_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node30 [id="edge64_Node000049_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="tinyxml.h",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node49 -> Node11 [id="edge65_Node000049_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node49 -> Node20 [id="edge66_Node000049_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="string",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node49 -> Node8 [id="edge67_Node000049_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node50 [id="edge68_Node000001_Node000050",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="Utils/Factory.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_factory_8h.html",tooltip="A factory template for creating factory class for any subsystem that requires a factory to create a (..."];
  Node50 -> Node51 [id="edge69_Node000050_Node000051",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="map",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node50 -> Node11 [id="edge70_Node000050_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node20 [id="edge71_Node000050_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node52 [id="edge72_Node000050_Node000052",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="Connections/NG911/Connections911.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_connections911_8h.html",tooltip="The model of the static network."];
  Node52 -> Node39 [id="edge73_Node000052_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node9 [id="edge74_Node000052_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node2 [id="edge75_Node000052_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node52 -> Node8 [id="edge76_Node000052_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node53 [id="edge77_Node000050_Node000053",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="Connections/Neuro/ConnGrowth.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_conn_growth_8h.html",tooltip="The model of the activity-dependent neurite outgrowth."];
  Node53 -> Node39 [id="edge78_Node000053_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node9 [id="edge79_Node000053_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node2 [id="edge80_Node000053_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node53 -> Node8 [id="edge81_Node000053_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node54 [id="edge82_Node000050_Node000054",color="steelblue1",style="solid",tooltip=" "];
  Node54 [id="Node000054",label="Connections/Neuro/ConnStatic.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_conn_static_8h.html",tooltip="The model of the small world network."];
  Node54 -> Node39 [id="edge83_Node000054_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node9 [id="edge84_Node000054_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node2 [id="edge85_Node000054_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node54 -> Node8 [id="edge86_Node000054_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node55 [id="edge87_Node000050_Node000055",color="steelblue1",style="solid",tooltip=" "];
  Node55 [id="Node000055",label="Edges/NG911/All911Edges.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all911_edges_8h.html",tooltip="A container of all 911 edge data."];
  Node55 -> Node56 [id="edge88_Node000055_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node56 [id="Node000056",label="All911Vertices.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all911_vertices_8h.html",tooltip="A container of all 911 vertex data."];
  Node56 -> Node5 [id="edge89_Node000056_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node56 -> Node9 [id="edge90_Node000056_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node55 -> Node6 [id="edge91_Node000055_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node57 [id="edge92_Node000050_Node000057",color="steelblue1",style="solid",tooltip=" "];
  Node57 [id="Node000057",label="Edges/Neuro/AllDSSynapses.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_d_s_synapses_8h.html",tooltip="A container of all DS synapse data."];
  Node57 -> Node41 [id="edge93_Node000057_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node58 [id="edge94_Node000050_Node000058",color="steelblue1",style="solid",tooltip=" "];
  Node58 [id="Node000058",label="Edges/Neuro/AllDynamicSTDPSynapses.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_dynamic_s_t_d_p_synapses_8h.html",tooltip="A container of all dynamic STDP synapse data."];
  Node58 -> Node59 [id="edge95_Node000058_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="AllSTDPSynapses.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_all_s_t_d_p_synapses_8h.html",tooltip="A container of all STDP synapse data."];
  Node59 -> Node40 [id="edge96_Node000059_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node59 -> Node41 [id="edge97_Node000059_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node59 [id="edge98_Node000050_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node41 [id="edge99_Node000050_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node60 [id="edge100_Node000050_Node000060",color="steelblue1",style="solid",tooltip=" "];
  Node60 [id="Node000060",label="Layouts/NG911/Layout911.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_layout911_8h.html",tooltip="The Layout class defines the layout of vertices in networks."];
  Node60 -> Node34 [id="edge101_Node000060_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node61 [id="edge102_Node000050_Node000061",color="steelblue1",style="solid",tooltip=" "];
  Node61 [id="Node000061",label="Layouts/Neuro/DynamicLayout.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_dynamic_layout_8h.html",tooltip="The DynamicLayout class defines the layout of neurons in neural networks."];
  Node61 -> Node34 [id="edge103_Node000061_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node62 [id="edge104_Node000050_Node000062",color="steelblue1",style="solid",tooltip=" "];
  Node62 [id="Node000062",label="Layouts/Neuro/FixedLayout.h",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_layout_8h.html",tooltip="The Layout class defines the layout of vertices in neural networks."];
  Node62 -> Node34 [id="edge105_Node000062_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node56 [id="edge106_Node000050_Node000056",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node63 [id="edge107_Node000050_Node000063",color="steelblue1",style="solid",tooltip=" "];
  Node63 [id="Node000063",label="Vertices/Neuro/AllIZHNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_i_z_h_neurons_8h.html",tooltip="A container of all Izhikevich neuron data."];
  Node63 -> Node9 [id="edge108_Node000063_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node65 [id="edge109_Node000050_Node000065",color="steelblue1",style="solid",tooltip=" "];
  Node65 [id="Node000065",label="Vertices/Neuro/AllLIFNeurons.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_all_l_i_f_neurons_8h.html",tooltip="A container of all LIF neuron data."];
  Node65 -> Node41 [id="edge110_Node000065_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node65 -> Node9 [id="edge111_Node000065_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node35 [id="edge112_Node000050_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node66 [id="edge113_Node000050_Node000066",color="steelblue1",style="solid",tooltip=" "];
  Node66 [id="Node000066",label="Recorders/NG911/Xml911Recorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml911_recorder_8h.html",tooltip="Header file for Xml911Recorder.h."];
  Node66 -> Node4 [id="edge114_Node000066_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node66 -> Node67 [id="edge115_Node000066_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node67 [id="Node000067",label="XmlRecorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml_recorder_8h.html",tooltip="An implementation for recording spikes history on xml file."];
  Node67 -> Node9 [id="edge116_Node000067_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node67 -> Node35 [id="edge117_Node000067_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node67 -> Node4 [id="edge118_Node000067_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node67 -> Node8 [id="edge119_Node000067_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node69 [id="edge120_Node000050_Node000069",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="Recorders/Neuro/XmlGrowth\lRecorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml_growth_recorder_8h.html",tooltip="Header file for XmlGrowthRecorder.h."];
  Node69 -> Node4 [id="edge121_Node000069_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node69 -> Node67 [id="edge122_Node000069_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node70 [id="edge123_Node000050_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="Recorders/Neuro/XmlSTDPRecorder.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_xml_s_t_d_p_recorder_8h.html",tooltip="An implementation for recording spikes history in an XML file for spike timining dependent plasticity..."];
  Node70 -> Node4 [id="edge124_Node000070_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node70 -> Node67 [id="edge125_Node000070_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node67 [id="edge126_Node000050_Node000067",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node22 [id="edge127_Node000050_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="MTRand.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_m_t_rand_8h.html",tooltip="Mersenne Twister logic from Nvidia."];
  Node22 -> Node3 [id="edge128_Node000022_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node50 -> Node21 [id="edge129_Node000050_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Norm.h",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$_norm_8h.html",tooltip="Normally distributed random numbers."];
  Node21 -> Node22 [id="edge130_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node48 [id="edge131_Node000001_Node000048",color="steelblue1",style="solid",tooltip=" "];
}
